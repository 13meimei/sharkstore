// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: redispb.proto

/*
	Package redispb is a generated protocol buffer package.

	It is generated from these files:
		redispb.proto

	It has these top-level messages:
*/
package redispb

import (
	"fmt"
	"math"

	proto "github.com/golang/protobuf/proto"

	_ "github.com/gogo/protobuf/gogoproto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type KeyType int32

const (
	KeyType_Invalid KeyType = 0
	// key　元素 <ttl, type ...>
	KeyType_KEY_META         KeyType = 1
	KeyType_KEY_STRING       KeyType = 2
	KeyType_KEY_HASH         KeyType = 3
	KeyType_KEY_HASH_FIELD   KeyType = 4
	KeyType_KEY_SET          KeyType = 5
	KeyType_KEY_SET_MEMBER   KeyType = 6
	KeyType_KEY_LIST         KeyType = 7
	KeyType_KEY_LIST_ELEMENT KeyType = 8
	KeyType_KEY_ZSET         KeyType = 9
	KeyType_KEY_ZSET_SCORE   KeyType = 10
	// zset member rank
	KeyType_KEY_ZSET_SORT KeyType = 11
)

var KeyType_name = map[int32]string{
	0:  "Invalid",
	1:  "KEY_META",
	2:  "KEY_STRING",
	3:  "KEY_HASH",
	4:  "KEY_HASH_FIELD",
	5:  "KEY_SET",
	6:  "KEY_SET_MEMBER",
	7:  "KEY_LIST",
	8:  "KEY_LIST_ELEMENT",
	9:  "KEY_ZSET",
	10: "KEY_ZSET_SCORE",
	11: "KEY_ZSET_SORT",
}
var KeyType_value = map[string]int32{
	"Invalid":          0,
	"KEY_META":         1,
	"KEY_STRING":       2,
	"KEY_HASH":         3,
	"KEY_HASH_FIELD":   4,
	"KEY_SET":          5,
	"KEY_SET_MEMBER":   6,
	"KEY_LIST":         7,
	"KEY_LIST_ELEMENT": 8,
	"KEY_ZSET":         9,
	"KEY_ZSET_SCORE":   10,
	"KEY_ZSET_SORT":    11,
}

func (x KeyType) String() string {
	return proto.EnumName(KeyType_name, int32(x))
}
func (KeyType) EnumDescriptor() ([]byte, []int) { return fileDescriptorRedispb, []int{0} }

func init() {
	proto.RegisterEnum("redispb.KeyType", KeyType_name, KeyType_value)
}

func init() { proto.RegisterFile("redispb.proto", fileDescriptorRedispb) }

var fileDescriptorRedispb = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4a, 0x4d, 0xc9,
	0x2c, 0x2e, 0x48, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0xa5, 0x44, 0xd2,
	0xf3, 0xd3, 0xf3, 0xc1, 0x62, 0xfa, 0x20, 0x16, 0x44, 0x5a, 0xeb, 0x02, 0x23, 0x17, 0xbb, 0x77,
	0x6a, 0x65, 0x48, 0x65, 0x41, 0xaa, 0x10, 0x37, 0x17, 0xbb, 0x67, 0x5e, 0x59, 0x62, 0x4e, 0x66,
	0x8a, 0x00, 0x83, 0x10, 0x0f, 0x17, 0x87, 0xb7, 0x6b, 0x64, 0xbc, 0xaf, 0x6b, 0x88, 0xa3, 0x00,
	0xa3, 0x10, 0x1f, 0x17, 0x17, 0x88, 0x17, 0x1c, 0x12, 0xe4, 0xe9, 0xe7, 0x2e, 0xc0, 0x04, 0x93,
	0xf5, 0x70, 0x0c, 0xf6, 0x10, 0x60, 0x16, 0x12, 0xe2, 0xe2, 0x83, 0xf1, 0xe2, 0xdd, 0x3c, 0x5d,
	0x7d, 0x5c, 0x04, 0x58, 0x40, 0x86, 0x81, 0x75, 0xb8, 0x86, 0x08, 0xb0, 0xc2, 0x14, 0x04, 0xbb,
	0x86, 0xc4, 0xfb, 0xba, 0xfa, 0x3a, 0xb9, 0x06, 0x09, 0xb0, 0xc1, 0x8c, 0xf0, 0xf1, 0x0c, 0x0e,
	0x11, 0x60, 0x17, 0x12, 0xe1, 0x12, 0x80, 0xf1, 0xe2, 0x5d, 0x7d, 0x5c, 0x7d, 0x5d, 0xfd, 0x42,
	0x04, 0x38, 0x60, 0x6a, 0xa2, 0x40, 0xa6, 0x70, 0xc2, 0x4c, 0x01, 0xf1, 0xe2, 0x83, 0x9d, 0xfd,
	0x83, 0x5c, 0x05, 0xb8, 0x84, 0x04, 0xb9, 0x78, 0x11, 0x62, 0xfe, 0x41, 0x21, 0x02, 0xdc, 0x4e,
	0x02, 0x27, 0x1e, 0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0xe3, 0x8c, 0xc7,
	0x72, 0x0c, 0x49, 0x6c, 0x60, 0xbf, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x03, 0xea, 0x56,
	0xc5, 0x1b, 0x01, 0x00, 0x00,
}
