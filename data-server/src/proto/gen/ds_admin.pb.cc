// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ds_admin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ds_admin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ds_adminpb {
class AdminAuthDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AdminAuth>
     _instance;
} _AdminAuth_default_instance_;
class AdminRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AdminRequest>
     _instance;
} _AdminRequest_default_instance_;
class AdminResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AdminResponse>
     _instance;
} _AdminResponse_default_instance_;
class ConfigKeyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfigKey>
     _instance;
} _ConfigKey_default_instance_;
class ConfigItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfigItem>
     _instance;
} _ConfigItem_default_instance_;
class SetConfigRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetConfigRequest>
     _instance;
} _SetConfigRequest_default_instance_;
class SetConfigResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetConfigResponse>
     _instance;
} _SetConfigResponse_default_instance_;
class GetConfigRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetConfigRequest>
     _instance;
} _GetConfigRequest_default_instance_;
class GetConfigResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetConfigResponse>
     _instance;
} _GetConfigResponse_default_instance_;
class GetInfoRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetInfoRequest>
     _instance;
} _GetInfoRequest_default_instance_;
class GetInfoResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetInfoResponse>
     _instance;
} _GetInfoResponse_default_instance_;
class ForceSplitRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ForceSplitRequest>
     _instance;
} _ForceSplitRequest_default_instance_;
class ForceSplitResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ForceSplitResponse>
     _instance;
} _ForceSplitResponse_default_instance_;
class CompactionRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CompactionRequest>
     _instance;
} _CompactionRequest_default_instance_;
class CompactionResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CompactionResponse>
     _instance;
} _CompactionResponse_default_instance_;
class ClearQueueRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClearQueueRequest>
     _instance;
} _ClearQueueRequest_default_instance_;
class ClearQueueResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClearQueueResponse>
     _instance;
} _ClearQueueResponse_default_instance_;
class GetPendingsRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPendingsRequest>
     _instance;
} _GetPendingsRequest_default_instance_;
class GetPendingsResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPendingsResponse>
     _instance;
} _GetPendingsResponse_default_instance_;
class FlushDBRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FlushDBRequest>
     _instance;
} _FlushDBRequest_default_instance_;
class FlushDBResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FlushDBResponse>
     _instance;
} _FlushDBResponse_default_instance_;

namespace protobuf_ds_5fadmin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[21];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminAuth, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminAuth, epoch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminAuth, sign_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, typ_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, set_cfg_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, get_cfg_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, get_info_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, force_split_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, compaction_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, clear_queue_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, get_pendings_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminRequest, flush_db_req_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, error_msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, set_cfg_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, get_cfg_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, get_info_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, force_split_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, compaction_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, clear_queue_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, get_pendings_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdminResponse, flush_db_resp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigKey, section_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigKey, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigItem, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfigItem, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetConfigRequest, configs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetConfigRequest, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetConfigResponse, configs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInfoRequest, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetInfoResponse, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceSplitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceSplitRequest, range_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceSplitRequest, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceSplitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceSplitResponse, split_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactionRequest, range_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactionRequest, transaction_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactionResponse, begin_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompactionResponse, end_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearQueueRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearQueueRequest, queue_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearQueueResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearQueueResponse, cleared_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPendingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPendingsRequest, ptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPendingsRequest, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPendingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPendingsResponse, desc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushDBRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushDBRequest, wait_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FlushDBResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(AdminAuth)},
  { 8, -1, sizeof(AdminRequest)},
  { 23, -1, sizeof(AdminResponse)},
  { 38, -1, sizeof(ConfigKey)},
  { 45, -1, sizeof(ConfigItem)},
  { 52, -1, sizeof(SetConfigRequest)},
  { 58, -1, sizeof(SetConfigResponse)},
  { 63, -1, sizeof(GetConfigRequest)},
  { 69, -1, sizeof(GetConfigResponse)},
  { 75, -1, sizeof(GetInfoRequest)},
  { 81, -1, sizeof(GetInfoResponse)},
  { 87, -1, sizeof(ForceSplitRequest)},
  { 94, -1, sizeof(ForceSplitResponse)},
  { 100, -1, sizeof(CompactionRequest)},
  { 107, -1, sizeof(CompactionResponse)},
  { 114, -1, sizeof(ClearQueueRequest)},
  { 120, -1, sizeof(ClearQueueResponse)},
  { 126, -1, sizeof(GetPendingsRequest)},
  { 133, -1, sizeof(GetPendingsResponse)},
  { 139, -1, sizeof(FlushDBRequest)},
  { 145, -1, sizeof(FlushDBResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdminAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdminRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdminResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfigItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ForceSplitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ForceSplitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CompactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CompactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClearQueueRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClearQueueResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPendingsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPendingsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FlushDBRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FlushDBResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ds_admin.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 21);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AdminAuth_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AdminAuth_default_instance_);_AdminRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AdminRequest_default_instance_);_AdminResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AdminResponse_default_instance_);_ConfigKey_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfigKey_default_instance_);_ConfigItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfigItem_default_instance_);_SetConfigRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetConfigRequest_default_instance_);_SetConfigResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetConfigResponse_default_instance_);_GetConfigRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetConfigRequest_default_instance_);_GetConfigResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetConfigResponse_default_instance_);_GetInfoRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetInfoRequest_default_instance_);_GetInfoResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetInfoResponse_default_instance_);_ForceSplitRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ForceSplitRequest_default_instance_);_ForceSplitResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ForceSplitResponse_default_instance_);_CompactionRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CompactionRequest_default_instance_);_CompactionResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CompactionResponse_default_instance_);_ClearQueueRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClearQueueRequest_default_instance_);_ClearQueueResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClearQueueResponse_default_instance_);_GetPendingsRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPendingsRequest_default_instance_);_GetPendingsResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPendingsResponse_default_instance_);_FlushDBRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FlushDBRequest_default_instance_);_FlushDBResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FlushDBResponse_default_instance_);_AdminRequest_default_instance_._instance.get_mutable()->auth_ = const_cast< ::ds_adminpb::AdminAuth*>(
      ::ds_adminpb::AdminAuth::internal_default_instance());
  _AdminRequest_default_instance_._instance.get_mutable()->set_cfg_req_ = const_cast< ::ds_adminpb::SetConfigRequest*>(
      ::ds_adminpb::SetConfigRequest::internal_default_instance());
  _AdminRequest_default_instance_._instance.get_mutable()->get_cfg_req_ = const_cast< ::ds_adminpb::GetConfigRequest*>(
      ::ds_adminpb::GetConfigRequest::internal_default_instance());
  _AdminRequest_default_instance_._instance.get_mutable()->get_info_req_ = const_cast< ::ds_adminpb::GetInfoRequest*>(
      ::ds_adminpb::GetInfoRequest::internal_default_instance());
  _AdminRequest_default_instance_._instance.get_mutable()->force_split_req_ = const_cast< ::ds_adminpb::ForceSplitRequest*>(
      ::ds_adminpb::ForceSplitRequest::internal_default_instance());
  _AdminRequest_default_instance_._instance.get_mutable()->compaction_req_ = const_cast< ::ds_adminpb::CompactionRequest*>(
      ::ds_adminpb::CompactionRequest::internal_default_instance());
  _AdminRequest_default_instance_._instance.get_mutable()->clear_queue_req_ = const_cast< ::ds_adminpb::ClearQueueRequest*>(
      ::ds_adminpb::ClearQueueRequest::internal_default_instance());
  _AdminRequest_default_instance_._instance.get_mutable()->get_pendings_req_ = const_cast< ::ds_adminpb::GetPendingsRequest*>(
      ::ds_adminpb::GetPendingsRequest::internal_default_instance());
  _AdminRequest_default_instance_._instance.get_mutable()->flush_db_req_ = const_cast< ::ds_adminpb::FlushDBRequest*>(
      ::ds_adminpb::FlushDBRequest::internal_default_instance());
  _AdminResponse_default_instance_._instance.get_mutable()->set_cfg_resp_ = const_cast< ::ds_adminpb::SetConfigResponse*>(
      ::ds_adminpb::SetConfigResponse::internal_default_instance());
  _AdminResponse_default_instance_._instance.get_mutable()->get_cfg_resp_ = const_cast< ::ds_adminpb::GetConfigResponse*>(
      ::ds_adminpb::GetConfigResponse::internal_default_instance());
  _AdminResponse_default_instance_._instance.get_mutable()->get_info_response_ = const_cast< ::ds_adminpb::GetInfoResponse*>(
      ::ds_adminpb::GetInfoResponse::internal_default_instance());
  _AdminResponse_default_instance_._instance.get_mutable()->force_split_resp_ = const_cast< ::ds_adminpb::ForceSplitResponse*>(
      ::ds_adminpb::ForceSplitResponse::internal_default_instance());
  _AdminResponse_default_instance_._instance.get_mutable()->compaction_resp_ = const_cast< ::ds_adminpb::CompactionResponse*>(
      ::ds_adminpb::CompactionResponse::internal_default_instance());
  _AdminResponse_default_instance_._instance.get_mutable()->clear_queue_resp_ = const_cast< ::ds_adminpb::ClearQueueResponse*>(
      ::ds_adminpb::ClearQueueResponse::internal_default_instance());
  _AdminResponse_default_instance_._instance.get_mutable()->get_pendings_resp_ = const_cast< ::ds_adminpb::GetPendingsResponse*>(
      ::ds_adminpb::GetPendingsResponse::internal_default_instance());
  _AdminResponse_default_instance_._instance.get_mutable()->flush_db_resp_ = const_cast< ::ds_adminpb::FlushDBResponse*>(
      ::ds_adminpb::FlushDBResponse::internal_default_instance());
  _ConfigItem_default_instance_._instance.get_mutable()->key_ = const_cast< ::ds_adminpb::ConfigKey*>(
      ::ds_adminpb::ConfigKey::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016ds_admin.proto\022\nds_adminpb\"x\n\tAdminAut"
      "h\0220\n\006method\030\001 \001(\0162 .ds_adminpb.AdminAuth"
      ".AuthMethod\022\r\n\005epoch\030\002 \001(\003\022\014\n\004sign\030\003 \001(\t"
      "\"\034\n\nAuthMethod\022\016\n\nMD5_DIGEST\020\000\"\202\004\n\014Admin"
      "Request\022\"\n\003typ\030\001 \001(\0162\025.ds_adminpb.AdminT"
      "ype\022#\n\004auth\030\002 \001(\0132\025.ds_adminpb.AdminAuth"
      "\0221\n\013set_cfg_req\030\n \001(\0132\034.ds_adminpb.SetCo"
      "nfigRequest\0221\n\013get_cfg_req\030\013 \001(\0132\034.ds_ad"
      "minpb.GetConfigRequest\0220\n\014get_info_req\030\014"
      " \001(\0132\032.ds_adminpb.GetInfoRequest\0226\n\017forc"
      "e_split_req\030\r \001(\0132\035.ds_adminpb.ForceSpli"
      "tRequest\0225\n\016compaction_req\030\016 \001(\0132\035.ds_ad"
      "minpb.CompactionRequest\0226\n\017clear_queue_r"
      "eq\030\017 \001(\0132\035.ds_adminpb.ClearQueueRequest\022"
      "8\n\020get_pendings_req\030\020 \001(\0132\036.ds_adminpb.G"
      "etPendingsRequest\0220\n\014flush_db_req\030\021 \001(\0132"
      "\032.ds_adminpb.FlushDBRequest\"\357\003\n\rAdminRes"
      "ponse\022\014\n\004code\030\001 \001(\r\022\021\n\terror_msg\030\002 \001(\t\0223"
      "\n\014set_cfg_resp\030\n \001(\0132\035.ds_adminpb.SetCon"
      "figResponse\0223\n\014get_cfg_resp\030\013 \001(\0132\035.ds_a"
      "dminpb.GetConfigResponse\0226\n\021get_info_res"
      "ponse\030\014 \001(\0132\033.ds_adminpb.GetInfoResponse"
      "\0228\n\020force_split_resp\030\r \001(\0132\036.ds_adminpb."
      "ForceSplitResponse\0227\n\017compaction_resp\030\016 "
      "\001(\0132\036.ds_adminpb.CompactionResponse\0228\n\020c"
      "lear_queue_resp\030\017 \001(\0132\036.ds_adminpb.Clear"
      "QueueResponse\022:\n\021get_pendings_resp\030\020 \001(\013"
      "2\037.ds_adminpb.GetPendingsResponse\0222\n\rflu"
      "sh_db_resp\030\021 \001(\0132\033.ds_adminpb.FlushDBRes"
      "ponse\"*\n\tConfigKey\022\017\n\007section\030\001 \001(\t\022\014\n\004n"
      "ame\030\002 \001(\t\"\?\n\nConfigItem\022\"\n\003key\030\001 \001(\0132\025.d"
      "s_adminpb.ConfigKey\022\r\n\005value\030\002 \001(\t\";\n\020Se"
      "tConfigRequest\022\'\n\007configs\030\001 \003(\0132\026.ds_adm"
      "inpb.ConfigItem\"\023\n\021SetConfigResponse\"6\n\020"
      "GetConfigRequest\022\"\n\003key\030\001 \003(\0132\025.ds_admin"
      "pb.ConfigKey\"<\n\021GetConfigResponse\022\'\n\007con"
      "figs\030\001 \003(\0132\026.ds_adminpb.ConfigItem\"\036\n\016Ge"
      "tInfoRequest\022\014\n\004path\030\001 \001(\t\"\037\n\017GetInfoRes"
      "ponse\022\014\n\004data\030\001 \001(\t\"6\n\021ForceSplitRequest"
      "\022\020\n\010range_id\030\001 \001(\004\022\017\n\007version\030\002 \001(\004\"\'\n\022F"
      "orceSplitResponse\022\021\n\tsplit_key\030\001 \001(\014\"=\n\021"
      "CompactionRequest\022\020\n\010range_id\030\001 \001(\004\022\026\n\016t"
      "ransaction_id\030\002 \001(\003\"8\n\022CompactionRespons"
      "e\022\021\n\tbegin_key\030\001 \001(\014\022\017\n\007end_key\030\002 \001(\014\"\210\001"
      "\n\021ClearQueueRequest\022;\n\nqueue_type\030\001 \001(\0162"
      "\'.ds_adminpb.ClearQueueRequest.QueueType"
      "\"6\n\tQueueType\022\007\n\003ALL\020\000\022\017\n\013FAST_WORKER\020\001\022"
      "\017\n\013SLOW_WORKER\020\002\"%\n\022ClearQueueResponse\022\017"
      "\n\007cleared\030\001 \001(\004\"\262\001\n\022GetPendingsRequest\0229"
      "\n\005ptype\030\001 \001(\0162*.ds_adminpb.GetPendingsRe"
      "quest.PendingType\022\r\n\005count\030\002 \001(\004\"R\n\013Pend"
      "ingType\022\007\n\003ALL\020\000\022\n\n\006INSERT\020\001\022\n\n\006SELECT\020\002"
      "\022\020\n\014PONIT_SELECT\020\003\022\020\n\014RANGE_SELECT\020\004\"#\n\023"
      "GetPendingsResponse\022\014\n\004desc\030\001 \001(\t\"\036\n\016Flu"
      "shDBRequest\022\014\n\004wait\030\001 \001(\010\"\021\n\017FlushDBResp"
      "onse*\230\001\n\tAdminType\022\013\n\007UNKNOWN\020\000\022\016\n\nSET_C"
      "ONFIG\020\001\022\016\n\nGET_CONFIG\020\002\022\014\n\010GET_INFO\020\003\022\017\n"
      "\013FORCE_SPLIT\020\004\022\016\n\nCOMPACTION\020\005\022\017\n\013CLEAR_"
      "QUEUE\020\006\022\020\n\014GET_PENDINGS\020\007\022\014\n\010FLUSH_DB\020\010b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2367);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ds_admin.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ds_5fadmin_2eproto

const ::google::protobuf::EnumDescriptor* AdminAuth_AuthMethod_descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_enum_descriptors[0];
}
bool AdminAuth_AuthMethod_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AdminAuth_AuthMethod AdminAuth::MD5_DIGEST;
const AdminAuth_AuthMethod AdminAuth::AuthMethod_MIN;
const AdminAuth_AuthMethod AdminAuth::AuthMethod_MAX;
const int AdminAuth::AuthMethod_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClearQueueRequest_QueueType_descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_enum_descriptors[1];
}
bool ClearQueueRequest_QueueType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClearQueueRequest_QueueType ClearQueueRequest::ALL;
const ClearQueueRequest_QueueType ClearQueueRequest::FAST_WORKER;
const ClearQueueRequest_QueueType ClearQueueRequest::SLOW_WORKER;
const ClearQueueRequest_QueueType ClearQueueRequest::QueueType_MIN;
const ClearQueueRequest_QueueType ClearQueueRequest::QueueType_MAX;
const int ClearQueueRequest::QueueType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetPendingsRequest_PendingType_descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_enum_descriptors[2];
}
bool GetPendingsRequest_PendingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPendingsRequest_PendingType GetPendingsRequest::ALL;
const GetPendingsRequest_PendingType GetPendingsRequest::INSERT;
const GetPendingsRequest_PendingType GetPendingsRequest::SELECT;
const GetPendingsRequest_PendingType GetPendingsRequest::PONIT_SELECT;
const GetPendingsRequest_PendingType GetPendingsRequest::RANGE_SELECT;
const GetPendingsRequest_PendingType GetPendingsRequest::PendingType_MIN;
const GetPendingsRequest_PendingType GetPendingsRequest::PendingType_MAX;
const int GetPendingsRequest::PendingType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AdminType_descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_enum_descriptors[3];
}
bool AdminType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdminAuth::kMethodFieldNumber;
const int AdminAuth::kEpochFieldNumber;
const int AdminAuth::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdminAuth::AdminAuth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.AdminAuth)
}
AdminAuth::AdminAuth(const AdminAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  ::memcpy(&epoch_, &from.epoch_,
    static_cast<size_t>(reinterpret_cast<char*>(&method_) -
    reinterpret_cast<char*>(&epoch_)) + sizeof(method_));
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.AdminAuth)
}

void AdminAuth::SharedCtor() {
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&epoch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&method_) -
      reinterpret_cast<char*>(&epoch_)) + sizeof(method_));
  _cached_size_ = 0;
}

AdminAuth::~AdminAuth() {
  // @@protoc_insertion_point(destructor:ds_adminpb.AdminAuth)
  SharedDtor();
}

void AdminAuth::SharedDtor() {
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AdminAuth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdminAuth::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdminAuth& AdminAuth::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdminAuth* AdminAuth::New(::google::protobuf::Arena* arena) const {
  AdminAuth* n = new AdminAuth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdminAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.AdminAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&epoch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&method_) -
      reinterpret_cast<char*>(&epoch_)) + sizeof(method_));
  _internal_metadata_.Clear();
}

bool AdminAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.AdminAuth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ds_adminpb.AdminAuth.AuthMethod method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_method(static_cast< ::ds_adminpb::AdminAuth_AuthMethod >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 epoch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &epoch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sign = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign().data(), static_cast<int>(this->sign().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ds_adminpb.AdminAuth.sign"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.AdminAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.AdminAuth)
  return false;
#undef DO_
}

void AdminAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.AdminAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ds_adminpb.AdminAuth.AuthMethod method = 1;
  if (this->method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }

  // int64 epoch = 2;
  if (this->epoch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->epoch(), output);
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.AdminAuth.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sign(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.AdminAuth)
}

::google::protobuf::uint8* AdminAuth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.AdminAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ds_adminpb.AdminAuth.AuthMethod method = 1;
  if (this->method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }

  // int64 epoch = 2;
  if (this->epoch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->epoch(), target);
  }

  // string sign = 3;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.AdminAuth.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sign(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.AdminAuth)
  return target;
}

size_t AdminAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.AdminAuth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sign = 3;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  // int64 epoch = 2;
  if (this->epoch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->epoch());
  }

  // .ds_adminpb.AdminAuth.AuthMethod method = 1;
  if (this->method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdminAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.AdminAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const AdminAuth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdminAuth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.AdminAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.AdminAuth)
    MergeFrom(*source);
  }
}

void AdminAuth::MergeFrom(const AdminAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.AdminAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.epoch() != 0) {
    set_epoch(from.epoch());
  }
  if (from.method() != 0) {
    set_method(from.method());
  }
}

void AdminAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.AdminAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdminAuth::CopyFrom(const AdminAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.AdminAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdminAuth::IsInitialized() const {
  return true;
}

void AdminAuth::Swap(AdminAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdminAuth::InternalSwap(AdminAuth* other) {
  using std::swap;
  sign_.Swap(&other->sign_);
  swap(epoch_, other->epoch_);
  swap(method_, other->method_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdminAuth::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdminAuth

// .ds_adminpb.AdminAuth.AuthMethod method = 1;
void AdminAuth::clear_method() {
  method_ = 0;
}
::ds_adminpb::AdminAuth_AuthMethod AdminAuth::method() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminAuth.method)
  return static_cast< ::ds_adminpb::AdminAuth_AuthMethod >(method_);
}
void AdminAuth::set_method(::ds_adminpb::AdminAuth_AuthMethod value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.AdminAuth.method)
}

// int64 epoch = 2;
void AdminAuth::clear_epoch() {
  epoch_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AdminAuth::epoch() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminAuth.epoch)
  return epoch_;
}
void AdminAuth::set_epoch(::google::protobuf::int64 value) {
  
  epoch_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.AdminAuth.epoch)
}

// string sign = 3;
void AdminAuth::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdminAuth::sign() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminAuth.sign)
  return sign_.GetNoArena();
}
void AdminAuth::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.AdminAuth.sign)
}
#if LANG_CXX11
void AdminAuth::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.AdminAuth.sign)
}
#endif
void AdminAuth::set_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.AdminAuth.sign)
}
void AdminAuth::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.AdminAuth.sign)
}
::std::string* AdminAuth::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminAuth.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdminAuth::release_sign() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminAuth.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdminAuth::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminAuth.sign)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdminRequest::kTypFieldNumber;
const int AdminRequest::kAuthFieldNumber;
const int AdminRequest::kSetCfgReqFieldNumber;
const int AdminRequest::kGetCfgReqFieldNumber;
const int AdminRequest::kGetInfoReqFieldNumber;
const int AdminRequest::kForceSplitReqFieldNumber;
const int AdminRequest::kCompactionReqFieldNumber;
const int AdminRequest::kClearQueueReqFieldNumber;
const int AdminRequest::kGetPendingsReqFieldNumber;
const int AdminRequest::kFlushDbReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdminRequest::AdminRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.AdminRequest)
}
AdminRequest::AdminRequest(const AdminRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_auth()) {
    auth_ = new ::ds_adminpb::AdminAuth(*from.auth_);
  } else {
    auth_ = NULL;
  }
  if (from.has_set_cfg_req()) {
    set_cfg_req_ = new ::ds_adminpb::SetConfigRequest(*from.set_cfg_req_);
  } else {
    set_cfg_req_ = NULL;
  }
  if (from.has_get_cfg_req()) {
    get_cfg_req_ = new ::ds_adminpb::GetConfigRequest(*from.get_cfg_req_);
  } else {
    get_cfg_req_ = NULL;
  }
  if (from.has_get_info_req()) {
    get_info_req_ = new ::ds_adminpb::GetInfoRequest(*from.get_info_req_);
  } else {
    get_info_req_ = NULL;
  }
  if (from.has_force_split_req()) {
    force_split_req_ = new ::ds_adminpb::ForceSplitRequest(*from.force_split_req_);
  } else {
    force_split_req_ = NULL;
  }
  if (from.has_compaction_req()) {
    compaction_req_ = new ::ds_adminpb::CompactionRequest(*from.compaction_req_);
  } else {
    compaction_req_ = NULL;
  }
  if (from.has_clear_queue_req()) {
    clear_queue_req_ = new ::ds_adminpb::ClearQueueRequest(*from.clear_queue_req_);
  } else {
    clear_queue_req_ = NULL;
  }
  if (from.has_get_pendings_req()) {
    get_pendings_req_ = new ::ds_adminpb::GetPendingsRequest(*from.get_pendings_req_);
  } else {
    get_pendings_req_ = NULL;
  }
  if (from.has_flush_db_req()) {
    flush_db_req_ = new ::ds_adminpb::FlushDBRequest(*from.flush_db_req_);
  } else {
    flush_db_req_ = NULL;
  }
  typ_ = from.typ_;
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.AdminRequest)
}

void AdminRequest::SharedCtor() {
  ::memset(&auth_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&typ_) -
      reinterpret_cast<char*>(&auth_)) + sizeof(typ_));
  _cached_size_ = 0;
}

AdminRequest::~AdminRequest() {
  // @@protoc_insertion_point(destructor:ds_adminpb.AdminRequest)
  SharedDtor();
}

void AdminRequest::SharedDtor() {
  if (this != internal_default_instance()) delete auth_;
  if (this != internal_default_instance()) delete set_cfg_req_;
  if (this != internal_default_instance()) delete get_cfg_req_;
  if (this != internal_default_instance()) delete get_info_req_;
  if (this != internal_default_instance()) delete force_split_req_;
  if (this != internal_default_instance()) delete compaction_req_;
  if (this != internal_default_instance()) delete clear_queue_req_;
  if (this != internal_default_instance()) delete get_pendings_req_;
  if (this != internal_default_instance()) delete flush_db_req_;
}

void AdminRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdminRequest::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdminRequest& AdminRequest::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdminRequest* AdminRequest::New(::google::protobuf::Arena* arena) const {
  AdminRequest* n = new AdminRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdminRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.AdminRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && auth_ != NULL) {
    delete auth_;
  }
  auth_ = NULL;
  if (GetArenaNoVirtual() == NULL && set_cfg_req_ != NULL) {
    delete set_cfg_req_;
  }
  set_cfg_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && get_cfg_req_ != NULL) {
    delete get_cfg_req_;
  }
  get_cfg_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && get_info_req_ != NULL) {
    delete get_info_req_;
  }
  get_info_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && force_split_req_ != NULL) {
    delete force_split_req_;
  }
  force_split_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && compaction_req_ != NULL) {
    delete compaction_req_;
  }
  compaction_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && clear_queue_req_ != NULL) {
    delete clear_queue_req_;
  }
  clear_queue_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && get_pendings_req_ != NULL) {
    delete get_pendings_req_;
  }
  get_pendings_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && flush_db_req_ != NULL) {
    delete flush_db_req_;
  }
  flush_db_req_ = NULL;
  typ_ = 0;
  _internal_metadata_.Clear();
}

bool AdminRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.AdminRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ds_adminpb.AdminType typ = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_typ(static_cast< ::ds_adminpb::AdminType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.AdminAuth auth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.SetConfigRequest set_cfg_req = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_cfg_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.GetConfigRequest get_cfg_req = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_cfg_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.GetInfoRequest get_info_req = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_info_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.ForceSplitRequest force_split_req = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_force_split_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.CompactionRequest compaction_req = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compaction_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.ClearQueueRequest clear_queue_req = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clear_queue_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.GetPendingsRequest get_pendings_req = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_pendings_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.FlushDBRequest flush_db_req = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_flush_db_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.AdminRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.AdminRequest)
  return false;
#undef DO_
}

void AdminRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.AdminRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ds_adminpb.AdminType typ = 1;
  if (this->typ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->typ(), output);
  }

  // .ds_adminpb.AdminAuth auth = 2;
  if (this->has_auth()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->auth_, output);
  }

  // .ds_adminpb.SetConfigRequest set_cfg_req = 10;
  if (this->has_set_cfg_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->set_cfg_req_, output);
  }

  // .ds_adminpb.GetConfigRequest get_cfg_req = 11;
  if (this->has_get_cfg_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->get_cfg_req_, output);
  }

  // .ds_adminpb.GetInfoRequest get_info_req = 12;
  if (this->has_get_info_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->get_info_req_, output);
  }

  // .ds_adminpb.ForceSplitRequest force_split_req = 13;
  if (this->has_force_split_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->force_split_req_, output);
  }

  // .ds_adminpb.CompactionRequest compaction_req = 14;
  if (this->has_compaction_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->compaction_req_, output);
  }

  // .ds_adminpb.ClearQueueRequest clear_queue_req = 15;
  if (this->has_clear_queue_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->clear_queue_req_, output);
  }

  // .ds_adminpb.GetPendingsRequest get_pendings_req = 16;
  if (this->has_get_pendings_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->get_pendings_req_, output);
  }

  // .ds_adminpb.FlushDBRequest flush_db_req = 17;
  if (this->has_flush_db_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->flush_db_req_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.AdminRequest)
}

::google::protobuf::uint8* AdminRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.AdminRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ds_adminpb.AdminType typ = 1;
  if (this->typ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->typ(), target);
  }

  // .ds_adminpb.AdminAuth auth = 2;
  if (this->has_auth()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->auth_, deterministic, target);
  }

  // .ds_adminpb.SetConfigRequest set_cfg_req = 10;
  if (this->has_set_cfg_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->set_cfg_req_, deterministic, target);
  }

  // .ds_adminpb.GetConfigRequest get_cfg_req = 11;
  if (this->has_get_cfg_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->get_cfg_req_, deterministic, target);
  }

  // .ds_adminpb.GetInfoRequest get_info_req = 12;
  if (this->has_get_info_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->get_info_req_, deterministic, target);
  }

  // .ds_adminpb.ForceSplitRequest force_split_req = 13;
  if (this->has_force_split_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->force_split_req_, deterministic, target);
  }

  // .ds_adminpb.CompactionRequest compaction_req = 14;
  if (this->has_compaction_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->compaction_req_, deterministic, target);
  }

  // .ds_adminpb.ClearQueueRequest clear_queue_req = 15;
  if (this->has_clear_queue_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->clear_queue_req_, deterministic, target);
  }

  // .ds_adminpb.GetPendingsRequest get_pendings_req = 16;
  if (this->has_get_pendings_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->get_pendings_req_, deterministic, target);
  }

  // .ds_adminpb.FlushDBRequest flush_db_req = 17;
  if (this->has_flush_db_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->flush_db_req_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.AdminRequest)
  return target;
}

size_t AdminRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.AdminRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ds_adminpb.AdminAuth auth = 2;
  if (this->has_auth()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->auth_);
  }

  // .ds_adminpb.SetConfigRequest set_cfg_req = 10;
  if (this->has_set_cfg_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->set_cfg_req_);
  }

  // .ds_adminpb.GetConfigRequest get_cfg_req = 11;
  if (this->has_get_cfg_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->get_cfg_req_);
  }

  // .ds_adminpb.GetInfoRequest get_info_req = 12;
  if (this->has_get_info_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->get_info_req_);
  }

  // .ds_adminpb.ForceSplitRequest force_split_req = 13;
  if (this->has_force_split_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->force_split_req_);
  }

  // .ds_adminpb.CompactionRequest compaction_req = 14;
  if (this->has_compaction_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->compaction_req_);
  }

  // .ds_adminpb.ClearQueueRequest clear_queue_req = 15;
  if (this->has_clear_queue_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->clear_queue_req_);
  }

  // .ds_adminpb.GetPendingsRequest get_pendings_req = 16;
  if (this->has_get_pendings_req()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->get_pendings_req_);
  }

  // .ds_adminpb.FlushDBRequest flush_db_req = 17;
  if (this->has_flush_db_req()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->flush_db_req_);
  }

  // .ds_adminpb.AdminType typ = 1;
  if (this->typ() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->typ());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdminRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.AdminRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AdminRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdminRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.AdminRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.AdminRequest)
    MergeFrom(*source);
  }
}

void AdminRequest::MergeFrom(const AdminRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.AdminRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_auth()) {
    mutable_auth()->::ds_adminpb::AdminAuth::MergeFrom(from.auth());
  }
  if (from.has_set_cfg_req()) {
    mutable_set_cfg_req()->::ds_adminpb::SetConfigRequest::MergeFrom(from.set_cfg_req());
  }
  if (from.has_get_cfg_req()) {
    mutable_get_cfg_req()->::ds_adminpb::GetConfigRequest::MergeFrom(from.get_cfg_req());
  }
  if (from.has_get_info_req()) {
    mutable_get_info_req()->::ds_adminpb::GetInfoRequest::MergeFrom(from.get_info_req());
  }
  if (from.has_force_split_req()) {
    mutable_force_split_req()->::ds_adminpb::ForceSplitRequest::MergeFrom(from.force_split_req());
  }
  if (from.has_compaction_req()) {
    mutable_compaction_req()->::ds_adminpb::CompactionRequest::MergeFrom(from.compaction_req());
  }
  if (from.has_clear_queue_req()) {
    mutable_clear_queue_req()->::ds_adminpb::ClearQueueRequest::MergeFrom(from.clear_queue_req());
  }
  if (from.has_get_pendings_req()) {
    mutable_get_pendings_req()->::ds_adminpb::GetPendingsRequest::MergeFrom(from.get_pendings_req());
  }
  if (from.has_flush_db_req()) {
    mutable_flush_db_req()->::ds_adminpb::FlushDBRequest::MergeFrom(from.flush_db_req());
  }
  if (from.typ() != 0) {
    set_typ(from.typ());
  }
}

void AdminRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.AdminRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdminRequest::CopyFrom(const AdminRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.AdminRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdminRequest::IsInitialized() const {
  return true;
}

void AdminRequest::Swap(AdminRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdminRequest::InternalSwap(AdminRequest* other) {
  using std::swap;
  swap(auth_, other->auth_);
  swap(set_cfg_req_, other->set_cfg_req_);
  swap(get_cfg_req_, other->get_cfg_req_);
  swap(get_info_req_, other->get_info_req_);
  swap(force_split_req_, other->force_split_req_);
  swap(compaction_req_, other->compaction_req_);
  swap(clear_queue_req_, other->clear_queue_req_);
  swap(get_pendings_req_, other->get_pendings_req_);
  swap(flush_db_req_, other->flush_db_req_);
  swap(typ_, other->typ_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdminRequest::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdminRequest

// .ds_adminpb.AdminType typ = 1;
void AdminRequest::clear_typ() {
  typ_ = 0;
}
::ds_adminpb::AdminType AdminRequest::typ() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminRequest.typ)
  return static_cast< ::ds_adminpb::AdminType >(typ_);
}
void AdminRequest::set_typ(::ds_adminpb::AdminType value) {
  
  typ_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.AdminRequest.typ)
}

// .ds_adminpb.AdminAuth auth = 2;
bool AdminRequest::has_auth() const {
  return this != internal_default_instance() && auth_ != NULL;
}
void AdminRequest::clear_auth() {
  if (GetArenaNoVirtual() == NULL && auth_ != NULL) delete auth_;
  auth_ = NULL;
}
const ::ds_adminpb::AdminAuth& AdminRequest::auth() const {
  const ::ds_adminpb::AdminAuth* p = auth_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminRequest.auth)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::AdminAuth*>(
      &::ds_adminpb::_AdminAuth_default_instance_);
}
::ds_adminpb::AdminAuth* AdminRequest::mutable_auth() {
  
  if (auth_ == NULL) {
    auth_ = new ::ds_adminpb::AdminAuth;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminRequest.auth)
  return auth_;
}
::ds_adminpb::AdminAuth* AdminRequest::release_auth() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminRequest.auth)
  
  ::ds_adminpb::AdminAuth* temp = auth_;
  auth_ = NULL;
  return temp;
}
void AdminRequest::set_allocated_auth(::ds_adminpb::AdminAuth* auth) {
  delete auth_;
  auth_ = auth;
  if (auth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminRequest.auth)
}

// .ds_adminpb.SetConfigRequest set_cfg_req = 10;
bool AdminRequest::has_set_cfg_req() const {
  return this != internal_default_instance() && set_cfg_req_ != NULL;
}
void AdminRequest::clear_set_cfg_req() {
  if (GetArenaNoVirtual() == NULL && set_cfg_req_ != NULL) delete set_cfg_req_;
  set_cfg_req_ = NULL;
}
const ::ds_adminpb::SetConfigRequest& AdminRequest::set_cfg_req() const {
  const ::ds_adminpb::SetConfigRequest* p = set_cfg_req_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminRequest.set_cfg_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::SetConfigRequest*>(
      &::ds_adminpb::_SetConfigRequest_default_instance_);
}
::ds_adminpb::SetConfigRequest* AdminRequest::mutable_set_cfg_req() {
  
  if (set_cfg_req_ == NULL) {
    set_cfg_req_ = new ::ds_adminpb::SetConfigRequest;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminRequest.set_cfg_req)
  return set_cfg_req_;
}
::ds_adminpb::SetConfigRequest* AdminRequest::release_set_cfg_req() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminRequest.set_cfg_req)
  
  ::ds_adminpb::SetConfigRequest* temp = set_cfg_req_;
  set_cfg_req_ = NULL;
  return temp;
}
void AdminRequest::set_allocated_set_cfg_req(::ds_adminpb::SetConfigRequest* set_cfg_req) {
  delete set_cfg_req_;
  set_cfg_req_ = set_cfg_req;
  if (set_cfg_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminRequest.set_cfg_req)
}

// .ds_adminpb.GetConfigRequest get_cfg_req = 11;
bool AdminRequest::has_get_cfg_req() const {
  return this != internal_default_instance() && get_cfg_req_ != NULL;
}
void AdminRequest::clear_get_cfg_req() {
  if (GetArenaNoVirtual() == NULL && get_cfg_req_ != NULL) delete get_cfg_req_;
  get_cfg_req_ = NULL;
}
const ::ds_adminpb::GetConfigRequest& AdminRequest::get_cfg_req() const {
  const ::ds_adminpb::GetConfigRequest* p = get_cfg_req_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminRequest.get_cfg_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::GetConfigRequest*>(
      &::ds_adminpb::_GetConfigRequest_default_instance_);
}
::ds_adminpb::GetConfigRequest* AdminRequest::mutable_get_cfg_req() {
  
  if (get_cfg_req_ == NULL) {
    get_cfg_req_ = new ::ds_adminpb::GetConfigRequest;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminRequest.get_cfg_req)
  return get_cfg_req_;
}
::ds_adminpb::GetConfigRequest* AdminRequest::release_get_cfg_req() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminRequest.get_cfg_req)
  
  ::ds_adminpb::GetConfigRequest* temp = get_cfg_req_;
  get_cfg_req_ = NULL;
  return temp;
}
void AdminRequest::set_allocated_get_cfg_req(::ds_adminpb::GetConfigRequest* get_cfg_req) {
  delete get_cfg_req_;
  get_cfg_req_ = get_cfg_req;
  if (get_cfg_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminRequest.get_cfg_req)
}

// .ds_adminpb.GetInfoRequest get_info_req = 12;
bool AdminRequest::has_get_info_req() const {
  return this != internal_default_instance() && get_info_req_ != NULL;
}
void AdminRequest::clear_get_info_req() {
  if (GetArenaNoVirtual() == NULL && get_info_req_ != NULL) delete get_info_req_;
  get_info_req_ = NULL;
}
const ::ds_adminpb::GetInfoRequest& AdminRequest::get_info_req() const {
  const ::ds_adminpb::GetInfoRequest* p = get_info_req_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminRequest.get_info_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::GetInfoRequest*>(
      &::ds_adminpb::_GetInfoRequest_default_instance_);
}
::ds_adminpb::GetInfoRequest* AdminRequest::mutable_get_info_req() {
  
  if (get_info_req_ == NULL) {
    get_info_req_ = new ::ds_adminpb::GetInfoRequest;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminRequest.get_info_req)
  return get_info_req_;
}
::ds_adminpb::GetInfoRequest* AdminRequest::release_get_info_req() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminRequest.get_info_req)
  
  ::ds_adminpb::GetInfoRequest* temp = get_info_req_;
  get_info_req_ = NULL;
  return temp;
}
void AdminRequest::set_allocated_get_info_req(::ds_adminpb::GetInfoRequest* get_info_req) {
  delete get_info_req_;
  get_info_req_ = get_info_req;
  if (get_info_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminRequest.get_info_req)
}

// .ds_adminpb.ForceSplitRequest force_split_req = 13;
bool AdminRequest::has_force_split_req() const {
  return this != internal_default_instance() && force_split_req_ != NULL;
}
void AdminRequest::clear_force_split_req() {
  if (GetArenaNoVirtual() == NULL && force_split_req_ != NULL) delete force_split_req_;
  force_split_req_ = NULL;
}
const ::ds_adminpb::ForceSplitRequest& AdminRequest::force_split_req() const {
  const ::ds_adminpb::ForceSplitRequest* p = force_split_req_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminRequest.force_split_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::ForceSplitRequest*>(
      &::ds_adminpb::_ForceSplitRequest_default_instance_);
}
::ds_adminpb::ForceSplitRequest* AdminRequest::mutable_force_split_req() {
  
  if (force_split_req_ == NULL) {
    force_split_req_ = new ::ds_adminpb::ForceSplitRequest;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminRequest.force_split_req)
  return force_split_req_;
}
::ds_adminpb::ForceSplitRequest* AdminRequest::release_force_split_req() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminRequest.force_split_req)
  
  ::ds_adminpb::ForceSplitRequest* temp = force_split_req_;
  force_split_req_ = NULL;
  return temp;
}
void AdminRequest::set_allocated_force_split_req(::ds_adminpb::ForceSplitRequest* force_split_req) {
  delete force_split_req_;
  force_split_req_ = force_split_req;
  if (force_split_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminRequest.force_split_req)
}

// .ds_adminpb.CompactionRequest compaction_req = 14;
bool AdminRequest::has_compaction_req() const {
  return this != internal_default_instance() && compaction_req_ != NULL;
}
void AdminRequest::clear_compaction_req() {
  if (GetArenaNoVirtual() == NULL && compaction_req_ != NULL) delete compaction_req_;
  compaction_req_ = NULL;
}
const ::ds_adminpb::CompactionRequest& AdminRequest::compaction_req() const {
  const ::ds_adminpb::CompactionRequest* p = compaction_req_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminRequest.compaction_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::CompactionRequest*>(
      &::ds_adminpb::_CompactionRequest_default_instance_);
}
::ds_adminpb::CompactionRequest* AdminRequest::mutable_compaction_req() {
  
  if (compaction_req_ == NULL) {
    compaction_req_ = new ::ds_adminpb::CompactionRequest;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminRequest.compaction_req)
  return compaction_req_;
}
::ds_adminpb::CompactionRequest* AdminRequest::release_compaction_req() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminRequest.compaction_req)
  
  ::ds_adminpb::CompactionRequest* temp = compaction_req_;
  compaction_req_ = NULL;
  return temp;
}
void AdminRequest::set_allocated_compaction_req(::ds_adminpb::CompactionRequest* compaction_req) {
  delete compaction_req_;
  compaction_req_ = compaction_req;
  if (compaction_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminRequest.compaction_req)
}

// .ds_adminpb.ClearQueueRequest clear_queue_req = 15;
bool AdminRequest::has_clear_queue_req() const {
  return this != internal_default_instance() && clear_queue_req_ != NULL;
}
void AdminRequest::clear_clear_queue_req() {
  if (GetArenaNoVirtual() == NULL && clear_queue_req_ != NULL) delete clear_queue_req_;
  clear_queue_req_ = NULL;
}
const ::ds_adminpb::ClearQueueRequest& AdminRequest::clear_queue_req() const {
  const ::ds_adminpb::ClearQueueRequest* p = clear_queue_req_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminRequest.clear_queue_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::ClearQueueRequest*>(
      &::ds_adminpb::_ClearQueueRequest_default_instance_);
}
::ds_adminpb::ClearQueueRequest* AdminRequest::mutable_clear_queue_req() {
  
  if (clear_queue_req_ == NULL) {
    clear_queue_req_ = new ::ds_adminpb::ClearQueueRequest;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminRequest.clear_queue_req)
  return clear_queue_req_;
}
::ds_adminpb::ClearQueueRequest* AdminRequest::release_clear_queue_req() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminRequest.clear_queue_req)
  
  ::ds_adminpb::ClearQueueRequest* temp = clear_queue_req_;
  clear_queue_req_ = NULL;
  return temp;
}
void AdminRequest::set_allocated_clear_queue_req(::ds_adminpb::ClearQueueRequest* clear_queue_req) {
  delete clear_queue_req_;
  clear_queue_req_ = clear_queue_req;
  if (clear_queue_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminRequest.clear_queue_req)
}

// .ds_adminpb.GetPendingsRequest get_pendings_req = 16;
bool AdminRequest::has_get_pendings_req() const {
  return this != internal_default_instance() && get_pendings_req_ != NULL;
}
void AdminRequest::clear_get_pendings_req() {
  if (GetArenaNoVirtual() == NULL && get_pendings_req_ != NULL) delete get_pendings_req_;
  get_pendings_req_ = NULL;
}
const ::ds_adminpb::GetPendingsRequest& AdminRequest::get_pendings_req() const {
  const ::ds_adminpb::GetPendingsRequest* p = get_pendings_req_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminRequest.get_pendings_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::GetPendingsRequest*>(
      &::ds_adminpb::_GetPendingsRequest_default_instance_);
}
::ds_adminpb::GetPendingsRequest* AdminRequest::mutable_get_pendings_req() {
  
  if (get_pendings_req_ == NULL) {
    get_pendings_req_ = new ::ds_adminpb::GetPendingsRequest;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminRequest.get_pendings_req)
  return get_pendings_req_;
}
::ds_adminpb::GetPendingsRequest* AdminRequest::release_get_pendings_req() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminRequest.get_pendings_req)
  
  ::ds_adminpb::GetPendingsRequest* temp = get_pendings_req_;
  get_pendings_req_ = NULL;
  return temp;
}
void AdminRequest::set_allocated_get_pendings_req(::ds_adminpb::GetPendingsRequest* get_pendings_req) {
  delete get_pendings_req_;
  get_pendings_req_ = get_pendings_req;
  if (get_pendings_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminRequest.get_pendings_req)
}

// .ds_adminpb.FlushDBRequest flush_db_req = 17;
bool AdminRequest::has_flush_db_req() const {
  return this != internal_default_instance() && flush_db_req_ != NULL;
}
void AdminRequest::clear_flush_db_req() {
  if (GetArenaNoVirtual() == NULL && flush_db_req_ != NULL) delete flush_db_req_;
  flush_db_req_ = NULL;
}
const ::ds_adminpb::FlushDBRequest& AdminRequest::flush_db_req() const {
  const ::ds_adminpb::FlushDBRequest* p = flush_db_req_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminRequest.flush_db_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::FlushDBRequest*>(
      &::ds_adminpb::_FlushDBRequest_default_instance_);
}
::ds_adminpb::FlushDBRequest* AdminRequest::mutable_flush_db_req() {
  
  if (flush_db_req_ == NULL) {
    flush_db_req_ = new ::ds_adminpb::FlushDBRequest;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminRequest.flush_db_req)
  return flush_db_req_;
}
::ds_adminpb::FlushDBRequest* AdminRequest::release_flush_db_req() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminRequest.flush_db_req)
  
  ::ds_adminpb::FlushDBRequest* temp = flush_db_req_;
  flush_db_req_ = NULL;
  return temp;
}
void AdminRequest::set_allocated_flush_db_req(::ds_adminpb::FlushDBRequest* flush_db_req) {
  delete flush_db_req_;
  flush_db_req_ = flush_db_req;
  if (flush_db_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminRequest.flush_db_req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdminResponse::kCodeFieldNumber;
const int AdminResponse::kErrorMsgFieldNumber;
const int AdminResponse::kSetCfgRespFieldNumber;
const int AdminResponse::kGetCfgRespFieldNumber;
const int AdminResponse::kGetInfoResponseFieldNumber;
const int AdminResponse::kForceSplitRespFieldNumber;
const int AdminResponse::kCompactionRespFieldNumber;
const int AdminResponse::kClearQueueRespFieldNumber;
const int AdminResponse::kGetPendingsRespFieldNumber;
const int AdminResponse::kFlushDbRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdminResponse::AdminResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.AdminResponse)
}
AdminResponse::AdminResponse(const AdminResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_msg().size() > 0) {
    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.has_set_cfg_resp()) {
    set_cfg_resp_ = new ::ds_adminpb::SetConfigResponse(*from.set_cfg_resp_);
  } else {
    set_cfg_resp_ = NULL;
  }
  if (from.has_get_cfg_resp()) {
    get_cfg_resp_ = new ::ds_adminpb::GetConfigResponse(*from.get_cfg_resp_);
  } else {
    get_cfg_resp_ = NULL;
  }
  if (from.has_get_info_response()) {
    get_info_response_ = new ::ds_adminpb::GetInfoResponse(*from.get_info_response_);
  } else {
    get_info_response_ = NULL;
  }
  if (from.has_force_split_resp()) {
    force_split_resp_ = new ::ds_adminpb::ForceSplitResponse(*from.force_split_resp_);
  } else {
    force_split_resp_ = NULL;
  }
  if (from.has_compaction_resp()) {
    compaction_resp_ = new ::ds_adminpb::CompactionResponse(*from.compaction_resp_);
  } else {
    compaction_resp_ = NULL;
  }
  if (from.has_clear_queue_resp()) {
    clear_queue_resp_ = new ::ds_adminpb::ClearQueueResponse(*from.clear_queue_resp_);
  } else {
    clear_queue_resp_ = NULL;
  }
  if (from.has_get_pendings_resp()) {
    get_pendings_resp_ = new ::ds_adminpb::GetPendingsResponse(*from.get_pendings_resp_);
  } else {
    get_pendings_resp_ = NULL;
  }
  if (from.has_flush_db_resp()) {
    flush_db_resp_ = new ::ds_adminpb::FlushDBResponse(*from.flush_db_resp_);
  } else {
    flush_db_resp_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.AdminResponse)
}

void AdminResponse::SharedCtor() {
  error_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&set_cfg_resp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&set_cfg_resp_)) + sizeof(code_));
  _cached_size_ = 0;
}

AdminResponse::~AdminResponse() {
  // @@protoc_insertion_point(destructor:ds_adminpb.AdminResponse)
  SharedDtor();
}

void AdminResponse::SharedDtor() {
  error_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete set_cfg_resp_;
  if (this != internal_default_instance()) delete get_cfg_resp_;
  if (this != internal_default_instance()) delete get_info_response_;
  if (this != internal_default_instance()) delete force_split_resp_;
  if (this != internal_default_instance()) delete compaction_resp_;
  if (this != internal_default_instance()) delete clear_queue_resp_;
  if (this != internal_default_instance()) delete get_pendings_resp_;
  if (this != internal_default_instance()) delete flush_db_resp_;
}

void AdminResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdminResponse::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdminResponse& AdminResponse::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdminResponse* AdminResponse::New(::google::protobuf::Arena* arena) const {
  AdminResponse* n = new AdminResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdminResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.AdminResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && set_cfg_resp_ != NULL) {
    delete set_cfg_resp_;
  }
  set_cfg_resp_ = NULL;
  if (GetArenaNoVirtual() == NULL && get_cfg_resp_ != NULL) {
    delete get_cfg_resp_;
  }
  get_cfg_resp_ = NULL;
  if (GetArenaNoVirtual() == NULL && get_info_response_ != NULL) {
    delete get_info_response_;
  }
  get_info_response_ = NULL;
  if (GetArenaNoVirtual() == NULL && force_split_resp_ != NULL) {
    delete force_split_resp_;
  }
  force_split_resp_ = NULL;
  if (GetArenaNoVirtual() == NULL && compaction_resp_ != NULL) {
    delete compaction_resp_;
  }
  compaction_resp_ = NULL;
  if (GetArenaNoVirtual() == NULL && clear_queue_resp_ != NULL) {
    delete clear_queue_resp_;
  }
  clear_queue_resp_ = NULL;
  if (GetArenaNoVirtual() == NULL && get_pendings_resp_ != NULL) {
    delete get_pendings_resp_;
  }
  get_pendings_resp_ = NULL;
  if (GetArenaNoVirtual() == NULL && flush_db_resp_ != NULL) {
    delete flush_db_resp_;
  }
  flush_db_resp_ = NULL;
  code_ = 0u;
  _internal_metadata_.Clear();
}

bool AdminResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.AdminResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_msg().data(), static_cast<int>(this->error_msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ds_adminpb.AdminResponse.error_msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.SetConfigResponse set_cfg_resp = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_set_cfg_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.GetConfigResponse get_cfg_resp = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_cfg_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.GetInfoResponse get_info_response = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_info_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.ForceSplitResponse force_split_resp = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_force_split_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.CompactionResponse compaction_resp = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compaction_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.ClearQueueResponse clear_queue_resp = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_clear_queue_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.GetPendingsResponse get_pendings_resp = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_pendings_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ds_adminpb.FlushDBResponse flush_db_resp = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_flush_db_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.AdminResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.AdminResponse)
  return false;
#undef DO_
}

void AdminResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.AdminResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->code(), output);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.AdminResponse.error_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_msg(), output);
  }

  // .ds_adminpb.SetConfigResponse set_cfg_resp = 10;
  if (this->has_set_cfg_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->set_cfg_resp_, output);
  }

  // .ds_adminpb.GetConfigResponse get_cfg_resp = 11;
  if (this->has_get_cfg_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->get_cfg_resp_, output);
  }

  // .ds_adminpb.GetInfoResponse get_info_response = 12;
  if (this->has_get_info_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->get_info_response_, output);
  }

  // .ds_adminpb.ForceSplitResponse force_split_resp = 13;
  if (this->has_force_split_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->force_split_resp_, output);
  }

  // .ds_adminpb.CompactionResponse compaction_resp = 14;
  if (this->has_compaction_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->compaction_resp_, output);
  }

  // .ds_adminpb.ClearQueueResponse clear_queue_resp = 15;
  if (this->has_clear_queue_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->clear_queue_resp_, output);
  }

  // .ds_adminpb.GetPendingsResponse get_pendings_resp = 16;
  if (this->has_get_pendings_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->get_pendings_resp_, output);
  }

  // .ds_adminpb.FlushDBResponse flush_db_resp = 17;
  if (this->has_flush_db_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->flush_db_resp_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.AdminResponse)
}

::google::protobuf::uint8* AdminResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.AdminResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->code(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_msg().data(), static_cast<int>(this->error_msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.AdminResponse.error_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_msg(), target);
  }

  // .ds_adminpb.SetConfigResponse set_cfg_resp = 10;
  if (this->has_set_cfg_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->set_cfg_resp_, deterministic, target);
  }

  // .ds_adminpb.GetConfigResponse get_cfg_resp = 11;
  if (this->has_get_cfg_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->get_cfg_resp_, deterministic, target);
  }

  // .ds_adminpb.GetInfoResponse get_info_response = 12;
  if (this->has_get_info_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->get_info_response_, deterministic, target);
  }

  // .ds_adminpb.ForceSplitResponse force_split_resp = 13;
  if (this->has_force_split_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->force_split_resp_, deterministic, target);
  }

  // .ds_adminpb.CompactionResponse compaction_resp = 14;
  if (this->has_compaction_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->compaction_resp_, deterministic, target);
  }

  // .ds_adminpb.ClearQueueResponse clear_queue_resp = 15;
  if (this->has_clear_queue_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->clear_queue_resp_, deterministic, target);
  }

  // .ds_adminpb.GetPendingsResponse get_pendings_resp = 16;
  if (this->has_get_pendings_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->get_pendings_resp_, deterministic, target);
  }

  // .ds_adminpb.FlushDBResponse flush_db_resp = 17;
  if (this->has_flush_db_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->flush_db_resp_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.AdminResponse)
  return target;
}

size_t AdminResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.AdminResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_msg());
  }

  // .ds_adminpb.SetConfigResponse set_cfg_resp = 10;
  if (this->has_set_cfg_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->set_cfg_resp_);
  }

  // .ds_adminpb.GetConfigResponse get_cfg_resp = 11;
  if (this->has_get_cfg_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->get_cfg_resp_);
  }

  // .ds_adminpb.GetInfoResponse get_info_response = 12;
  if (this->has_get_info_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->get_info_response_);
  }

  // .ds_adminpb.ForceSplitResponse force_split_resp = 13;
  if (this->has_force_split_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->force_split_resp_);
  }

  // .ds_adminpb.CompactionResponse compaction_resp = 14;
  if (this->has_compaction_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->compaction_resp_);
  }

  // .ds_adminpb.ClearQueueResponse clear_queue_resp = 15;
  if (this->has_clear_queue_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->clear_queue_resp_);
  }

  // .ds_adminpb.GetPendingsResponse get_pendings_resp = 16;
  if (this->has_get_pendings_resp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->get_pendings_resp_);
  }

  // .ds_adminpb.FlushDBResponse flush_db_resp = 17;
  if (this->has_flush_db_resp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->flush_db_resp_);
  }

  // uint32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdminResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.AdminResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AdminResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdminResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.AdminResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.AdminResponse)
    MergeFrom(*source);
  }
}

void AdminResponse::MergeFrom(const AdminResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.AdminResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.has_set_cfg_resp()) {
    mutable_set_cfg_resp()->::ds_adminpb::SetConfigResponse::MergeFrom(from.set_cfg_resp());
  }
  if (from.has_get_cfg_resp()) {
    mutable_get_cfg_resp()->::ds_adminpb::GetConfigResponse::MergeFrom(from.get_cfg_resp());
  }
  if (from.has_get_info_response()) {
    mutable_get_info_response()->::ds_adminpb::GetInfoResponse::MergeFrom(from.get_info_response());
  }
  if (from.has_force_split_resp()) {
    mutable_force_split_resp()->::ds_adminpb::ForceSplitResponse::MergeFrom(from.force_split_resp());
  }
  if (from.has_compaction_resp()) {
    mutable_compaction_resp()->::ds_adminpb::CompactionResponse::MergeFrom(from.compaction_resp());
  }
  if (from.has_clear_queue_resp()) {
    mutable_clear_queue_resp()->::ds_adminpb::ClearQueueResponse::MergeFrom(from.clear_queue_resp());
  }
  if (from.has_get_pendings_resp()) {
    mutable_get_pendings_resp()->::ds_adminpb::GetPendingsResponse::MergeFrom(from.get_pendings_resp());
  }
  if (from.has_flush_db_resp()) {
    mutable_flush_db_resp()->::ds_adminpb::FlushDBResponse::MergeFrom(from.flush_db_resp());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void AdminResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.AdminResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdminResponse::CopyFrom(const AdminResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.AdminResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdminResponse::IsInitialized() const {
  return true;
}

void AdminResponse::Swap(AdminResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdminResponse::InternalSwap(AdminResponse* other) {
  using std::swap;
  error_msg_.Swap(&other->error_msg_);
  swap(set_cfg_resp_, other->set_cfg_resp_);
  swap(get_cfg_resp_, other->get_cfg_resp_);
  swap(get_info_response_, other->get_info_response_);
  swap(force_split_resp_, other->force_split_resp_);
  swap(compaction_resp_, other->compaction_resp_);
  swap(clear_queue_resp_, other->clear_queue_resp_);
  swap(get_pendings_resp_, other->get_pendings_resp_);
  swap(flush_db_resp_, other->flush_db_resp_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdminResponse::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdminResponse

// uint32 code = 1;
void AdminResponse::clear_code() {
  code_ = 0u;
}
::google::protobuf::uint32 AdminResponse::code() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminResponse.code)
  return code_;
}
void AdminResponse::set_code(::google::protobuf::uint32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.AdminResponse.code)
}

// string error_msg = 2;
void AdminResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AdminResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminResponse.error_msg)
  return error_msg_.GetNoArena();
}
void AdminResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.AdminResponse.error_msg)
}
#if LANG_CXX11
void AdminResponse::set_error_msg(::std::string&& value) {
  
  error_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.AdminResponse.error_msg)
}
#endif
void AdminResponse::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.AdminResponse.error_msg)
}
void AdminResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.AdminResponse.error_msg)
}
::std::string* AdminResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdminResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdminResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminResponse.error_msg)
}

// .ds_adminpb.SetConfigResponse set_cfg_resp = 10;
bool AdminResponse::has_set_cfg_resp() const {
  return this != internal_default_instance() && set_cfg_resp_ != NULL;
}
void AdminResponse::clear_set_cfg_resp() {
  if (GetArenaNoVirtual() == NULL && set_cfg_resp_ != NULL) delete set_cfg_resp_;
  set_cfg_resp_ = NULL;
}
const ::ds_adminpb::SetConfigResponse& AdminResponse::set_cfg_resp() const {
  const ::ds_adminpb::SetConfigResponse* p = set_cfg_resp_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminResponse.set_cfg_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::SetConfigResponse*>(
      &::ds_adminpb::_SetConfigResponse_default_instance_);
}
::ds_adminpb::SetConfigResponse* AdminResponse::mutable_set_cfg_resp() {
  
  if (set_cfg_resp_ == NULL) {
    set_cfg_resp_ = new ::ds_adminpb::SetConfigResponse;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminResponse.set_cfg_resp)
  return set_cfg_resp_;
}
::ds_adminpb::SetConfigResponse* AdminResponse::release_set_cfg_resp() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminResponse.set_cfg_resp)
  
  ::ds_adminpb::SetConfigResponse* temp = set_cfg_resp_;
  set_cfg_resp_ = NULL;
  return temp;
}
void AdminResponse::set_allocated_set_cfg_resp(::ds_adminpb::SetConfigResponse* set_cfg_resp) {
  delete set_cfg_resp_;
  set_cfg_resp_ = set_cfg_resp;
  if (set_cfg_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminResponse.set_cfg_resp)
}

// .ds_adminpb.GetConfigResponse get_cfg_resp = 11;
bool AdminResponse::has_get_cfg_resp() const {
  return this != internal_default_instance() && get_cfg_resp_ != NULL;
}
void AdminResponse::clear_get_cfg_resp() {
  if (GetArenaNoVirtual() == NULL && get_cfg_resp_ != NULL) delete get_cfg_resp_;
  get_cfg_resp_ = NULL;
}
const ::ds_adminpb::GetConfigResponse& AdminResponse::get_cfg_resp() const {
  const ::ds_adminpb::GetConfigResponse* p = get_cfg_resp_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminResponse.get_cfg_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::GetConfigResponse*>(
      &::ds_adminpb::_GetConfigResponse_default_instance_);
}
::ds_adminpb::GetConfigResponse* AdminResponse::mutable_get_cfg_resp() {
  
  if (get_cfg_resp_ == NULL) {
    get_cfg_resp_ = new ::ds_adminpb::GetConfigResponse;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminResponse.get_cfg_resp)
  return get_cfg_resp_;
}
::ds_adminpb::GetConfigResponse* AdminResponse::release_get_cfg_resp() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminResponse.get_cfg_resp)
  
  ::ds_adminpb::GetConfigResponse* temp = get_cfg_resp_;
  get_cfg_resp_ = NULL;
  return temp;
}
void AdminResponse::set_allocated_get_cfg_resp(::ds_adminpb::GetConfigResponse* get_cfg_resp) {
  delete get_cfg_resp_;
  get_cfg_resp_ = get_cfg_resp;
  if (get_cfg_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminResponse.get_cfg_resp)
}

// .ds_adminpb.GetInfoResponse get_info_response = 12;
bool AdminResponse::has_get_info_response() const {
  return this != internal_default_instance() && get_info_response_ != NULL;
}
void AdminResponse::clear_get_info_response() {
  if (GetArenaNoVirtual() == NULL && get_info_response_ != NULL) delete get_info_response_;
  get_info_response_ = NULL;
}
const ::ds_adminpb::GetInfoResponse& AdminResponse::get_info_response() const {
  const ::ds_adminpb::GetInfoResponse* p = get_info_response_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminResponse.get_info_response)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::GetInfoResponse*>(
      &::ds_adminpb::_GetInfoResponse_default_instance_);
}
::ds_adminpb::GetInfoResponse* AdminResponse::mutable_get_info_response() {
  
  if (get_info_response_ == NULL) {
    get_info_response_ = new ::ds_adminpb::GetInfoResponse;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminResponse.get_info_response)
  return get_info_response_;
}
::ds_adminpb::GetInfoResponse* AdminResponse::release_get_info_response() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminResponse.get_info_response)
  
  ::ds_adminpb::GetInfoResponse* temp = get_info_response_;
  get_info_response_ = NULL;
  return temp;
}
void AdminResponse::set_allocated_get_info_response(::ds_adminpb::GetInfoResponse* get_info_response) {
  delete get_info_response_;
  get_info_response_ = get_info_response;
  if (get_info_response) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminResponse.get_info_response)
}

// .ds_adminpb.ForceSplitResponse force_split_resp = 13;
bool AdminResponse::has_force_split_resp() const {
  return this != internal_default_instance() && force_split_resp_ != NULL;
}
void AdminResponse::clear_force_split_resp() {
  if (GetArenaNoVirtual() == NULL && force_split_resp_ != NULL) delete force_split_resp_;
  force_split_resp_ = NULL;
}
const ::ds_adminpb::ForceSplitResponse& AdminResponse::force_split_resp() const {
  const ::ds_adminpb::ForceSplitResponse* p = force_split_resp_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminResponse.force_split_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::ForceSplitResponse*>(
      &::ds_adminpb::_ForceSplitResponse_default_instance_);
}
::ds_adminpb::ForceSplitResponse* AdminResponse::mutable_force_split_resp() {
  
  if (force_split_resp_ == NULL) {
    force_split_resp_ = new ::ds_adminpb::ForceSplitResponse;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminResponse.force_split_resp)
  return force_split_resp_;
}
::ds_adminpb::ForceSplitResponse* AdminResponse::release_force_split_resp() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminResponse.force_split_resp)
  
  ::ds_adminpb::ForceSplitResponse* temp = force_split_resp_;
  force_split_resp_ = NULL;
  return temp;
}
void AdminResponse::set_allocated_force_split_resp(::ds_adminpb::ForceSplitResponse* force_split_resp) {
  delete force_split_resp_;
  force_split_resp_ = force_split_resp;
  if (force_split_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminResponse.force_split_resp)
}

// .ds_adminpb.CompactionResponse compaction_resp = 14;
bool AdminResponse::has_compaction_resp() const {
  return this != internal_default_instance() && compaction_resp_ != NULL;
}
void AdminResponse::clear_compaction_resp() {
  if (GetArenaNoVirtual() == NULL && compaction_resp_ != NULL) delete compaction_resp_;
  compaction_resp_ = NULL;
}
const ::ds_adminpb::CompactionResponse& AdminResponse::compaction_resp() const {
  const ::ds_adminpb::CompactionResponse* p = compaction_resp_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminResponse.compaction_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::CompactionResponse*>(
      &::ds_adminpb::_CompactionResponse_default_instance_);
}
::ds_adminpb::CompactionResponse* AdminResponse::mutable_compaction_resp() {
  
  if (compaction_resp_ == NULL) {
    compaction_resp_ = new ::ds_adminpb::CompactionResponse;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminResponse.compaction_resp)
  return compaction_resp_;
}
::ds_adminpb::CompactionResponse* AdminResponse::release_compaction_resp() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminResponse.compaction_resp)
  
  ::ds_adminpb::CompactionResponse* temp = compaction_resp_;
  compaction_resp_ = NULL;
  return temp;
}
void AdminResponse::set_allocated_compaction_resp(::ds_adminpb::CompactionResponse* compaction_resp) {
  delete compaction_resp_;
  compaction_resp_ = compaction_resp;
  if (compaction_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminResponse.compaction_resp)
}

// .ds_adminpb.ClearQueueResponse clear_queue_resp = 15;
bool AdminResponse::has_clear_queue_resp() const {
  return this != internal_default_instance() && clear_queue_resp_ != NULL;
}
void AdminResponse::clear_clear_queue_resp() {
  if (GetArenaNoVirtual() == NULL && clear_queue_resp_ != NULL) delete clear_queue_resp_;
  clear_queue_resp_ = NULL;
}
const ::ds_adminpb::ClearQueueResponse& AdminResponse::clear_queue_resp() const {
  const ::ds_adminpb::ClearQueueResponse* p = clear_queue_resp_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminResponse.clear_queue_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::ClearQueueResponse*>(
      &::ds_adminpb::_ClearQueueResponse_default_instance_);
}
::ds_adminpb::ClearQueueResponse* AdminResponse::mutable_clear_queue_resp() {
  
  if (clear_queue_resp_ == NULL) {
    clear_queue_resp_ = new ::ds_adminpb::ClearQueueResponse;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminResponse.clear_queue_resp)
  return clear_queue_resp_;
}
::ds_adminpb::ClearQueueResponse* AdminResponse::release_clear_queue_resp() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminResponse.clear_queue_resp)
  
  ::ds_adminpb::ClearQueueResponse* temp = clear_queue_resp_;
  clear_queue_resp_ = NULL;
  return temp;
}
void AdminResponse::set_allocated_clear_queue_resp(::ds_adminpb::ClearQueueResponse* clear_queue_resp) {
  delete clear_queue_resp_;
  clear_queue_resp_ = clear_queue_resp;
  if (clear_queue_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminResponse.clear_queue_resp)
}

// .ds_adminpb.GetPendingsResponse get_pendings_resp = 16;
bool AdminResponse::has_get_pendings_resp() const {
  return this != internal_default_instance() && get_pendings_resp_ != NULL;
}
void AdminResponse::clear_get_pendings_resp() {
  if (GetArenaNoVirtual() == NULL && get_pendings_resp_ != NULL) delete get_pendings_resp_;
  get_pendings_resp_ = NULL;
}
const ::ds_adminpb::GetPendingsResponse& AdminResponse::get_pendings_resp() const {
  const ::ds_adminpb::GetPendingsResponse* p = get_pendings_resp_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminResponse.get_pendings_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::GetPendingsResponse*>(
      &::ds_adminpb::_GetPendingsResponse_default_instance_);
}
::ds_adminpb::GetPendingsResponse* AdminResponse::mutable_get_pendings_resp() {
  
  if (get_pendings_resp_ == NULL) {
    get_pendings_resp_ = new ::ds_adminpb::GetPendingsResponse;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminResponse.get_pendings_resp)
  return get_pendings_resp_;
}
::ds_adminpb::GetPendingsResponse* AdminResponse::release_get_pendings_resp() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminResponse.get_pendings_resp)
  
  ::ds_adminpb::GetPendingsResponse* temp = get_pendings_resp_;
  get_pendings_resp_ = NULL;
  return temp;
}
void AdminResponse::set_allocated_get_pendings_resp(::ds_adminpb::GetPendingsResponse* get_pendings_resp) {
  delete get_pendings_resp_;
  get_pendings_resp_ = get_pendings_resp;
  if (get_pendings_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminResponse.get_pendings_resp)
}

// .ds_adminpb.FlushDBResponse flush_db_resp = 17;
bool AdminResponse::has_flush_db_resp() const {
  return this != internal_default_instance() && flush_db_resp_ != NULL;
}
void AdminResponse::clear_flush_db_resp() {
  if (GetArenaNoVirtual() == NULL && flush_db_resp_ != NULL) delete flush_db_resp_;
  flush_db_resp_ = NULL;
}
const ::ds_adminpb::FlushDBResponse& AdminResponse::flush_db_resp() const {
  const ::ds_adminpb::FlushDBResponse* p = flush_db_resp_;
  // @@protoc_insertion_point(field_get:ds_adminpb.AdminResponse.flush_db_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::FlushDBResponse*>(
      &::ds_adminpb::_FlushDBResponse_default_instance_);
}
::ds_adminpb::FlushDBResponse* AdminResponse::mutable_flush_db_resp() {
  
  if (flush_db_resp_ == NULL) {
    flush_db_resp_ = new ::ds_adminpb::FlushDBResponse;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.AdminResponse.flush_db_resp)
  return flush_db_resp_;
}
::ds_adminpb::FlushDBResponse* AdminResponse::release_flush_db_resp() {
  // @@protoc_insertion_point(field_release:ds_adminpb.AdminResponse.flush_db_resp)
  
  ::ds_adminpb::FlushDBResponse* temp = flush_db_resp_;
  flush_db_resp_ = NULL;
  return temp;
}
void AdminResponse::set_allocated_flush_db_resp(::ds_adminpb::FlushDBResponse* flush_db_resp) {
  delete flush_db_resp_;
  flush_db_resp_ = flush_db_resp;
  if (flush_db_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.AdminResponse.flush_db_resp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigKey::kSectionFieldNumber;
const int ConfigKey::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigKey::ConfigKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.ConfigKey)
}
ConfigKey::ConfigKey(const ConfigKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  section_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.section().size() > 0) {
    section_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.section_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.ConfigKey)
}

void ConfigKey::SharedCtor() {
  section_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ConfigKey::~ConfigKey() {
  // @@protoc_insertion_point(destructor:ds_adminpb.ConfigKey)
  SharedDtor();
}

void ConfigKey::SharedDtor() {
  section_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigKey::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigKey& ConfigKey::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigKey* ConfigKey::New(::google::protobuf::Arena* arena) const {
  ConfigKey* n = new ConfigKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigKey::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.ConfigKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  section_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ConfigKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.ConfigKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string section = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_section()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->section().data(), static_cast<int>(this->section().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ds_adminpb.ConfigKey.section"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ds_adminpb.ConfigKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.ConfigKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.ConfigKey)
  return false;
#undef DO_
}

void ConfigKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.ConfigKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string section = 1;
  if (this->section().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->section().data(), static_cast<int>(this->section().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.ConfigKey.section");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->section(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.ConfigKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.ConfigKey)
}

::google::protobuf::uint8* ConfigKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.ConfigKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string section = 1;
  if (this->section().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->section().data(), static_cast<int>(this->section().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.ConfigKey.section");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->section(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.ConfigKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.ConfigKey)
  return target;
}

size_t ConfigKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.ConfigKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string section = 1;
  if (this->section().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->section());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.ConfigKey)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.ConfigKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.ConfigKey)
    MergeFrom(*source);
  }
}

void ConfigKey::MergeFrom(const ConfigKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.ConfigKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.section().size() > 0) {

    section_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.section_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ConfigKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.ConfigKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigKey::CopyFrom(const ConfigKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.ConfigKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigKey::IsInitialized() const {
  return true;
}

void ConfigKey::Swap(ConfigKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigKey::InternalSwap(ConfigKey* other) {
  using std::swap;
  section_.Swap(&other->section_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigKey::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigKey

// string section = 1;
void ConfigKey::clear_section() {
  section_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigKey::section() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.ConfigKey.section)
  return section_.GetNoArena();
}
void ConfigKey::set_section(const ::std::string& value) {
  
  section_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.ConfigKey.section)
}
#if LANG_CXX11
void ConfigKey::set_section(::std::string&& value) {
  
  section_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.ConfigKey.section)
}
#endif
void ConfigKey::set_section(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  section_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.ConfigKey.section)
}
void ConfigKey::set_section(const char* value, size_t size) {
  
  section_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.ConfigKey.section)
}
::std::string* ConfigKey::mutable_section() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.ConfigKey.section)
  return section_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigKey::release_section() {
  // @@protoc_insertion_point(field_release:ds_adminpb.ConfigKey.section)
  
  return section_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigKey::set_allocated_section(::std::string* section) {
  if (section != NULL) {
    
  } else {
    
  }
  section_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), section);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.ConfigKey.section)
}

// string name = 2;
void ConfigKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigKey::name() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.ConfigKey.name)
  return name_.GetNoArena();
}
void ConfigKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.ConfigKey.name)
}
#if LANG_CXX11
void ConfigKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.ConfigKey.name)
}
#endif
void ConfigKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.ConfigKey.name)
}
void ConfigKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.ConfigKey.name)
}
::std::string* ConfigKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.ConfigKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigKey::release_name() {
  // @@protoc_insertion_point(field_release:ds_adminpb.ConfigKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.ConfigKey.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigItem::kKeyFieldNumber;
const int ConfigItem::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigItem::ConfigItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.ConfigItem)
}
ConfigItem::ConfigItem(const ConfigItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_key()) {
    key_ = new ::ds_adminpb::ConfigKey(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.ConfigItem)
}

void ConfigItem::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_ = NULL;
  _cached_size_ = 0;
}

ConfigItem::~ConfigItem() {
  // @@protoc_insertion_point(destructor:ds_adminpb.ConfigItem)
  SharedDtor();
}

void ConfigItem::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete key_;
}

void ConfigItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigItem::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigItem& ConfigItem::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfigItem* ConfigItem::New(::google::protobuf::Arena* arena) const {
  ConfigItem* n = new ConfigItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.ConfigItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool ConfigItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.ConfigItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ds_adminpb.ConfigKey key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ds_adminpb.ConfigItem.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.ConfigItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.ConfigItem)
  return false;
#undef DO_
}

void ConfigItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.ConfigItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ds_adminpb.ConfigKey key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.ConfigItem.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.ConfigItem)
}

::google::protobuf::uint8* ConfigItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.ConfigItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ds_adminpb.ConfigKey key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->key_, deterministic, target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.ConfigItem.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.ConfigItem)
  return target;
}

size_t ConfigItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.ConfigItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .ds_adminpb.ConfigKey key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.ConfigItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.ConfigItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.ConfigItem)
    MergeFrom(*source);
  }
}

void ConfigItem::MergeFrom(const ConfigItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.ConfigItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_key()) {
    mutable_key()->::ds_adminpb::ConfigKey::MergeFrom(from.key());
  }
}

void ConfigItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.ConfigItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigItem::CopyFrom(const ConfigItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.ConfigItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigItem::IsInitialized() const {
  return true;
}

void ConfigItem::Swap(ConfigItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigItem::InternalSwap(ConfigItem* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigItem::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigItem

// .ds_adminpb.ConfigKey key = 1;
bool ConfigItem::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
void ConfigItem::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
const ::ds_adminpb::ConfigKey& ConfigItem::key() const {
  const ::ds_adminpb::ConfigKey* p = key_;
  // @@protoc_insertion_point(field_get:ds_adminpb.ConfigItem.key)
  return p != NULL ? *p : *reinterpret_cast<const ::ds_adminpb::ConfigKey*>(
      &::ds_adminpb::_ConfigKey_default_instance_);
}
::ds_adminpb::ConfigKey* ConfigItem::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::ds_adminpb::ConfigKey;
  }
  // @@protoc_insertion_point(field_mutable:ds_adminpb.ConfigItem.key)
  return key_;
}
::ds_adminpb::ConfigKey* ConfigItem::release_key() {
  // @@protoc_insertion_point(field_release:ds_adminpb.ConfigItem.key)
  
  ::ds_adminpb::ConfigKey* temp = key_;
  key_ = NULL;
  return temp;
}
void ConfigItem::set_allocated_key(::ds_adminpb::ConfigKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.ConfigItem.key)
}

// string value = 2;
void ConfigItem::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfigItem::value() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.ConfigItem.value)
  return value_.GetNoArena();
}
void ConfigItem::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.ConfigItem.value)
}
#if LANG_CXX11
void ConfigItem::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.ConfigItem.value)
}
#endif
void ConfigItem::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.ConfigItem.value)
}
void ConfigItem::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.ConfigItem.value)
}
::std::string* ConfigItem::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.ConfigItem.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfigItem::release_value() {
  // @@protoc_insertion_point(field_release:ds_adminpb.ConfigItem.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfigItem::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.ConfigItem.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetConfigRequest::kConfigsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetConfigRequest::SetConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.SetConfigRequest)
}
SetConfigRequest::SetConfigRequest(const SetConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      configs_(from.configs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.SetConfigRequest)
}

void SetConfigRequest::SharedCtor() {
  _cached_size_ = 0;
}

SetConfigRequest::~SetConfigRequest() {
  // @@protoc_insertion_point(destructor:ds_adminpb.SetConfigRequest)
  SharedDtor();
}

void SetConfigRequest::SharedDtor() {
}

void SetConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetConfigRequest::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetConfigRequest& SetConfigRequest::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetConfigRequest* SetConfigRequest::New(::google::protobuf::Arena* arena) const {
  SetConfigRequest* n = new SetConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.SetConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configs_.Clear();
  _internal_metadata_.Clear();
}

bool SetConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.SetConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ds_adminpb.ConfigItem configs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.SetConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.SetConfigRequest)
  return false;
#undef DO_
}

void SetConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.SetConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ds_adminpb.ConfigItem configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->configs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.SetConfigRequest)
}

::google::protobuf::uint8* SetConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.SetConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ds_adminpb.ConfigItem configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->configs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.SetConfigRequest)
  return target;
}

size_t SetConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.SetConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ds_adminpb.ConfigItem configs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->configs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.SetConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.SetConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.SetConfigRequest)
    MergeFrom(*source);
  }
}

void SetConfigRequest::MergeFrom(const SetConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.SetConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  configs_.MergeFrom(from.configs_);
}

void SetConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.SetConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetConfigRequest::CopyFrom(const SetConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.SetConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetConfigRequest::IsInitialized() const {
  return true;
}

void SetConfigRequest::Swap(SetConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetConfigRequest::InternalSwap(SetConfigRequest* other) {
  using std::swap;
  configs_.InternalSwap(&other->configs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetConfigRequest::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetConfigRequest

// repeated .ds_adminpb.ConfigItem configs = 1;
int SetConfigRequest::configs_size() const {
  return configs_.size();
}
void SetConfigRequest::clear_configs() {
  configs_.Clear();
}
const ::ds_adminpb::ConfigItem& SetConfigRequest::configs(int index) const {
  // @@protoc_insertion_point(field_get:ds_adminpb.SetConfigRequest.configs)
  return configs_.Get(index);
}
::ds_adminpb::ConfigItem* SetConfigRequest::mutable_configs(int index) {
  // @@protoc_insertion_point(field_mutable:ds_adminpb.SetConfigRequest.configs)
  return configs_.Mutable(index);
}
::ds_adminpb::ConfigItem* SetConfigRequest::add_configs() {
  // @@protoc_insertion_point(field_add:ds_adminpb.SetConfigRequest.configs)
  return configs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ds_adminpb::ConfigItem >*
SetConfigRequest::mutable_configs() {
  // @@protoc_insertion_point(field_mutable_list:ds_adminpb.SetConfigRequest.configs)
  return &configs_;
}
const ::google::protobuf::RepeatedPtrField< ::ds_adminpb::ConfigItem >&
SetConfigRequest::configs() const {
  // @@protoc_insertion_point(field_list:ds_adminpb.SetConfigRequest.configs)
  return configs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetConfigResponse::SetConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.SetConfigResponse)
}
SetConfigResponse::SetConfigResponse(const SetConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.SetConfigResponse)
}

void SetConfigResponse::SharedCtor() {
  _cached_size_ = 0;
}

SetConfigResponse::~SetConfigResponse() {
  // @@protoc_insertion_point(destructor:ds_adminpb.SetConfigResponse)
  SharedDtor();
}

void SetConfigResponse::SharedDtor() {
}

void SetConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetConfigResponse::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetConfigResponse& SetConfigResponse::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetConfigResponse* SetConfigResponse::New(::google::protobuf::Arena* arena) const {
  SetConfigResponse* n = new SetConfigResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.SetConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SetConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.SetConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.SetConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.SetConfigResponse)
  return false;
#undef DO_
}

void SetConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.SetConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.SetConfigResponse)
}

::google::protobuf::uint8* SetConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.SetConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.SetConfigResponse)
  return target;
}

size_t SetConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.SetConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.SetConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.SetConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.SetConfigResponse)
    MergeFrom(*source);
  }
}

void SetConfigResponse::MergeFrom(const SetConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.SetConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.SetConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetConfigResponse::CopyFrom(const SetConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.SetConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetConfigResponse::IsInitialized() const {
  return true;
}

void SetConfigResponse::Swap(SetConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetConfigResponse::InternalSwap(SetConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetConfigResponse::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetConfigResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetConfigRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetConfigRequest::GetConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.GetConfigRequest)
}
GetConfigRequest::GetConfigRequest(const GetConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      key_(from.key_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.GetConfigRequest)
}

void GetConfigRequest::SharedCtor() {
  _cached_size_ = 0;
}

GetConfigRequest::~GetConfigRequest() {
  // @@protoc_insertion_point(destructor:ds_adminpb.GetConfigRequest)
  SharedDtor();
}

void GetConfigRequest::SharedDtor() {
}

void GetConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetConfigRequest::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetConfigRequest& GetConfigRequest::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetConfigRequest* GetConfigRequest::New(::google::protobuf::Arena* arena) const {
  GetConfigRequest* n = new GetConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.GetConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.Clear();
  _internal_metadata_.Clear();
}

bool GetConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.GetConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ds_adminpb.ConfigKey key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.GetConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.GetConfigRequest)
  return false;
#undef DO_
}

void GetConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.GetConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ds_adminpb.ConfigKey key = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->key(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.GetConfigRequest)
}

::google::protobuf::uint8* GetConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.GetConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ds_adminpb.ConfigKey key = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->key_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->key(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.GetConfigRequest)
  return target;
}

size_t GetConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.GetConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ds_adminpb.ConfigKey key = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->key_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->key(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.GetConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.GetConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.GetConfigRequest)
    MergeFrom(*source);
  }
}

void GetConfigRequest::MergeFrom(const GetConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.GetConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
}

void GetConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.GetConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConfigRequest::CopyFrom(const GetConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.GetConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigRequest::IsInitialized() const {
  return true;
}

void GetConfigRequest::Swap(GetConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetConfigRequest::InternalSwap(GetConfigRequest* other) {
  using std::swap;
  key_.InternalSwap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetConfigRequest::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetConfigRequest

// repeated .ds_adminpb.ConfigKey key = 1;
int GetConfigRequest::key_size() const {
  return key_.size();
}
void GetConfigRequest::clear_key() {
  key_.Clear();
}
const ::ds_adminpb::ConfigKey& GetConfigRequest::key(int index) const {
  // @@protoc_insertion_point(field_get:ds_adminpb.GetConfigRequest.key)
  return key_.Get(index);
}
::ds_adminpb::ConfigKey* GetConfigRequest::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:ds_adminpb.GetConfigRequest.key)
  return key_.Mutable(index);
}
::ds_adminpb::ConfigKey* GetConfigRequest::add_key() {
  // @@protoc_insertion_point(field_add:ds_adminpb.GetConfigRequest.key)
  return key_.Add();
}
::google::protobuf::RepeatedPtrField< ::ds_adminpb::ConfigKey >*
GetConfigRequest::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:ds_adminpb.GetConfigRequest.key)
  return &key_;
}
const ::google::protobuf::RepeatedPtrField< ::ds_adminpb::ConfigKey >&
GetConfigRequest::key() const {
  // @@protoc_insertion_point(field_list:ds_adminpb.GetConfigRequest.key)
  return key_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetConfigResponse::kConfigsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetConfigResponse::GetConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.GetConfigResponse)
}
GetConfigResponse::GetConfigResponse(const GetConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      configs_(from.configs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.GetConfigResponse)
}

void GetConfigResponse::SharedCtor() {
  _cached_size_ = 0;
}

GetConfigResponse::~GetConfigResponse() {
  // @@protoc_insertion_point(destructor:ds_adminpb.GetConfigResponse)
  SharedDtor();
}

void GetConfigResponse::SharedDtor() {
}

void GetConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetConfigResponse::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetConfigResponse& GetConfigResponse::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetConfigResponse* GetConfigResponse::New(::google::protobuf::Arena* arena) const {
  GetConfigResponse* n = new GetConfigResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.GetConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configs_.Clear();
  _internal_metadata_.Clear();
}

bool GetConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.GetConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ds_adminpb.ConfigItem configs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_configs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.GetConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.GetConfigResponse)
  return false;
#undef DO_
}

void GetConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.GetConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ds_adminpb.ConfigItem configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->configs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.GetConfigResponse)
}

::google::protobuf::uint8* GetConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.GetConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ds_adminpb.ConfigItem configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->configs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->configs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.GetConfigResponse)
  return target;
}

size_t GetConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.GetConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ds_adminpb.ConfigItem configs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->configs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->configs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.GetConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.GetConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.GetConfigResponse)
    MergeFrom(*source);
  }
}

void GetConfigResponse::MergeFrom(const GetConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.GetConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  configs_.MergeFrom(from.configs_);
}

void GetConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.GetConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConfigResponse::CopyFrom(const GetConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.GetConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigResponse::IsInitialized() const {
  return true;
}

void GetConfigResponse::Swap(GetConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetConfigResponse::InternalSwap(GetConfigResponse* other) {
  using std::swap;
  configs_.InternalSwap(&other->configs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetConfigResponse::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetConfigResponse

// repeated .ds_adminpb.ConfigItem configs = 1;
int GetConfigResponse::configs_size() const {
  return configs_.size();
}
void GetConfigResponse::clear_configs() {
  configs_.Clear();
}
const ::ds_adminpb::ConfigItem& GetConfigResponse::configs(int index) const {
  // @@protoc_insertion_point(field_get:ds_adminpb.GetConfigResponse.configs)
  return configs_.Get(index);
}
::ds_adminpb::ConfigItem* GetConfigResponse::mutable_configs(int index) {
  // @@protoc_insertion_point(field_mutable:ds_adminpb.GetConfigResponse.configs)
  return configs_.Mutable(index);
}
::ds_adminpb::ConfigItem* GetConfigResponse::add_configs() {
  // @@protoc_insertion_point(field_add:ds_adminpb.GetConfigResponse.configs)
  return configs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ds_adminpb::ConfigItem >*
GetConfigResponse::mutable_configs() {
  // @@protoc_insertion_point(field_mutable_list:ds_adminpb.GetConfigResponse.configs)
  return &configs_;
}
const ::google::protobuf::RepeatedPtrField< ::ds_adminpb::ConfigItem >&
GetConfigResponse::configs() const {
  // @@protoc_insertion_point(field_list:ds_adminpb.GetConfigResponse.configs)
  return configs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInfoRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInfoRequest::GetInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.GetInfoRequest)
}
GetInfoRequest::GetInfoRequest(const GetInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.GetInfoRequest)
}

void GetInfoRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetInfoRequest::~GetInfoRequest() {
  // @@protoc_insertion_point(destructor:ds_adminpb.GetInfoRequest)
  SharedDtor();
}

void GetInfoRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInfoRequest::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInfoRequest& GetInfoRequest::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetInfoRequest* GetInfoRequest::New(::google::protobuf::Arena* arena) const {
  GetInfoRequest* n = new GetInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.GetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.GetInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ds_adminpb.GetInfoRequest.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.GetInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.GetInfoRequest)
  return false;
#undef DO_
}

void GetInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.GetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.GetInfoRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.GetInfoRequest)
}

::google::protobuf::uint8* GetInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.GetInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.GetInfoRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.GetInfoRequest)
  return target;
}

size_t GetInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.GetInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.GetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.GetInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.GetInfoRequest)
    MergeFrom(*source);
  }
}

void GetInfoRequest::MergeFrom(const GetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.GetInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void GetInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.GetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInfoRequest::CopyFrom(const GetInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.GetInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoRequest::IsInitialized() const {
  return true;
}

void GetInfoRequest::Swap(GetInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInfoRequest::InternalSwap(GetInfoRequest* other) {
  using std::swap;
  path_.Swap(&other->path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetInfoRequest::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetInfoRequest

// string path = 1;
void GetInfoRequest::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetInfoRequest::path() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.GetInfoRequest.path)
  return path_.GetNoArena();
}
void GetInfoRequest::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.GetInfoRequest.path)
}
#if LANG_CXX11
void GetInfoRequest::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.GetInfoRequest.path)
}
#endif
void GetInfoRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.GetInfoRequest.path)
}
void GetInfoRequest::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.GetInfoRequest.path)
}
::std::string* GetInfoRequest::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.GetInfoRequest.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetInfoRequest::release_path() {
  // @@protoc_insertion_point(field_release:ds_adminpb.GetInfoRequest.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetInfoRequest::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.GetInfoRequest.path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetInfoResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetInfoResponse::GetInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.GetInfoResponse)
}
GetInfoResponse::GetInfoResponse(const GetInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.GetInfoResponse)
}

void GetInfoResponse::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetInfoResponse::~GetInfoResponse() {
  // @@protoc_insertion_point(destructor:ds_adminpb.GetInfoResponse)
  SharedDtor();
}

void GetInfoResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetInfoResponse::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetInfoResponse& GetInfoResponse::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetInfoResponse* GetInfoResponse::New(::google::protobuf::Arena* arena) const {
  GetInfoResponse* n = new GetInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.GetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.GetInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ds_adminpb.GetInfoResponse.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.GetInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.GetInfoResponse)
  return false;
#undef DO_
}

void GetInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.GetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.GetInfoResponse.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.GetInfoResponse)
}

::google::protobuf::uint8* GetInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.GetInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.GetInfoResponse.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.GetInfoResponse)
  return target;
}

size_t GetInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.GetInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.GetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.GetInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.GetInfoResponse)
    MergeFrom(*source);
  }
}

void GetInfoResponse::MergeFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.GetInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void GetInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.GetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetInfoResponse::CopyFrom(const GetInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.GetInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetInfoResponse::IsInitialized() const {
  return true;
}

void GetInfoResponse::Swap(GetInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetInfoResponse::InternalSwap(GetInfoResponse* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetInfoResponse::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetInfoResponse

// string data = 1;
void GetInfoResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetInfoResponse::data() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.GetInfoResponse.data)
  return data_.GetNoArena();
}
void GetInfoResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.GetInfoResponse.data)
}
#if LANG_CXX11
void GetInfoResponse::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.GetInfoResponse.data)
}
#endif
void GetInfoResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.GetInfoResponse.data)
}
void GetInfoResponse::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.GetInfoResponse.data)
}
::std::string* GetInfoResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.GetInfoResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetInfoResponse::release_data() {
  // @@protoc_insertion_point(field_release:ds_adminpb.GetInfoResponse.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetInfoResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.GetInfoResponse.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForceSplitRequest::kRangeIdFieldNumber;
const int ForceSplitRequest::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForceSplitRequest::ForceSplitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.ForceSplitRequest)
}
ForceSplitRequest::ForceSplitRequest(const ForceSplitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&range_id_, &from.range_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&range_id_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.ForceSplitRequest)
}

void ForceSplitRequest::SharedCtor() {
  ::memset(&range_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&range_id_)) + sizeof(version_));
  _cached_size_ = 0;
}

ForceSplitRequest::~ForceSplitRequest() {
  // @@protoc_insertion_point(destructor:ds_adminpb.ForceSplitRequest)
  SharedDtor();
}

void ForceSplitRequest::SharedDtor() {
}

void ForceSplitRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForceSplitRequest::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForceSplitRequest& ForceSplitRequest::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ForceSplitRequest* ForceSplitRequest::New(::google::protobuf::Arena* arena) const {
  ForceSplitRequest* n = new ForceSplitRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForceSplitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.ForceSplitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&range_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&range_id_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool ForceSplitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.ForceSplitRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 range_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &range_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.ForceSplitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.ForceSplitRequest)
  return false;
#undef DO_
}

void ForceSplitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.ForceSplitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 range_id = 1;
  if (this->range_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->range_id(), output);
  }

  // uint64 version = 2;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.ForceSplitRequest)
}

::google::protobuf::uint8* ForceSplitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.ForceSplitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 range_id = 1;
  if (this->range_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->range_id(), target);
  }

  // uint64 version = 2;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.ForceSplitRequest)
  return target;
}

size_t ForceSplitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.ForceSplitRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 range_id = 1;
  if (this->range_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->range_id());
  }

  // uint64 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForceSplitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.ForceSplitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ForceSplitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForceSplitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.ForceSplitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.ForceSplitRequest)
    MergeFrom(*source);
  }
}

void ForceSplitRequest::MergeFrom(const ForceSplitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.ForceSplitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.range_id() != 0) {
    set_range_id(from.range_id());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void ForceSplitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.ForceSplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForceSplitRequest::CopyFrom(const ForceSplitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.ForceSplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForceSplitRequest::IsInitialized() const {
  return true;
}

void ForceSplitRequest::Swap(ForceSplitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForceSplitRequest::InternalSwap(ForceSplitRequest* other) {
  using std::swap;
  swap(range_id_, other->range_id_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ForceSplitRequest::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ForceSplitRequest

// uint64 range_id = 1;
void ForceSplitRequest::clear_range_id() {
  range_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ForceSplitRequest::range_id() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.ForceSplitRequest.range_id)
  return range_id_;
}
void ForceSplitRequest::set_range_id(::google::protobuf::uint64 value) {
  
  range_id_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.ForceSplitRequest.range_id)
}

// uint64 version = 2;
void ForceSplitRequest::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ForceSplitRequest::version() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.ForceSplitRequest.version)
  return version_;
}
void ForceSplitRequest::set_version(::google::protobuf::uint64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.ForceSplitRequest.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForceSplitResponse::kSplitKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForceSplitResponse::ForceSplitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.ForceSplitResponse)
}
ForceSplitResponse::ForceSplitResponse(const ForceSplitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  split_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.split_key().size() > 0) {
    split_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.split_key_);
  }
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.ForceSplitResponse)
}

void ForceSplitResponse::SharedCtor() {
  split_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ForceSplitResponse::~ForceSplitResponse() {
  // @@protoc_insertion_point(destructor:ds_adminpb.ForceSplitResponse)
  SharedDtor();
}

void ForceSplitResponse::SharedDtor() {
  split_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ForceSplitResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForceSplitResponse::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForceSplitResponse& ForceSplitResponse::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ForceSplitResponse* ForceSplitResponse::New(::google::protobuf::Arena* arena) const {
  ForceSplitResponse* n = new ForceSplitResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForceSplitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.ForceSplitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  split_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ForceSplitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.ForceSplitResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes split_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_split_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.ForceSplitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.ForceSplitResponse)
  return false;
#undef DO_
}

void ForceSplitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.ForceSplitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes split_key = 1;
  if (this->split_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->split_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.ForceSplitResponse)
}

::google::protobuf::uint8* ForceSplitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.ForceSplitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes split_key = 1;
  if (this->split_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->split_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.ForceSplitResponse)
  return target;
}

size_t ForceSplitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.ForceSplitResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes split_key = 1;
  if (this->split_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->split_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForceSplitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.ForceSplitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ForceSplitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForceSplitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.ForceSplitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.ForceSplitResponse)
    MergeFrom(*source);
  }
}

void ForceSplitResponse::MergeFrom(const ForceSplitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.ForceSplitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.split_key().size() > 0) {

    split_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.split_key_);
  }
}

void ForceSplitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.ForceSplitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForceSplitResponse::CopyFrom(const ForceSplitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.ForceSplitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForceSplitResponse::IsInitialized() const {
  return true;
}

void ForceSplitResponse::Swap(ForceSplitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForceSplitResponse::InternalSwap(ForceSplitResponse* other) {
  using std::swap;
  split_key_.Swap(&other->split_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ForceSplitResponse::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ForceSplitResponse

// bytes split_key = 1;
void ForceSplitResponse::clear_split_key() {
  split_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ForceSplitResponse::split_key() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.ForceSplitResponse.split_key)
  return split_key_.GetNoArena();
}
void ForceSplitResponse::set_split_key(const ::std::string& value) {
  
  split_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.ForceSplitResponse.split_key)
}
#if LANG_CXX11
void ForceSplitResponse::set_split_key(::std::string&& value) {
  
  split_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.ForceSplitResponse.split_key)
}
#endif
void ForceSplitResponse::set_split_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  split_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.ForceSplitResponse.split_key)
}
void ForceSplitResponse::set_split_key(const void* value, size_t size) {
  
  split_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.ForceSplitResponse.split_key)
}
::std::string* ForceSplitResponse::mutable_split_key() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.ForceSplitResponse.split_key)
  return split_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ForceSplitResponse::release_split_key() {
  // @@protoc_insertion_point(field_release:ds_adminpb.ForceSplitResponse.split_key)
  
  return split_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ForceSplitResponse::set_allocated_split_key(::std::string* split_key) {
  if (split_key != NULL) {
    
  } else {
    
  }
  split_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), split_key);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.ForceSplitResponse.split_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompactionRequest::kRangeIdFieldNumber;
const int CompactionRequest::kTransactionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactionRequest::CompactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.CompactionRequest)
}
CompactionRequest::CompactionRequest(const CompactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&range_id_, &from.range_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&transaction_id_) -
    reinterpret_cast<char*>(&range_id_)) + sizeof(transaction_id_));
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.CompactionRequest)
}

void CompactionRequest::SharedCtor() {
  ::memset(&range_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transaction_id_) -
      reinterpret_cast<char*>(&range_id_)) + sizeof(transaction_id_));
  _cached_size_ = 0;
}

CompactionRequest::~CompactionRequest() {
  // @@protoc_insertion_point(destructor:ds_adminpb.CompactionRequest)
  SharedDtor();
}

void CompactionRequest::SharedDtor() {
}

void CompactionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactionRequest::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompactionRequest& CompactionRequest::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CompactionRequest* CompactionRequest::New(::google::protobuf::Arena* arena) const {
  CompactionRequest* n = new CompactionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.CompactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&range_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&transaction_id_) -
      reinterpret_cast<char*>(&range_id_)) + sizeof(transaction_id_));
  _internal_metadata_.Clear();
}

bool CompactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.CompactionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 range_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &range_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 transaction_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &transaction_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.CompactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.CompactionRequest)
  return false;
#undef DO_
}

void CompactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.CompactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 range_id = 1;
  if (this->range_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->range_id(), output);
  }

  // int64 transaction_id = 2;
  if (this->transaction_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->transaction_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.CompactionRequest)
}

::google::protobuf::uint8* CompactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.CompactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 range_id = 1;
  if (this->range_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->range_id(), target);
  }

  // int64 transaction_id = 2;
  if (this->transaction_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->transaction_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.CompactionRequest)
  return target;
}

size_t CompactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.CompactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 range_id = 1;
  if (this->range_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->range_id());
  }

  // int64 transaction_id = 2;
  if (this->transaction_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->transaction_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.CompactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.CompactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.CompactionRequest)
    MergeFrom(*source);
  }
}

void CompactionRequest::MergeFrom(const CompactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.CompactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.range_id() != 0) {
    set_range_id(from.range_id());
  }
  if (from.transaction_id() != 0) {
    set_transaction_id(from.transaction_id());
  }
}

void CompactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.CompactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactionRequest::CopyFrom(const CompactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.CompactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompactionRequest::IsInitialized() const {
  return true;
}

void CompactionRequest::Swap(CompactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactionRequest::InternalSwap(CompactionRequest* other) {
  using std::swap;
  swap(range_id_, other->range_id_);
  swap(transaction_id_, other->transaction_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactionRequest::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompactionRequest

// uint64 range_id = 1;
void CompactionRequest::clear_range_id() {
  range_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CompactionRequest::range_id() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.CompactionRequest.range_id)
  return range_id_;
}
void CompactionRequest::set_range_id(::google::protobuf::uint64 value) {
  
  range_id_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.CompactionRequest.range_id)
}

// int64 transaction_id = 2;
void CompactionRequest::clear_transaction_id() {
  transaction_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 CompactionRequest::transaction_id() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.CompactionRequest.transaction_id)
  return transaction_id_;
}
void CompactionRequest::set_transaction_id(::google::protobuf::int64 value) {
  
  transaction_id_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.CompactionRequest.transaction_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompactionResponse::kBeginKeyFieldNumber;
const int CompactionResponse::kEndKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactionResponse::CompactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.CompactionResponse)
}
CompactionResponse::CompactionResponse(const CompactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  begin_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.begin_key().size() > 0) {
    begin_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.begin_key_);
  }
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_key().size() > 0) {
    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.CompactionResponse)
}

void CompactionResponse::SharedCtor() {
  begin_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CompactionResponse::~CompactionResponse() {
  // @@protoc_insertion_point(destructor:ds_adminpb.CompactionResponse)
  SharedDtor();
}

void CompactionResponse::SharedDtor() {
  begin_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CompactionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompactionResponse::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompactionResponse& CompactionResponse::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

CompactionResponse* CompactionResponse::New(::google::protobuf::Arena* arena) const {
  CompactionResponse* n = new CompactionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CompactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.CompactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  begin_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CompactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.CompactionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes begin_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_begin_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.CompactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.CompactionResponse)
  return false;
#undef DO_
}

void CompactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.CompactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes begin_key = 1;
  if (this->begin_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->begin_key(), output);
  }

  // bytes end_key = 2;
  if (this->end_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->end_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.CompactionResponse)
}

::google::protobuf::uint8* CompactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.CompactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes begin_key = 1;
  if (this->begin_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->begin_key(), target);
  }

  // bytes end_key = 2;
  if (this->end_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->end_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.CompactionResponse)
  return target;
}

size_t CompactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.CompactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes begin_key = 1;
  if (this->begin_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->begin_key());
  }

  // bytes end_key = 2;
  if (this->end_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->end_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.CompactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CompactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.CompactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.CompactionResponse)
    MergeFrom(*source);
  }
}

void CompactionResponse::MergeFrom(const CompactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.CompactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.begin_key().size() > 0) {

    begin_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.begin_key_);
  }
  if (from.end_key().size() > 0) {

    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
}

void CompactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.CompactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactionResponse::CopyFrom(const CompactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.CompactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompactionResponse::IsInitialized() const {
  return true;
}

void CompactionResponse::Swap(CompactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactionResponse::InternalSwap(CompactionResponse* other) {
  using std::swap;
  begin_key_.Swap(&other->begin_key_);
  end_key_.Swap(&other->end_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CompactionResponse::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CompactionResponse

// bytes begin_key = 1;
void CompactionResponse::clear_begin_key() {
  begin_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CompactionResponse::begin_key() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.CompactionResponse.begin_key)
  return begin_key_.GetNoArena();
}
void CompactionResponse::set_begin_key(const ::std::string& value) {
  
  begin_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.CompactionResponse.begin_key)
}
#if LANG_CXX11
void CompactionResponse::set_begin_key(::std::string&& value) {
  
  begin_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.CompactionResponse.begin_key)
}
#endif
void CompactionResponse::set_begin_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  begin_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.CompactionResponse.begin_key)
}
void CompactionResponse::set_begin_key(const void* value, size_t size) {
  
  begin_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.CompactionResponse.begin_key)
}
::std::string* CompactionResponse::mutable_begin_key() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.CompactionResponse.begin_key)
  return begin_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CompactionResponse::release_begin_key() {
  // @@protoc_insertion_point(field_release:ds_adminpb.CompactionResponse.begin_key)
  
  return begin_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CompactionResponse::set_allocated_begin_key(::std::string* begin_key) {
  if (begin_key != NULL) {
    
  } else {
    
  }
  begin_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), begin_key);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.CompactionResponse.begin_key)
}

// bytes end_key = 2;
void CompactionResponse::clear_end_key() {
  end_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CompactionResponse::end_key() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.CompactionResponse.end_key)
  return end_key_.GetNoArena();
}
void CompactionResponse::set_end_key(const ::std::string& value) {
  
  end_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.CompactionResponse.end_key)
}
#if LANG_CXX11
void CompactionResponse::set_end_key(::std::string&& value) {
  
  end_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.CompactionResponse.end_key)
}
#endif
void CompactionResponse::set_end_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  end_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.CompactionResponse.end_key)
}
void CompactionResponse::set_end_key(const void* value, size_t size) {
  
  end_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.CompactionResponse.end_key)
}
::std::string* CompactionResponse::mutable_end_key() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.CompactionResponse.end_key)
  return end_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CompactionResponse::release_end_key() {
  // @@protoc_insertion_point(field_release:ds_adminpb.CompactionResponse.end_key)
  
  return end_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CompactionResponse::set_allocated_end_key(::std::string* end_key) {
  if (end_key != NULL) {
    
  } else {
    
  }
  end_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_key);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.CompactionResponse.end_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClearQueueRequest::kQueueTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearQueueRequest::ClearQueueRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.ClearQueueRequest)
}
ClearQueueRequest::ClearQueueRequest(const ClearQueueRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  queue_type_ = from.queue_type_;
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.ClearQueueRequest)
}

void ClearQueueRequest::SharedCtor() {
  queue_type_ = 0;
  _cached_size_ = 0;
}

ClearQueueRequest::~ClearQueueRequest() {
  // @@protoc_insertion_point(destructor:ds_adminpb.ClearQueueRequest)
  SharedDtor();
}

void ClearQueueRequest::SharedDtor() {
}

void ClearQueueRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClearQueueRequest::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearQueueRequest& ClearQueueRequest::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClearQueueRequest* ClearQueueRequest::New(::google::protobuf::Arena* arena) const {
  ClearQueueRequest* n = new ClearQueueRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClearQueueRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.ClearQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queue_type_ = 0;
  _internal_metadata_.Clear();
}

bool ClearQueueRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.ClearQueueRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ds_adminpb.ClearQueueRequest.QueueType queue_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_queue_type(static_cast< ::ds_adminpb::ClearQueueRequest_QueueType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.ClearQueueRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.ClearQueueRequest)
  return false;
#undef DO_
}

void ClearQueueRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.ClearQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ds_adminpb.ClearQueueRequest.QueueType queue_type = 1;
  if (this->queue_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->queue_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.ClearQueueRequest)
}

::google::protobuf::uint8* ClearQueueRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.ClearQueueRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ds_adminpb.ClearQueueRequest.QueueType queue_type = 1;
  if (this->queue_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->queue_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.ClearQueueRequest)
  return target;
}

size_t ClearQueueRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.ClearQueueRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ds_adminpb.ClearQueueRequest.QueueType queue_type = 1;
  if (this->queue_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->queue_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClearQueueRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.ClearQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearQueueRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClearQueueRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.ClearQueueRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.ClearQueueRequest)
    MergeFrom(*source);
  }
}

void ClearQueueRequest::MergeFrom(const ClearQueueRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.ClearQueueRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.queue_type() != 0) {
    set_queue_type(from.queue_type());
  }
}

void ClearQueueRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.ClearQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearQueueRequest::CopyFrom(const ClearQueueRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.ClearQueueRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearQueueRequest::IsInitialized() const {
  return true;
}

void ClearQueueRequest::Swap(ClearQueueRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearQueueRequest::InternalSwap(ClearQueueRequest* other) {
  using std::swap;
  swap(queue_type_, other->queue_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClearQueueRequest::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClearQueueRequest

// .ds_adminpb.ClearQueueRequest.QueueType queue_type = 1;
void ClearQueueRequest::clear_queue_type() {
  queue_type_ = 0;
}
::ds_adminpb::ClearQueueRequest_QueueType ClearQueueRequest::queue_type() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.ClearQueueRequest.queue_type)
  return static_cast< ::ds_adminpb::ClearQueueRequest_QueueType >(queue_type_);
}
void ClearQueueRequest::set_queue_type(::ds_adminpb::ClearQueueRequest_QueueType value) {
  
  queue_type_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.ClearQueueRequest.queue_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClearQueueResponse::kClearedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearQueueResponse::ClearQueueResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.ClearQueueResponse)
}
ClearQueueResponse::ClearQueueResponse(const ClearQueueResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cleared_ = from.cleared_;
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.ClearQueueResponse)
}

void ClearQueueResponse::SharedCtor() {
  cleared_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ClearQueueResponse::~ClearQueueResponse() {
  // @@protoc_insertion_point(destructor:ds_adminpb.ClearQueueResponse)
  SharedDtor();
}

void ClearQueueResponse::SharedDtor() {
}

void ClearQueueResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClearQueueResponse::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearQueueResponse& ClearQueueResponse::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClearQueueResponse* ClearQueueResponse::New(::google::protobuf::Arena* arena) const {
  ClearQueueResponse* n = new ClearQueueResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClearQueueResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.ClearQueueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cleared_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ClearQueueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.ClearQueueResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 cleared = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cleared_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.ClearQueueResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.ClearQueueResponse)
  return false;
#undef DO_
}

void ClearQueueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.ClearQueueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cleared = 1;
  if (this->cleared() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->cleared(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.ClearQueueResponse)
}

::google::protobuf::uint8* ClearQueueResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.ClearQueueResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 cleared = 1;
  if (this->cleared() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->cleared(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.ClearQueueResponse)
  return target;
}

size_t ClearQueueResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.ClearQueueResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 cleared = 1;
  if (this->cleared() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->cleared());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClearQueueResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.ClearQueueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearQueueResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClearQueueResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.ClearQueueResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.ClearQueueResponse)
    MergeFrom(*source);
  }
}

void ClearQueueResponse::MergeFrom(const ClearQueueResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.ClearQueueResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cleared() != 0) {
    set_cleared(from.cleared());
  }
}

void ClearQueueResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.ClearQueueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearQueueResponse::CopyFrom(const ClearQueueResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.ClearQueueResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearQueueResponse::IsInitialized() const {
  return true;
}

void ClearQueueResponse::Swap(ClearQueueResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearQueueResponse::InternalSwap(ClearQueueResponse* other) {
  using std::swap;
  swap(cleared_, other->cleared_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClearQueueResponse::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClearQueueResponse

// uint64 cleared = 1;
void ClearQueueResponse::clear_cleared() {
  cleared_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClearQueueResponse::cleared() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.ClearQueueResponse.cleared)
  return cleared_;
}
void ClearQueueResponse::set_cleared(::google::protobuf::uint64 value) {
  
  cleared_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.ClearQueueResponse.cleared)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPendingsRequest::kPtypeFieldNumber;
const int GetPendingsRequest::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPendingsRequest::GetPendingsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.GetPendingsRequest)
}
GetPendingsRequest::GetPendingsRequest(const GetPendingsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&ptype_) -
    reinterpret_cast<char*>(&count_)) + sizeof(ptype_));
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.GetPendingsRequest)
}

void GetPendingsRequest::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ptype_) -
      reinterpret_cast<char*>(&count_)) + sizeof(ptype_));
  _cached_size_ = 0;
}

GetPendingsRequest::~GetPendingsRequest() {
  // @@protoc_insertion_point(destructor:ds_adminpb.GetPendingsRequest)
  SharedDtor();
}

void GetPendingsRequest::SharedDtor() {
}

void GetPendingsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPendingsRequest::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPendingsRequest& GetPendingsRequest::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPendingsRequest* GetPendingsRequest::New(::google::protobuf::Arena* arena) const {
  GetPendingsRequest* n = new GetPendingsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPendingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.GetPendingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ptype_) -
      reinterpret_cast<char*>(&count_)) + sizeof(ptype_));
  _internal_metadata_.Clear();
}

bool GetPendingsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.GetPendingsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ds_adminpb.GetPendingsRequest.PendingType ptype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ptype(static_cast< ::ds_adminpb::GetPendingsRequest_PendingType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.GetPendingsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.GetPendingsRequest)
  return false;
#undef DO_
}

void GetPendingsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.GetPendingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ds_adminpb.GetPendingsRequest.PendingType ptype = 1;
  if (this->ptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ptype(), output);
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.GetPendingsRequest)
}

::google::protobuf::uint8* GetPendingsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.GetPendingsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ds_adminpb.GetPendingsRequest.PendingType ptype = 1;
  if (this->ptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ptype(), target);
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.GetPendingsRequest)
  return target;
}

size_t GetPendingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.GetPendingsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  // .ds_adminpb.GetPendingsRequest.PendingType ptype = 1;
  if (this->ptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPendingsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.GetPendingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPendingsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPendingsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.GetPendingsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.GetPendingsRequest)
    MergeFrom(*source);
  }
}

void GetPendingsRequest::MergeFrom(const GetPendingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.GetPendingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.ptype() != 0) {
    set_ptype(from.ptype());
  }
}

void GetPendingsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.GetPendingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPendingsRequest::CopyFrom(const GetPendingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.GetPendingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPendingsRequest::IsInitialized() const {
  return true;
}

void GetPendingsRequest::Swap(GetPendingsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPendingsRequest::InternalSwap(GetPendingsRequest* other) {
  using std::swap;
  swap(count_, other->count_);
  swap(ptype_, other->ptype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPendingsRequest::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPendingsRequest

// .ds_adminpb.GetPendingsRequest.PendingType ptype = 1;
void GetPendingsRequest::clear_ptype() {
  ptype_ = 0;
}
::ds_adminpb::GetPendingsRequest_PendingType GetPendingsRequest::ptype() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.GetPendingsRequest.ptype)
  return static_cast< ::ds_adminpb::GetPendingsRequest_PendingType >(ptype_);
}
void GetPendingsRequest::set_ptype(::ds_adminpb::GetPendingsRequest_PendingType value) {
  
  ptype_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.GetPendingsRequest.ptype)
}

// uint64 count = 2;
void GetPendingsRequest::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GetPendingsRequest::count() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.GetPendingsRequest.count)
  return count_;
}
void GetPendingsRequest::set_count(::google::protobuf::uint64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.GetPendingsRequest.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPendingsResponse::kDescFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPendingsResponse::GetPendingsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.GetPendingsResponse)
}
GetPendingsResponse::GetPendingsResponse(const GetPendingsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.desc().size() > 0) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.GetPendingsResponse)
}

void GetPendingsResponse::SharedCtor() {
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetPendingsResponse::~GetPendingsResponse() {
  // @@protoc_insertion_point(destructor:ds_adminpb.GetPendingsResponse)
  SharedDtor();
}

void GetPendingsResponse::SharedDtor() {
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetPendingsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPendingsResponse::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPendingsResponse& GetPendingsResponse::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPendingsResponse* GetPendingsResponse::New(::google::protobuf::Arena* arena) const {
  GetPendingsResponse* n = new GetPendingsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPendingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.GetPendingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetPendingsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.GetPendingsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string desc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ds_adminpb.GetPendingsResponse.desc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.GetPendingsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.GetPendingsResponse)
  return false;
#undef DO_
}

void GetPendingsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.GetPendingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desc = 1;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.GetPendingsResponse.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->desc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.GetPendingsResponse)
}

::google::protobuf::uint8* GetPendingsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.GetPendingsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string desc = 1;
  if (this->desc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ds_adminpb.GetPendingsResponse.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->desc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.GetPendingsResponse)
  return target;
}

size_t GetPendingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.GetPendingsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string desc = 1;
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->desc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPendingsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.GetPendingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPendingsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPendingsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.GetPendingsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.GetPendingsResponse)
    MergeFrom(*source);
  }
}

void GetPendingsResponse::MergeFrom(const GetPendingsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.GetPendingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.desc().size() > 0) {

    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
}

void GetPendingsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.GetPendingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPendingsResponse::CopyFrom(const GetPendingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.GetPendingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPendingsResponse::IsInitialized() const {
  return true;
}

void GetPendingsResponse::Swap(GetPendingsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPendingsResponse::InternalSwap(GetPendingsResponse* other) {
  using std::swap;
  desc_.Swap(&other->desc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPendingsResponse::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPendingsResponse

// string desc = 1;
void GetPendingsResponse::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetPendingsResponse::desc() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.GetPendingsResponse.desc)
  return desc_.GetNoArena();
}
void GetPendingsResponse::set_desc(const ::std::string& value) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ds_adminpb.GetPendingsResponse.desc)
}
#if LANG_CXX11
void GetPendingsResponse::set_desc(::std::string&& value) {
  
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ds_adminpb.GetPendingsResponse.desc)
}
#endif
void GetPendingsResponse::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ds_adminpb.GetPendingsResponse.desc)
}
void GetPendingsResponse::set_desc(const char* value, size_t size) {
  
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ds_adminpb.GetPendingsResponse.desc)
}
::std::string* GetPendingsResponse::mutable_desc() {
  
  // @@protoc_insertion_point(field_mutable:ds_adminpb.GetPendingsResponse.desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPendingsResponse::release_desc() {
  // @@protoc_insertion_point(field_release:ds_adminpb.GetPendingsResponse.desc)
  
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPendingsResponse::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    
  } else {
    
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:ds_adminpb.GetPendingsResponse.desc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FlushDBRequest::kWaitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlushDBRequest::FlushDBRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.FlushDBRequest)
}
FlushDBRequest::FlushDBRequest(const FlushDBRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wait_ = from.wait_;
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.FlushDBRequest)
}

void FlushDBRequest::SharedCtor() {
  wait_ = false;
  _cached_size_ = 0;
}

FlushDBRequest::~FlushDBRequest() {
  // @@protoc_insertion_point(destructor:ds_adminpb.FlushDBRequest)
  SharedDtor();
}

void FlushDBRequest::SharedDtor() {
}

void FlushDBRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FlushDBRequest::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlushDBRequest& FlushDBRequest::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

FlushDBRequest* FlushDBRequest::New(::google::protobuf::Arena* arena) const {
  FlushDBRequest* n = new FlushDBRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FlushDBRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.FlushDBRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wait_ = false;
  _internal_metadata_.Clear();
}

bool FlushDBRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.FlushDBRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool wait = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wait_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.FlushDBRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.FlushDBRequest)
  return false;
#undef DO_
}

void FlushDBRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.FlushDBRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool wait = 1;
  if (this->wait() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->wait(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.FlushDBRequest)
}

::google::protobuf::uint8* FlushDBRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.FlushDBRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool wait = 1;
  if (this->wait() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->wait(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.FlushDBRequest)
  return target;
}

size_t FlushDBRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.FlushDBRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool wait = 1;
  if (this->wait() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FlushDBRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.FlushDBRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FlushDBRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlushDBRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.FlushDBRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.FlushDBRequest)
    MergeFrom(*source);
  }
}

void FlushDBRequest::MergeFrom(const FlushDBRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.FlushDBRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wait() != 0) {
    set_wait(from.wait());
  }
}

void FlushDBRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.FlushDBRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlushDBRequest::CopyFrom(const FlushDBRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.FlushDBRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlushDBRequest::IsInitialized() const {
  return true;
}

void FlushDBRequest::Swap(FlushDBRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlushDBRequest::InternalSwap(FlushDBRequest* other) {
  using std::swap;
  swap(wait_, other->wait_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FlushDBRequest::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FlushDBRequest

// bool wait = 1;
void FlushDBRequest::clear_wait() {
  wait_ = false;
}
bool FlushDBRequest::wait() const {
  // @@protoc_insertion_point(field_get:ds_adminpb.FlushDBRequest.wait)
  return wait_;
}
void FlushDBRequest::set_wait(bool value) {
  
  wait_ = value;
  // @@protoc_insertion_point(field_set:ds_adminpb.FlushDBRequest.wait)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FlushDBResponse::FlushDBResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ds_5fadmin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ds_adminpb.FlushDBResponse)
}
FlushDBResponse::FlushDBResponse(const FlushDBResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ds_adminpb.FlushDBResponse)
}

void FlushDBResponse::SharedCtor() {
  _cached_size_ = 0;
}

FlushDBResponse::~FlushDBResponse() {
  // @@protoc_insertion_point(destructor:ds_adminpb.FlushDBResponse)
  SharedDtor();
}

void FlushDBResponse::SharedDtor() {
}

void FlushDBResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FlushDBResponse::descriptor() {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FlushDBResponse& FlushDBResponse::default_instance() {
  protobuf_ds_5fadmin_2eproto::InitDefaults();
  return *internal_default_instance();
}

FlushDBResponse* FlushDBResponse::New(::google::protobuf::Arena* arena) const {
  FlushDBResponse* n = new FlushDBResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FlushDBResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ds_adminpb.FlushDBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool FlushDBResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ds_adminpb.FlushDBResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ds_adminpb.FlushDBResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ds_adminpb.FlushDBResponse)
  return false;
#undef DO_
}

void FlushDBResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ds_adminpb.FlushDBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ds_adminpb.FlushDBResponse)
}

::google::protobuf::uint8* FlushDBResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ds_adminpb.FlushDBResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ds_adminpb.FlushDBResponse)
  return target;
}

size_t FlushDBResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ds_adminpb.FlushDBResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FlushDBResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ds_adminpb.FlushDBResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FlushDBResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FlushDBResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ds_adminpb.FlushDBResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ds_adminpb.FlushDBResponse)
    MergeFrom(*source);
  }
}

void FlushDBResponse::MergeFrom(const FlushDBResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ds_adminpb.FlushDBResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FlushDBResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ds_adminpb.FlushDBResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FlushDBResponse::CopyFrom(const FlushDBResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ds_adminpb.FlushDBResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FlushDBResponse::IsInitialized() const {
  return true;
}

void FlushDBResponse::Swap(FlushDBResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FlushDBResponse::InternalSwap(FlushDBResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FlushDBResponse::GetMetadata() const {
  protobuf_ds_5fadmin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ds_5fadmin_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FlushDBResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ds_adminpb

// @@protoc_insertion_point(global_scope)
