// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ms_raftcmdpb.proto

#ifndef PROTOBUF_ms_5fraftcmdpb_2eproto__INCLUDED
#define PROTOBUF_ms_5fraftcmdpb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace ms_raftcmdpb {
class DeleteRequest;
class DeleteRequestDefaultTypeInternal;
extern DeleteRequestDefaultTypeInternal _DeleteRequest_default_instance_;
class DeleteResponse;
class DeleteResponseDefaultTypeInternal;
extern DeleteResponseDefaultTypeInternal _DeleteResponse_default_instance_;
class ExecuteRequest;
class ExecuteRequestDefaultTypeInternal;
extern ExecuteRequestDefaultTypeInternal _ExecuteRequest_default_instance_;
class ExecuteResponse;
class ExecuteResponseDefaultTypeInternal;
extern ExecuteResponseDefaultTypeInternal _ExecuteResponse_default_instance_;
class GetRequest;
class GetRequestDefaultTypeInternal;
extern GetRequestDefaultTypeInternal _GetRequest_default_instance_;
class GetResponse;
class GetResponseDefaultTypeInternal;
extern GetResponseDefaultTypeInternal _GetResponse_default_instance_;
class KvPair;
class KvPairDefaultTypeInternal;
extern KvPairDefaultTypeInternal _KvPair_default_instance_;
class KvPairExecute;
class KvPairExecuteDefaultTypeInternal;
extern KvPairExecuteDefaultTypeInternal _KvPairExecute_default_instance_;
class PutRequest;
class PutRequestDefaultTypeInternal;
extern PutRequestDefaultTypeInternal _PutRequest_default_instance_;
class PutResponse;
class PutResponseDefaultTypeInternal;
extern PutResponseDefaultTypeInternal _PutResponse_default_instance_;
class RaftKvPair;
class RaftKvPairDefaultTypeInternal;
extern RaftKvPairDefaultTypeInternal _RaftKvPair_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
}  // namespace ms_raftcmdpb

namespace ms_raftcmdpb {

namespace protobuf_ms_5fraftcmdpb_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ms_5fraftcmdpb_2eproto

enum ExecuteType {
  ExecInvalid = 0,
  ExecPut = 1,
  ExecDelete = 2,
  ExecuteType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExecuteType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExecuteType_IsValid(int value);
const ExecuteType ExecuteType_MIN = ExecInvalid;
const ExecuteType ExecuteType_MAX = ExecDelete;
const int ExecuteType_ARRAYSIZE = ExecuteType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExecuteType_descriptor();
inline const ::std::string& ExecuteType_Name(ExecuteType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExecuteType_descriptor(), value);
}
inline bool ExecuteType_Parse(
    const ::std::string& name, ExecuteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExecuteType>(
    ExecuteType_descriptor(), name, value);
}
enum CmdType {
  Invalid = 0,
  Get = 1,
  Put = 2,
  Delete = 3,
  Execute = 4,
  CmdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CmdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CmdType_IsValid(int value);
const CmdType CmdType_MIN = Invalid;
const CmdType CmdType_MAX = Execute;
const int CmdType_ARRAYSIZE = CmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CmdType_descriptor();
inline const ::std::string& CmdType_Name(CmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CmdType_descriptor(), value);
}
inline bool CmdType_Parse(
    const ::std::string& name, CmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CmdType>(
    CmdType_descriptor(), name, value);
}
// ===================================================================

class RaftKvPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.RaftKvPair) */ {
 public:
  RaftKvPair();
  virtual ~RaftKvPair();

  RaftKvPair(const RaftKvPair& from);

  inline RaftKvPair& operator=(const RaftKvPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RaftKvPair(RaftKvPair&& from) noexcept
    : RaftKvPair() {
    *this = ::std::move(from);
  }

  inline RaftKvPair& operator=(RaftKvPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RaftKvPair& default_instance();

  static inline const RaftKvPair* internal_default_instance() {
    return reinterpret_cast<const RaftKvPair*>(
               &_RaftKvPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RaftKvPair* other);
  friend void swap(RaftKvPair& a, RaftKvPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RaftKvPair* New() const PROTOBUF_FINAL { return New(NULL); }

  RaftKvPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RaftKvPair& from);
  void MergeFrom(const RaftKvPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RaftKvPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint64 timestamp = 3;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // uint64 applyIndex = 4;
  void clear_applyindex();
  static const int kApplyIndexFieldNumber = 4;
  ::google::protobuf::uint64 applyindex() const;
  void set_applyindex(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.RaftKvPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint64 applyindex_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KvPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.KvPair) */ {
 public:
  KvPair();
  virtual ~KvPair();

  KvPair(const KvPair& from);

  inline KvPair& operator=(const KvPair& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KvPair(KvPair&& from) noexcept
    : KvPair() {
    *this = ::std::move(from);
  }

  inline KvPair& operator=(KvPair&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KvPair& default_instance();

  static inline const KvPair* internal_default_instance() {
    return reinterpret_cast<const KvPair*>(
               &_KvPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(KvPair* other);
  friend void swap(KvPair& a, KvPair& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KvPair* New() const PROTOBUF_FINAL { return New(NULL); }

  KvPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KvPair& from);
  void MergeFrom(const KvPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KvPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.KvPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.GetRequest) */ {
 public:
  GetRequest();
  virtual ~GetRequest();

  GetRequest(const GetRequest& from);

  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRequest(GetRequest&& from) noexcept
    : GetRequest() {
    *this = ::std::move(from);
  }

  inline GetRequest& operator=(GetRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRequest& default_instance();

  static inline const GetRequest* internal_default_instance() {
    return reinterpret_cast<const GetRequest*>(
               &_GetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GetRequest* other);
  friend void swap(GetRequest& a, GetRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRequest& from);
  void MergeFrom(const GetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.GetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.GetResponse) */ {
 public:
  GetResponse();
  virtual ~GetResponse();

  GetResponse(const GetResponse& from);

  inline GetResponse& operator=(const GetResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetResponse(GetResponse&& from) noexcept
    : GetResponse() {
    *this = ::std::move(from);
  }

  inline GetResponse& operator=(GetResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetResponse& default_instance();

  static inline const GetResponse* internal_default_instance() {
    return reinterpret_cast<const GetResponse*>(
               &_GetResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GetResponse* other);
  friend void swap(GetResponse& a, GetResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetResponse& from);
  void MergeFrom(const GetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.GetResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.PutRequest) */ {
 public:
  PutRequest();
  virtual ~PutRequest();

  PutRequest(const PutRequest& from);

  inline PutRequest& operator=(const PutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutRequest(PutRequest&& from) noexcept
    : PutRequest() {
    *this = ::std::move(from);
  }

  inline PutRequest& operator=(PutRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PutRequest& default_instance();

  static inline const PutRequest* internal_default_instance() {
    return reinterpret_cast<const PutRequest*>(
               &_PutRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PutRequest* other);
  friend void swap(PutRequest& a, PutRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PutRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutRequest& from);
  void MergeFrom(const PutRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // bytes value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.PutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.PutResponse) */ {
 public:
  PutResponse();
  virtual ~PutResponse();

  PutResponse(const PutResponse& from);

  inline PutResponse& operator=(const PutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PutResponse(PutResponse&& from) noexcept
    : PutResponse() {
    *this = ::std::move(from);
  }

  inline PutResponse& operator=(PutResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PutResponse& default_instance();

  static inline const PutResponse* internal_default_instance() {
    return reinterpret_cast<const PutResponse*>(
               &_PutResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PutResponse* other);
  friend void swap(PutResponse& a, PutResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PutResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PutResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PutResponse& from);
  void MergeFrom(const PutResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.PutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.DeleteRequest) */ {
 public:
  DeleteRequest();
  virtual ~DeleteRequest();

  DeleteRequest(const DeleteRequest& from);

  inline DeleteRequest& operator=(const DeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteRequest(DeleteRequest&& from) noexcept
    : DeleteRequest() {
    *this = ::std::move(from);
  }

  inline DeleteRequest& operator=(DeleteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRequest& default_instance();

  static inline const DeleteRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteRequest*>(
               &_DeleteRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(DeleteRequest* other);
  friend void swap(DeleteRequest& a, DeleteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteRequest& from);
  void MergeFrom(const DeleteRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.DeleteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.DeleteResponse) */ {
 public:
  DeleteResponse();
  virtual ~DeleteResponse();

  DeleteResponse(const DeleteResponse& from);

  inline DeleteResponse& operator=(const DeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteResponse(DeleteResponse&& from) noexcept
    : DeleteResponse() {
    *this = ::std::move(from);
  }

  inline DeleteResponse& operator=(DeleteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteResponse& default_instance();

  static inline const DeleteResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteResponse*>(
               &_DeleteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(DeleteResponse* other);
  friend void swap(DeleteResponse& a, DeleteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteResponse& from);
  void MergeFrom(const DeleteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.DeleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KvPairExecute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.KvPairExecute) */ {
 public:
  KvPairExecute();
  virtual ~KvPairExecute();

  KvPairExecute(const KvPairExecute& from);

  inline KvPairExecute& operator=(const KvPairExecute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KvPairExecute(KvPairExecute&& from) noexcept
    : KvPairExecute() {
    *this = ::std::move(from);
  }

  inline KvPairExecute& operator=(KvPairExecute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KvPairExecute& default_instance();

  static inline const KvPairExecute* internal_default_instance() {
    return reinterpret_cast<const KvPairExecute*>(
               &_KvPairExecute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(KvPairExecute* other);
  friend void swap(KvPairExecute& a, KvPairExecute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KvPairExecute* New() const PROTOBUF_FINAL { return New(NULL); }

  KvPairExecute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KvPairExecute& from);
  void MergeFrom(const KvPairExecute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KvPairExecute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ms_raftcmdpb.KvPair kv_pair = 2;
  bool has_kv_pair() const;
  void clear_kv_pair();
  static const int kKvPairFieldNumber = 2;
  const ::ms_raftcmdpb::KvPair& kv_pair() const;
  ::ms_raftcmdpb::KvPair* mutable_kv_pair();
  ::ms_raftcmdpb::KvPair* release_kv_pair();
  void set_allocated_kv_pair(::ms_raftcmdpb::KvPair* kv_pair);

  // .ms_raftcmdpb.ExecuteType do = 1;
  void clear_do_();
  static const int kDoFieldNumber = 1;
  ::ms_raftcmdpb::ExecuteType do_() const;
  void set_do_(::ms_raftcmdpb::ExecuteType value);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.KvPairExecute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ms_raftcmdpb::KvPair* kv_pair_;
  int do__;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.ExecuteRequest) */ {
 public:
  ExecuteRequest();
  virtual ~ExecuteRequest();

  ExecuteRequest(const ExecuteRequest& from);

  inline ExecuteRequest& operator=(const ExecuteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteRequest(ExecuteRequest&& from) noexcept
    : ExecuteRequest() {
    *this = ::std::move(from);
  }

  inline ExecuteRequest& operator=(ExecuteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteRequest& default_instance();

  static inline const ExecuteRequest* internal_default_instance() {
    return reinterpret_cast<const ExecuteRequest*>(
               &_ExecuteRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ExecuteRequest* other);
  friend void swap(ExecuteRequest& a, ExecuteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteRequest& from);
  void MergeFrom(const ExecuteRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ms_raftcmdpb.KvPairExecute execs = 1;
  int execs_size() const;
  void clear_execs();
  static const int kExecsFieldNumber = 1;
  const ::ms_raftcmdpb::KvPairExecute& execs(int index) const;
  ::ms_raftcmdpb::KvPairExecute* mutable_execs(int index);
  ::ms_raftcmdpb::KvPairExecute* add_execs();
  ::google::protobuf::RepeatedPtrField< ::ms_raftcmdpb::KvPairExecute >*
      mutable_execs();
  const ::google::protobuf::RepeatedPtrField< ::ms_raftcmdpb::KvPairExecute >&
      execs() const;

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.ExecuteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ms_raftcmdpb::KvPairExecute > execs_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.ExecuteResponse) */ {
 public:
  ExecuteResponse();
  virtual ~ExecuteResponse();

  ExecuteResponse(const ExecuteResponse& from);

  inline ExecuteResponse& operator=(const ExecuteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteResponse(ExecuteResponse&& from) noexcept
    : ExecuteResponse() {
    *this = ::std::move(from);
  }

  inline ExecuteResponse& operator=(ExecuteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteResponse& default_instance();

  static inline const ExecuteResponse* internal_default_instance() {
    return reinterpret_cast<const ExecuteResponse*>(
               &_ExecuteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ExecuteResponse* other);
  friend void swap(ExecuteResponse& a, ExecuteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteResponse& from);
  void MergeFrom(const ExecuteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.ExecuteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ms_raftcmdpb.GetRequest get_req = 3;
  bool has_get_req() const;
  void clear_get_req();
  static const int kGetReqFieldNumber = 3;
  const ::ms_raftcmdpb::GetRequest& get_req() const;
  ::ms_raftcmdpb::GetRequest* mutable_get_req();
  ::ms_raftcmdpb::GetRequest* release_get_req();
  void set_allocated_get_req(::ms_raftcmdpb::GetRequest* get_req);

  // .ms_raftcmdpb.PutRequest put_req = 4;
  bool has_put_req() const;
  void clear_put_req();
  static const int kPutReqFieldNumber = 4;
  const ::ms_raftcmdpb::PutRequest& put_req() const;
  ::ms_raftcmdpb::PutRequest* mutable_put_req();
  ::ms_raftcmdpb::PutRequest* release_put_req();
  void set_allocated_put_req(::ms_raftcmdpb::PutRequest* put_req);

  // .ms_raftcmdpb.DeleteRequest delete_req = 5;
  bool has_delete_req() const;
  void clear_delete_req();
  static const int kDeleteReqFieldNumber = 5;
  const ::ms_raftcmdpb::DeleteRequest& delete_req() const;
  ::ms_raftcmdpb::DeleteRequest* mutable_delete_req();
  ::ms_raftcmdpb::DeleteRequest* release_delete_req();
  void set_allocated_delete_req(::ms_raftcmdpb::DeleteRequest* delete_req);

  // .ms_raftcmdpb.ExecuteRequest execute_req = 6;
  bool has_execute_req() const;
  void clear_execute_req();
  static const int kExecuteReqFieldNumber = 6;
  const ::ms_raftcmdpb::ExecuteRequest& execute_req() const;
  ::ms_raftcmdpb::ExecuteRequest* mutable_execute_req();
  ::ms_raftcmdpb::ExecuteRequest* release_execute_req();
  void set_allocated_execute_req(::ms_raftcmdpb::ExecuteRequest* execute_req);

  // .ms_raftcmdpb.CmdType cmd_type = 2;
  void clear_cmd_type();
  static const int kCmdTypeFieldNumber = 2;
  ::ms_raftcmdpb::CmdType cmd_type() const;
  void set_cmd_type(::ms_raftcmdpb::CmdType value);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ms_raftcmdpb::GetRequest* get_req_;
  ::ms_raftcmdpb::PutRequest* put_req_;
  ::ms_raftcmdpb::DeleteRequest* delete_req_;
  ::ms_raftcmdpb::ExecuteRequest* execute_req_;
  int cmd_type_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ms_raftcmdpb.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ms_raftcmdpb.GetResponse get_resp = 2;
  bool has_get_resp() const;
  void clear_get_resp();
  static const int kGetRespFieldNumber = 2;
  const ::ms_raftcmdpb::GetResponse& get_resp() const;
  ::ms_raftcmdpb::GetResponse* mutable_get_resp();
  ::ms_raftcmdpb::GetResponse* release_get_resp();
  void set_allocated_get_resp(::ms_raftcmdpb::GetResponse* get_resp);

  // .ms_raftcmdpb.PutResponse put_resp = 3;
  bool has_put_resp() const;
  void clear_put_resp();
  static const int kPutRespFieldNumber = 3;
  const ::ms_raftcmdpb::PutResponse& put_resp() const;
  ::ms_raftcmdpb::PutResponse* mutable_put_resp();
  ::ms_raftcmdpb::PutResponse* release_put_resp();
  void set_allocated_put_resp(::ms_raftcmdpb::PutResponse* put_resp);

  // .ms_raftcmdpb.DeleteResponse delete_resp = 4;
  bool has_delete_resp() const;
  void clear_delete_resp();
  static const int kDeleteRespFieldNumber = 4;
  const ::ms_raftcmdpb::DeleteResponse& delete_resp() const;
  ::ms_raftcmdpb::DeleteResponse* mutable_delete_resp();
  ::ms_raftcmdpb::DeleteResponse* release_delete_resp();
  void set_allocated_delete_resp(::ms_raftcmdpb::DeleteResponse* delete_resp);

  // .ms_raftcmdpb.ExecuteResponse execute_resp = 5;
  bool has_execute_resp() const;
  void clear_execute_resp();
  static const int kExecuteRespFieldNumber = 5;
  const ::ms_raftcmdpb::ExecuteResponse& execute_resp() const;
  ::ms_raftcmdpb::ExecuteResponse* mutable_execute_resp();
  ::ms_raftcmdpb::ExecuteResponse* release_execute_resp();
  void set_allocated_execute_resp(::ms_raftcmdpb::ExecuteResponse* execute_resp);

  // .ms_raftcmdpb.CmdType cmd_type = 1;
  void clear_cmd_type();
  static const int kCmdTypeFieldNumber = 1;
  ::ms_raftcmdpb::CmdType cmd_type() const;
  void set_cmd_type(::ms_raftcmdpb::CmdType value);

  // @@protoc_insertion_point(class_scope:ms_raftcmdpb.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ms_raftcmdpb::GetResponse* get_resp_;
  ::ms_raftcmdpb::PutResponse* put_resp_;
  ::ms_raftcmdpb::DeleteResponse* delete_resp_;
  ::ms_raftcmdpb::ExecuteResponse* execute_resp_;
  int cmd_type_;
  mutable int _cached_size_;
  friend struct protobuf_ms_5fraftcmdpb_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RaftKvPair

// bytes key = 1;
inline void RaftKvPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RaftKvPair::key() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.RaftKvPair.key)
  return key_.GetNoArena();
}
inline void RaftKvPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.RaftKvPair.key)
}
#if LANG_CXX11
inline void RaftKvPair::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.RaftKvPair.key)
}
#endif
inline void RaftKvPair::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.RaftKvPair.key)
}
inline void RaftKvPair::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.RaftKvPair.key)
}
inline ::std::string* RaftKvPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.RaftKvPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RaftKvPair::release_key() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.RaftKvPair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RaftKvPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.RaftKvPair.key)
}

// bytes value = 2;
inline void RaftKvPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RaftKvPair::value() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.RaftKvPair.value)
  return value_.GetNoArena();
}
inline void RaftKvPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.RaftKvPair.value)
}
#if LANG_CXX11
inline void RaftKvPair::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.RaftKvPair.value)
}
#endif
inline void RaftKvPair::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.RaftKvPair.value)
}
inline void RaftKvPair::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.RaftKvPair.value)
}
inline ::std::string* RaftKvPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.RaftKvPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RaftKvPair::release_value() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.RaftKvPair.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RaftKvPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.RaftKvPair.value)
}

// uint64 timestamp = 3;
inline void RaftKvPair::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RaftKvPair::timestamp() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.RaftKvPair.timestamp)
  return timestamp_;
}
inline void RaftKvPair::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.RaftKvPair.timestamp)
}

// uint64 applyIndex = 4;
inline void RaftKvPair::clear_applyindex() {
  applyindex_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RaftKvPair::applyindex() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.RaftKvPair.applyIndex)
  return applyindex_;
}
inline void RaftKvPair::set_applyindex(::google::protobuf::uint64 value) {
  
  applyindex_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.RaftKvPair.applyIndex)
}

// -------------------------------------------------------------------

// KvPair

// bytes key = 1;
inline void KvPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KvPair::key() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.KvPair.key)
  return key_.GetNoArena();
}
inline void KvPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.KvPair.key)
}
#if LANG_CXX11
inline void KvPair::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.KvPair.key)
}
#endif
inline void KvPair::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.KvPair.key)
}
inline void KvPair::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.KvPair.key)
}
inline ::std::string* KvPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.KvPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KvPair::release_key() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.KvPair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KvPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.KvPair.key)
}

// bytes value = 2;
inline void KvPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KvPair::value() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.KvPair.value)
  return value_.GetNoArena();
}
inline void KvPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.KvPair.value)
}
#if LANG_CXX11
inline void KvPair::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.KvPair.value)
}
#endif
inline void KvPair::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.KvPair.value)
}
inline void KvPair::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.KvPair.value)
}
inline ::std::string* KvPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.KvPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KvPair::release_value() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.KvPair.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KvPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.KvPair.value)
}

// -------------------------------------------------------------------

// GetRequest

// bytes key = 1;
inline void GetRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRequest::key() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.GetRequest.key)
  return key_.GetNoArena();
}
inline void GetRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.GetRequest.key)
}
#if LANG_CXX11
inline void GetRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.GetRequest.key)
}
#endif
inline void GetRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.GetRequest.key)
}
inline void GetRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.GetRequest.key)
}
inline ::std::string* GetRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.GetRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRequest::release_key() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.GetRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.GetRequest.key)
}

// -------------------------------------------------------------------

// GetResponse

// int32 code = 1;
inline void GetResponse::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 GetResponse::code() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.GetResponse.code)
  return code_;
}
inline void GetResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.GetResponse.code)
}

// bytes value = 2;
inline void GetResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetResponse::value() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.GetResponse.value)
  return value_.GetNoArena();
}
inline void GetResponse::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.GetResponse.value)
}
#if LANG_CXX11
inline void GetResponse::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.GetResponse.value)
}
#endif
inline void GetResponse::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.GetResponse.value)
}
inline void GetResponse::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.GetResponse.value)
}
inline ::std::string* GetResponse::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.GetResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetResponse::release_value() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.GetResponse.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.GetResponse.value)
}

// -------------------------------------------------------------------

// PutRequest

// bytes key = 1;
inline void PutRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutRequest::key() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.PutRequest.key)
  return key_.GetNoArena();
}
inline void PutRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.PutRequest.key)
}
#if LANG_CXX11
inline void PutRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.PutRequest.key)
}
#endif
inline void PutRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.PutRequest.key)
}
inline void PutRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.PutRequest.key)
}
inline ::std::string* PutRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.PutRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_key() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.PutRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.PutRequest.key)
}

// bytes value = 2;
inline void PutRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PutRequest::value() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.PutRequest.value)
  return value_.GetNoArena();
}
inline void PutRequest::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.PutRequest.value)
}
#if LANG_CXX11
inline void PutRequest::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.PutRequest.value)
}
#endif
inline void PutRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.PutRequest.value)
}
inline void PutRequest::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.PutRequest.value)
}
inline ::std::string* PutRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.PutRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PutRequest::release_value() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.PutRequest.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PutRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.PutRequest.value)
}

// -------------------------------------------------------------------

// PutResponse

// int32 code = 1;
inline void PutResponse::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 PutResponse::code() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.PutResponse.code)
  return code_;
}
inline void PutResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.PutResponse.code)
}

// -------------------------------------------------------------------

// DeleteRequest

// bytes key = 1;
inline void DeleteRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteRequest::key() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.DeleteRequest.key)
  return key_.GetNoArena();
}
inline void DeleteRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.DeleteRequest.key)
}
#if LANG_CXX11
inline void DeleteRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.DeleteRequest.key)
}
#endif
inline void DeleteRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.DeleteRequest.key)
}
inline void DeleteRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.DeleteRequest.key)
}
inline ::std::string* DeleteRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.DeleteRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteRequest::release_key() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.DeleteRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.DeleteRequest.key)
}

// -------------------------------------------------------------------

// DeleteResponse

// int32 code = 1;
inline void DeleteResponse::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 DeleteResponse::code() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.DeleteResponse.code)
  return code_;
}
inline void DeleteResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.DeleteResponse.code)
}

// -------------------------------------------------------------------

// KvPairExecute

// .ms_raftcmdpb.ExecuteType do = 1;
inline void KvPairExecute::clear_do_() {
  do__ = 0;
}
inline ::ms_raftcmdpb::ExecuteType KvPairExecute::do_() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.KvPairExecute.do)
  return static_cast< ::ms_raftcmdpb::ExecuteType >(do__);
}
inline void KvPairExecute::set_do_(::ms_raftcmdpb::ExecuteType value) {
  
  do__ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.KvPairExecute.do)
}

// .ms_raftcmdpb.KvPair kv_pair = 2;
inline bool KvPairExecute::has_kv_pair() const {
  return this != internal_default_instance() && kv_pair_ != NULL;
}
inline void KvPairExecute::clear_kv_pair() {
  if (GetArenaNoVirtual() == NULL && kv_pair_ != NULL) delete kv_pair_;
  kv_pair_ = NULL;
}
inline const ::ms_raftcmdpb::KvPair& KvPairExecute::kv_pair() const {
  const ::ms_raftcmdpb::KvPair* p = kv_pair_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.KvPairExecute.kv_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::KvPair*>(
      &::ms_raftcmdpb::_KvPair_default_instance_);
}
inline ::ms_raftcmdpb::KvPair* KvPairExecute::mutable_kv_pair() {
  
  if (kv_pair_ == NULL) {
    kv_pair_ = new ::ms_raftcmdpb::KvPair;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.KvPairExecute.kv_pair)
  return kv_pair_;
}
inline ::ms_raftcmdpb::KvPair* KvPairExecute::release_kv_pair() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.KvPairExecute.kv_pair)
  
  ::ms_raftcmdpb::KvPair* temp = kv_pair_;
  kv_pair_ = NULL;
  return temp;
}
inline void KvPairExecute::set_allocated_kv_pair(::ms_raftcmdpb::KvPair* kv_pair) {
  delete kv_pair_;
  kv_pair_ = kv_pair;
  if (kv_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.KvPairExecute.kv_pair)
}

// -------------------------------------------------------------------

// ExecuteRequest

// repeated .ms_raftcmdpb.KvPairExecute execs = 1;
inline int ExecuteRequest::execs_size() const {
  return execs_.size();
}
inline void ExecuteRequest::clear_execs() {
  execs_.Clear();
}
inline const ::ms_raftcmdpb::KvPairExecute& ExecuteRequest::execs(int index) const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.ExecuteRequest.execs)
  return execs_.Get(index);
}
inline ::ms_raftcmdpb::KvPairExecute* ExecuteRequest::mutable_execs(int index) {
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.ExecuteRequest.execs)
  return execs_.Mutable(index);
}
inline ::ms_raftcmdpb::KvPairExecute* ExecuteRequest::add_execs() {
  // @@protoc_insertion_point(field_add:ms_raftcmdpb.ExecuteRequest.execs)
  return execs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ms_raftcmdpb::KvPairExecute >*
ExecuteRequest::mutable_execs() {
  // @@protoc_insertion_point(field_mutable_list:ms_raftcmdpb.ExecuteRequest.execs)
  return &execs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ms_raftcmdpb::KvPairExecute >&
ExecuteRequest::execs() const {
  // @@protoc_insertion_point(field_list:ms_raftcmdpb.ExecuteRequest.execs)
  return execs_;
}

// -------------------------------------------------------------------

// ExecuteResponse

// int32 code = 1;
inline void ExecuteResponse::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 ExecuteResponse::code() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.ExecuteResponse.code)
  return code_;
}
inline void ExecuteResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.ExecuteResponse.code)
}

// -------------------------------------------------------------------

// Request

// .ms_raftcmdpb.CmdType cmd_type = 2;
inline void Request::clear_cmd_type() {
  cmd_type_ = 0;
}
inline ::ms_raftcmdpb::CmdType Request::cmd_type() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Request.cmd_type)
  return static_cast< ::ms_raftcmdpb::CmdType >(cmd_type_);
}
inline void Request::set_cmd_type(::ms_raftcmdpb::CmdType value) {
  
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.Request.cmd_type)
}

// .ms_raftcmdpb.GetRequest get_req = 3;
inline bool Request::has_get_req() const {
  return this != internal_default_instance() && get_req_ != NULL;
}
inline void Request::clear_get_req() {
  if (GetArenaNoVirtual() == NULL && get_req_ != NULL) delete get_req_;
  get_req_ = NULL;
}
inline const ::ms_raftcmdpb::GetRequest& Request::get_req() const {
  const ::ms_raftcmdpb::GetRequest* p = get_req_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Request.get_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::GetRequest*>(
      &::ms_raftcmdpb::_GetRequest_default_instance_);
}
inline ::ms_raftcmdpb::GetRequest* Request::mutable_get_req() {
  
  if (get_req_ == NULL) {
    get_req_ = new ::ms_raftcmdpb::GetRequest;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Request.get_req)
  return get_req_;
}
inline ::ms_raftcmdpb::GetRequest* Request::release_get_req() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Request.get_req)
  
  ::ms_raftcmdpb::GetRequest* temp = get_req_;
  get_req_ = NULL;
  return temp;
}
inline void Request::set_allocated_get_req(::ms_raftcmdpb::GetRequest* get_req) {
  delete get_req_;
  get_req_ = get_req;
  if (get_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Request.get_req)
}

// .ms_raftcmdpb.PutRequest put_req = 4;
inline bool Request::has_put_req() const {
  return this != internal_default_instance() && put_req_ != NULL;
}
inline void Request::clear_put_req() {
  if (GetArenaNoVirtual() == NULL && put_req_ != NULL) delete put_req_;
  put_req_ = NULL;
}
inline const ::ms_raftcmdpb::PutRequest& Request::put_req() const {
  const ::ms_raftcmdpb::PutRequest* p = put_req_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Request.put_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::PutRequest*>(
      &::ms_raftcmdpb::_PutRequest_default_instance_);
}
inline ::ms_raftcmdpb::PutRequest* Request::mutable_put_req() {
  
  if (put_req_ == NULL) {
    put_req_ = new ::ms_raftcmdpb::PutRequest;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Request.put_req)
  return put_req_;
}
inline ::ms_raftcmdpb::PutRequest* Request::release_put_req() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Request.put_req)
  
  ::ms_raftcmdpb::PutRequest* temp = put_req_;
  put_req_ = NULL;
  return temp;
}
inline void Request::set_allocated_put_req(::ms_raftcmdpb::PutRequest* put_req) {
  delete put_req_;
  put_req_ = put_req;
  if (put_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Request.put_req)
}

// .ms_raftcmdpb.DeleteRequest delete_req = 5;
inline bool Request::has_delete_req() const {
  return this != internal_default_instance() && delete_req_ != NULL;
}
inline void Request::clear_delete_req() {
  if (GetArenaNoVirtual() == NULL && delete_req_ != NULL) delete delete_req_;
  delete_req_ = NULL;
}
inline const ::ms_raftcmdpb::DeleteRequest& Request::delete_req() const {
  const ::ms_raftcmdpb::DeleteRequest* p = delete_req_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Request.delete_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::DeleteRequest*>(
      &::ms_raftcmdpb::_DeleteRequest_default_instance_);
}
inline ::ms_raftcmdpb::DeleteRequest* Request::mutable_delete_req() {
  
  if (delete_req_ == NULL) {
    delete_req_ = new ::ms_raftcmdpb::DeleteRequest;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Request.delete_req)
  return delete_req_;
}
inline ::ms_raftcmdpb::DeleteRequest* Request::release_delete_req() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Request.delete_req)
  
  ::ms_raftcmdpb::DeleteRequest* temp = delete_req_;
  delete_req_ = NULL;
  return temp;
}
inline void Request::set_allocated_delete_req(::ms_raftcmdpb::DeleteRequest* delete_req) {
  delete delete_req_;
  delete_req_ = delete_req;
  if (delete_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Request.delete_req)
}

// .ms_raftcmdpb.ExecuteRequest execute_req = 6;
inline bool Request::has_execute_req() const {
  return this != internal_default_instance() && execute_req_ != NULL;
}
inline void Request::clear_execute_req() {
  if (GetArenaNoVirtual() == NULL && execute_req_ != NULL) delete execute_req_;
  execute_req_ = NULL;
}
inline const ::ms_raftcmdpb::ExecuteRequest& Request::execute_req() const {
  const ::ms_raftcmdpb::ExecuteRequest* p = execute_req_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Request.execute_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::ExecuteRequest*>(
      &::ms_raftcmdpb::_ExecuteRequest_default_instance_);
}
inline ::ms_raftcmdpb::ExecuteRequest* Request::mutable_execute_req() {
  
  if (execute_req_ == NULL) {
    execute_req_ = new ::ms_raftcmdpb::ExecuteRequest;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Request.execute_req)
  return execute_req_;
}
inline ::ms_raftcmdpb::ExecuteRequest* Request::release_execute_req() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Request.execute_req)
  
  ::ms_raftcmdpb::ExecuteRequest* temp = execute_req_;
  execute_req_ = NULL;
  return temp;
}
inline void Request::set_allocated_execute_req(::ms_raftcmdpb::ExecuteRequest* execute_req) {
  delete execute_req_;
  execute_req_ = execute_req;
  if (execute_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Request.execute_req)
}

// -------------------------------------------------------------------

// Response

// .ms_raftcmdpb.CmdType cmd_type = 1;
inline void Response::clear_cmd_type() {
  cmd_type_ = 0;
}
inline ::ms_raftcmdpb::CmdType Response::cmd_type() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Response.cmd_type)
  return static_cast< ::ms_raftcmdpb::CmdType >(cmd_type_);
}
inline void Response::set_cmd_type(::ms_raftcmdpb::CmdType value) {
  
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.Response.cmd_type)
}

// .ms_raftcmdpb.GetResponse get_resp = 2;
inline bool Response::has_get_resp() const {
  return this != internal_default_instance() && get_resp_ != NULL;
}
inline void Response::clear_get_resp() {
  if (GetArenaNoVirtual() == NULL && get_resp_ != NULL) delete get_resp_;
  get_resp_ = NULL;
}
inline const ::ms_raftcmdpb::GetResponse& Response::get_resp() const {
  const ::ms_raftcmdpb::GetResponse* p = get_resp_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Response.get_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::GetResponse*>(
      &::ms_raftcmdpb::_GetResponse_default_instance_);
}
inline ::ms_raftcmdpb::GetResponse* Response::mutable_get_resp() {
  
  if (get_resp_ == NULL) {
    get_resp_ = new ::ms_raftcmdpb::GetResponse;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Response.get_resp)
  return get_resp_;
}
inline ::ms_raftcmdpb::GetResponse* Response::release_get_resp() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Response.get_resp)
  
  ::ms_raftcmdpb::GetResponse* temp = get_resp_;
  get_resp_ = NULL;
  return temp;
}
inline void Response::set_allocated_get_resp(::ms_raftcmdpb::GetResponse* get_resp) {
  delete get_resp_;
  get_resp_ = get_resp;
  if (get_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Response.get_resp)
}

// .ms_raftcmdpb.PutResponse put_resp = 3;
inline bool Response::has_put_resp() const {
  return this != internal_default_instance() && put_resp_ != NULL;
}
inline void Response::clear_put_resp() {
  if (GetArenaNoVirtual() == NULL && put_resp_ != NULL) delete put_resp_;
  put_resp_ = NULL;
}
inline const ::ms_raftcmdpb::PutResponse& Response::put_resp() const {
  const ::ms_raftcmdpb::PutResponse* p = put_resp_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Response.put_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::PutResponse*>(
      &::ms_raftcmdpb::_PutResponse_default_instance_);
}
inline ::ms_raftcmdpb::PutResponse* Response::mutable_put_resp() {
  
  if (put_resp_ == NULL) {
    put_resp_ = new ::ms_raftcmdpb::PutResponse;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Response.put_resp)
  return put_resp_;
}
inline ::ms_raftcmdpb::PutResponse* Response::release_put_resp() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Response.put_resp)
  
  ::ms_raftcmdpb::PutResponse* temp = put_resp_;
  put_resp_ = NULL;
  return temp;
}
inline void Response::set_allocated_put_resp(::ms_raftcmdpb::PutResponse* put_resp) {
  delete put_resp_;
  put_resp_ = put_resp;
  if (put_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Response.put_resp)
}

// .ms_raftcmdpb.DeleteResponse delete_resp = 4;
inline bool Response::has_delete_resp() const {
  return this != internal_default_instance() && delete_resp_ != NULL;
}
inline void Response::clear_delete_resp() {
  if (GetArenaNoVirtual() == NULL && delete_resp_ != NULL) delete delete_resp_;
  delete_resp_ = NULL;
}
inline const ::ms_raftcmdpb::DeleteResponse& Response::delete_resp() const {
  const ::ms_raftcmdpb::DeleteResponse* p = delete_resp_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Response.delete_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::DeleteResponse*>(
      &::ms_raftcmdpb::_DeleteResponse_default_instance_);
}
inline ::ms_raftcmdpb::DeleteResponse* Response::mutable_delete_resp() {
  
  if (delete_resp_ == NULL) {
    delete_resp_ = new ::ms_raftcmdpb::DeleteResponse;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Response.delete_resp)
  return delete_resp_;
}
inline ::ms_raftcmdpb::DeleteResponse* Response::release_delete_resp() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Response.delete_resp)
  
  ::ms_raftcmdpb::DeleteResponse* temp = delete_resp_;
  delete_resp_ = NULL;
  return temp;
}
inline void Response::set_allocated_delete_resp(::ms_raftcmdpb::DeleteResponse* delete_resp) {
  delete delete_resp_;
  delete_resp_ = delete_resp;
  if (delete_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Response.delete_resp)
}

// .ms_raftcmdpb.ExecuteResponse execute_resp = 5;
inline bool Response::has_execute_resp() const {
  return this != internal_default_instance() && execute_resp_ != NULL;
}
inline void Response::clear_execute_resp() {
  if (GetArenaNoVirtual() == NULL && execute_resp_ != NULL) delete execute_resp_;
  execute_resp_ = NULL;
}
inline const ::ms_raftcmdpb::ExecuteResponse& Response::execute_resp() const {
  const ::ms_raftcmdpb::ExecuteResponse* p = execute_resp_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Response.execute_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::ExecuteResponse*>(
      &::ms_raftcmdpb::_ExecuteResponse_default_instance_);
}
inline ::ms_raftcmdpb::ExecuteResponse* Response::mutable_execute_resp() {
  
  if (execute_resp_ == NULL) {
    execute_resp_ = new ::ms_raftcmdpb::ExecuteResponse;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Response.execute_resp)
  return execute_resp_;
}
inline ::ms_raftcmdpb::ExecuteResponse* Response::release_execute_resp() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Response.execute_resp)
  
  ::ms_raftcmdpb::ExecuteResponse* temp = execute_resp_;
  execute_resp_ = NULL;
  return temp;
}
inline void Response::set_allocated_execute_resp(::ms_raftcmdpb::ExecuteResponse* execute_resp) {
  delete execute_resp_;
  execute_resp_ = execute_resp;
  if (execute_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Response.execute_resp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace ms_raftcmdpb

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ms_raftcmdpb::ExecuteType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ms_raftcmdpb::ExecuteType>() {
  return ::ms_raftcmdpb::ExecuteType_descriptor();
}
template <> struct is_proto_enum< ::ms_raftcmdpb::CmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ms_raftcmdpb::CmdType>() {
  return ::ms_raftcmdpb::CmdType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ms_5fraftcmdpb_2eproto__INCLUDED
