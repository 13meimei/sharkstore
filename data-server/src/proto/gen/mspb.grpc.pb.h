// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: mspb.proto
#ifndef GRPC_mspb_2eproto__INCLUDED
#define GRPC_mspb_2eproto__INCLUDED

#include "mspb.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/proto_utils.h>
#include <grpc++/impl/codegen/rpc_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/status.h>
#include <grpc++/impl/codegen/stub_options.h>
#include <grpc++/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class RpcService;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace mspb {

class MsServer final {
 public:
  static constexpr char const* service_full_name() {
    return "mspb.MsServer";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status NodeHeartbeat(::grpc::ClientContext* context, const ::mspb::NodeHeartbeatRequest& request, ::mspb::NodeHeartbeatResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::NodeHeartbeatResponse>> AsyncNodeHeartbeat(::grpc::ClientContext* context, const ::mspb::NodeHeartbeatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::NodeHeartbeatResponse>>(AsyncNodeHeartbeatRaw(context, request, cq));
    }
    virtual ::grpc::Status RangeHeartbeat(::grpc::ClientContext* context, const ::mspb::RangeHeartbeatRequest& request, ::mspb::RangeHeartbeatResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::RangeHeartbeatResponse>> AsyncRangeHeartbeat(::grpc::ClientContext* context, const ::mspb::RangeHeartbeatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::RangeHeartbeatResponse>>(AsyncRangeHeartbeatRaw(context, request, cq));
    }
    virtual ::grpc::Status AskSplit(::grpc::ClientContext* context, const ::mspb::AskSplitRequest& request, ::mspb::AskSplitResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::AskSplitResponse>> AsyncAskSplit(::grpc::ClientContext* context, const ::mspb::AskSplitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::AskSplitResponse>>(AsyncAskSplitRaw(context, request, cq));
    }
    virtual ::grpc::Status ReportSplit(::grpc::ClientContext* context, const ::mspb::ReportSplitRequest& request, ::mspb::ReportSplitResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::ReportSplitResponse>> AsyncReportSplit(::grpc::ClientContext* context, const ::mspb::ReportSplitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::ReportSplitResponse>>(AsyncReportSplitRaw(context, request, cq));
    }
    virtual ::grpc::Status NodeLogin(::grpc::ClientContext* context, const ::mspb::NodeLoginRequest& request, ::mspb::NodeLoginResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::NodeLoginResponse>> AsyncNodeLogin(::grpc::ClientContext* context, const ::mspb::NodeLoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::NodeLoginResponse>>(AsyncNodeLoginRaw(context, request, cq));
    }
    virtual ::grpc::Status GetNodeId(::grpc::ClientContext* context, const ::mspb::GetNodeIdRequest& request, ::mspb::GetNodeIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetNodeIdResponse>> AsyncGetNodeId(::grpc::ClientContext* context, const ::mspb::GetNodeIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetNodeIdResponse>>(AsyncGetNodeIdRaw(context, request, cq));
    }
    virtual ::grpc::Status GetMSLeader(::grpc::ClientContext* context, const ::mspb::GetMSLeaderRequest& request, ::mspb::GetMSLeaderResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetMSLeaderResponse>> AsyncGetMSLeader(::grpc::ClientContext* context, const ::mspb::GetMSLeaderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetMSLeaderResponse>>(AsyncGetMSLeaderRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRoute(::grpc::ClientContext* context, const ::mspb::GetRouteRequest& request, ::mspb::GetRouteResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetRouteResponse>> AsyncGetRoute(::grpc::ClientContext* context, const ::mspb::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetRouteResponse>>(AsyncGetRouteRaw(context, request, cq));
    }
    virtual ::grpc::Status GetNode(::grpc::ClientContext* context, const ::mspb::GetNodeRequest& request, ::mspb::GetNodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetNodeResponse>> AsyncGetNode(::grpc::ClientContext* context, const ::mspb::GetNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetNodeResponse>>(AsyncGetNodeRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDB(::grpc::ClientContext* context, const ::mspb::GetDBRequest& request, ::mspb::GetDBResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetDBResponse>> AsyncGetDB(::grpc::ClientContext* context, const ::mspb::GetDBRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetDBResponse>>(AsyncGetDBRaw(context, request, cq));
    }
    virtual ::grpc::Status GetTable(::grpc::ClientContext* context, const ::mspb::GetTableRequest& request, ::mspb::GetTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetTableResponse>> AsyncGetTable(::grpc::ClientContext* context, const ::mspb::GetTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetTableResponse>>(AsyncGetTableRaw(context, request, cq));
    }
    virtual ::grpc::Status GetTableById(::grpc::ClientContext* context, const ::mspb::GetTableByIdRequest& request, ::mspb::GetTableByIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetTableByIdResponse>> AsyncGetTableById(::grpc::ClientContext* context, const ::mspb::GetTableByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetTableByIdResponse>>(AsyncGetTableByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status GetColumns(::grpc::ClientContext* context, const ::mspb::GetColumnsRequest& request, ::mspb::GetColumnsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetColumnsResponse>> AsyncGetColumns(::grpc::ClientContext* context, const ::mspb::GetColumnsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetColumnsResponse>>(AsyncGetColumnsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetColumnByName(::grpc::ClientContext* context, const ::mspb::GetColumnByNameRequest& request, ::mspb::GetColumnByNameResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetColumnByNameResponse>> AsyncGetColumnByName(::grpc::ClientContext* context, const ::mspb::GetColumnByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetColumnByNameResponse>>(AsyncGetColumnByNameRaw(context, request, cq));
    }
    virtual ::grpc::Status GetColumnById(::grpc::ClientContext* context, const ::mspb::GetColumnByIdRequest& request, ::mspb::GetColumnByIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetColumnByIdResponse>> AsyncGetColumnById(::grpc::ClientContext* context, const ::mspb::GetColumnByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetColumnByIdResponse>>(AsyncGetColumnByIdRaw(context, request, cq));
    }
    virtual ::grpc::Status TruncateTable(::grpc::ClientContext* context, const ::mspb::TruncateTableRequest& request, ::mspb::TruncateTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::TruncateTableResponse>> AsyncTruncateTable(::grpc::ClientContext* context, const ::mspb::TruncateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::TruncateTableResponse>>(AsyncTruncateTableRaw(context, request, cq));
    }
    virtual ::grpc::Status AddColumn(::grpc::ClientContext* context, const ::mspb::AddColumnRequest& request, ::mspb::AddColumnResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::AddColumnResponse>> AsyncAddColumn(::grpc::ClientContext* context, const ::mspb::AddColumnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::AddColumnResponse>>(AsyncAddColumnRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateDatabase(::grpc::ClientContext* context, const ::mspb::CreateDatabaseRequest& request, ::mspb::CreateDatabaseResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::CreateDatabaseResponse>> AsyncCreateDatabase(::grpc::ClientContext* context, const ::mspb::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::CreateDatabaseResponse>>(AsyncCreateDatabaseRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateTable(::grpc::ClientContext* context, const ::mspb::CreateTableRequest& request, ::mspb::CreateTableResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::CreateTableResponse>> AsyncCreateTable(::grpc::ClientContext* context, const ::mspb::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::CreateTableResponse>>(AsyncCreateTableRaw(context, request, cq));
    }
    virtual ::grpc::Status GetAutoIncId(::grpc::ClientContext* context, const ::mspb::GetAutoIncIdRequest& request, ::mspb::GetAutoIncIdResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetAutoIncIdResponse>> AsyncGetAutoIncId(::grpc::ClientContext* context, const ::mspb::GetAutoIncIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetAutoIncIdResponse>>(AsyncGetAutoIncIdRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::NodeHeartbeatResponse>* AsyncNodeHeartbeatRaw(::grpc::ClientContext* context, const ::mspb::NodeHeartbeatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::RangeHeartbeatResponse>* AsyncRangeHeartbeatRaw(::grpc::ClientContext* context, const ::mspb::RangeHeartbeatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::AskSplitResponse>* AsyncAskSplitRaw(::grpc::ClientContext* context, const ::mspb::AskSplitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::ReportSplitResponse>* AsyncReportSplitRaw(::grpc::ClientContext* context, const ::mspb::ReportSplitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::NodeLoginResponse>* AsyncNodeLoginRaw(::grpc::ClientContext* context, const ::mspb::NodeLoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetNodeIdResponse>* AsyncGetNodeIdRaw(::grpc::ClientContext* context, const ::mspb::GetNodeIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetMSLeaderResponse>* AsyncGetMSLeaderRaw(::grpc::ClientContext* context, const ::mspb::GetMSLeaderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetRouteResponse>* AsyncGetRouteRaw(::grpc::ClientContext* context, const ::mspb::GetRouteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetNodeResponse>* AsyncGetNodeRaw(::grpc::ClientContext* context, const ::mspb::GetNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetDBResponse>* AsyncGetDBRaw(::grpc::ClientContext* context, const ::mspb::GetDBRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetTableResponse>* AsyncGetTableRaw(::grpc::ClientContext* context, const ::mspb::GetTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetTableByIdResponse>* AsyncGetTableByIdRaw(::grpc::ClientContext* context, const ::mspb::GetTableByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetColumnsResponse>* AsyncGetColumnsRaw(::grpc::ClientContext* context, const ::mspb::GetColumnsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetColumnByNameResponse>* AsyncGetColumnByNameRaw(::grpc::ClientContext* context, const ::mspb::GetColumnByNameRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetColumnByIdResponse>* AsyncGetColumnByIdRaw(::grpc::ClientContext* context, const ::mspb::GetColumnByIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::TruncateTableResponse>* AsyncTruncateTableRaw(::grpc::ClientContext* context, const ::mspb::TruncateTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::AddColumnResponse>* AsyncAddColumnRaw(::grpc::ClientContext* context, const ::mspb::AddColumnRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::CreateDatabaseResponse>* AsyncCreateDatabaseRaw(::grpc::ClientContext* context, const ::mspb::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::CreateTableResponse>* AsyncCreateTableRaw(::grpc::ClientContext* context, const ::mspb::CreateTableRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mspb::GetAutoIncIdResponse>* AsyncGetAutoIncIdRaw(::grpc::ClientContext* context, const ::mspb::GetAutoIncIdRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status NodeHeartbeat(::grpc::ClientContext* context, const ::mspb::NodeHeartbeatRequest& request, ::mspb::NodeHeartbeatResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::NodeHeartbeatResponse>> AsyncNodeHeartbeat(::grpc::ClientContext* context, const ::mspb::NodeHeartbeatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::NodeHeartbeatResponse>>(AsyncNodeHeartbeatRaw(context, request, cq));
    }
    ::grpc::Status RangeHeartbeat(::grpc::ClientContext* context, const ::mspb::RangeHeartbeatRequest& request, ::mspb::RangeHeartbeatResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::RangeHeartbeatResponse>> AsyncRangeHeartbeat(::grpc::ClientContext* context, const ::mspb::RangeHeartbeatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::RangeHeartbeatResponse>>(AsyncRangeHeartbeatRaw(context, request, cq));
    }
    ::grpc::Status AskSplit(::grpc::ClientContext* context, const ::mspb::AskSplitRequest& request, ::mspb::AskSplitResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::AskSplitResponse>> AsyncAskSplit(::grpc::ClientContext* context, const ::mspb::AskSplitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::AskSplitResponse>>(AsyncAskSplitRaw(context, request, cq));
    }
    ::grpc::Status ReportSplit(::grpc::ClientContext* context, const ::mspb::ReportSplitRequest& request, ::mspb::ReportSplitResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::ReportSplitResponse>> AsyncReportSplit(::grpc::ClientContext* context, const ::mspb::ReportSplitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::ReportSplitResponse>>(AsyncReportSplitRaw(context, request, cq));
    }
    ::grpc::Status NodeLogin(::grpc::ClientContext* context, const ::mspb::NodeLoginRequest& request, ::mspb::NodeLoginResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::NodeLoginResponse>> AsyncNodeLogin(::grpc::ClientContext* context, const ::mspb::NodeLoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::NodeLoginResponse>>(AsyncNodeLoginRaw(context, request, cq));
    }
    ::grpc::Status GetNodeId(::grpc::ClientContext* context, const ::mspb::GetNodeIdRequest& request, ::mspb::GetNodeIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetNodeIdResponse>> AsyncGetNodeId(::grpc::ClientContext* context, const ::mspb::GetNodeIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetNodeIdResponse>>(AsyncGetNodeIdRaw(context, request, cq));
    }
    ::grpc::Status GetMSLeader(::grpc::ClientContext* context, const ::mspb::GetMSLeaderRequest& request, ::mspb::GetMSLeaderResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetMSLeaderResponse>> AsyncGetMSLeader(::grpc::ClientContext* context, const ::mspb::GetMSLeaderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetMSLeaderResponse>>(AsyncGetMSLeaderRaw(context, request, cq));
    }
    ::grpc::Status GetRoute(::grpc::ClientContext* context, const ::mspb::GetRouteRequest& request, ::mspb::GetRouteResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetRouteResponse>> AsyncGetRoute(::grpc::ClientContext* context, const ::mspb::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetRouteResponse>>(AsyncGetRouteRaw(context, request, cq));
    }
    ::grpc::Status GetNode(::grpc::ClientContext* context, const ::mspb::GetNodeRequest& request, ::mspb::GetNodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetNodeResponse>> AsyncGetNode(::grpc::ClientContext* context, const ::mspb::GetNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetNodeResponse>>(AsyncGetNodeRaw(context, request, cq));
    }
    ::grpc::Status GetDB(::grpc::ClientContext* context, const ::mspb::GetDBRequest& request, ::mspb::GetDBResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetDBResponse>> AsyncGetDB(::grpc::ClientContext* context, const ::mspb::GetDBRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetDBResponse>>(AsyncGetDBRaw(context, request, cq));
    }
    ::grpc::Status GetTable(::grpc::ClientContext* context, const ::mspb::GetTableRequest& request, ::mspb::GetTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetTableResponse>> AsyncGetTable(::grpc::ClientContext* context, const ::mspb::GetTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetTableResponse>>(AsyncGetTableRaw(context, request, cq));
    }
    ::grpc::Status GetTableById(::grpc::ClientContext* context, const ::mspb::GetTableByIdRequest& request, ::mspb::GetTableByIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetTableByIdResponse>> AsyncGetTableById(::grpc::ClientContext* context, const ::mspb::GetTableByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetTableByIdResponse>>(AsyncGetTableByIdRaw(context, request, cq));
    }
    ::grpc::Status GetColumns(::grpc::ClientContext* context, const ::mspb::GetColumnsRequest& request, ::mspb::GetColumnsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetColumnsResponse>> AsyncGetColumns(::grpc::ClientContext* context, const ::mspb::GetColumnsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetColumnsResponse>>(AsyncGetColumnsRaw(context, request, cq));
    }
    ::grpc::Status GetColumnByName(::grpc::ClientContext* context, const ::mspb::GetColumnByNameRequest& request, ::mspb::GetColumnByNameResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetColumnByNameResponse>> AsyncGetColumnByName(::grpc::ClientContext* context, const ::mspb::GetColumnByNameRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetColumnByNameResponse>>(AsyncGetColumnByNameRaw(context, request, cq));
    }
    ::grpc::Status GetColumnById(::grpc::ClientContext* context, const ::mspb::GetColumnByIdRequest& request, ::mspb::GetColumnByIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetColumnByIdResponse>> AsyncGetColumnById(::grpc::ClientContext* context, const ::mspb::GetColumnByIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetColumnByIdResponse>>(AsyncGetColumnByIdRaw(context, request, cq));
    }
    ::grpc::Status TruncateTable(::grpc::ClientContext* context, const ::mspb::TruncateTableRequest& request, ::mspb::TruncateTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::TruncateTableResponse>> AsyncTruncateTable(::grpc::ClientContext* context, const ::mspb::TruncateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::TruncateTableResponse>>(AsyncTruncateTableRaw(context, request, cq));
    }
    ::grpc::Status AddColumn(::grpc::ClientContext* context, const ::mspb::AddColumnRequest& request, ::mspb::AddColumnResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::AddColumnResponse>> AsyncAddColumn(::grpc::ClientContext* context, const ::mspb::AddColumnRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::AddColumnResponse>>(AsyncAddColumnRaw(context, request, cq));
    }
    ::grpc::Status CreateDatabase(::grpc::ClientContext* context, const ::mspb::CreateDatabaseRequest& request, ::mspb::CreateDatabaseResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::CreateDatabaseResponse>> AsyncCreateDatabase(::grpc::ClientContext* context, const ::mspb::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::CreateDatabaseResponse>>(AsyncCreateDatabaseRaw(context, request, cq));
    }
    ::grpc::Status CreateTable(::grpc::ClientContext* context, const ::mspb::CreateTableRequest& request, ::mspb::CreateTableResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::CreateTableResponse>> AsyncCreateTable(::grpc::ClientContext* context, const ::mspb::CreateTableRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::CreateTableResponse>>(AsyncCreateTableRaw(context, request, cq));
    }
    ::grpc::Status GetAutoIncId(::grpc::ClientContext* context, const ::mspb::GetAutoIncIdRequest& request, ::mspb::GetAutoIncIdResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetAutoIncIdResponse>> AsyncGetAutoIncId(::grpc::ClientContext* context, const ::mspb::GetAutoIncIdRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mspb::GetAutoIncIdResponse>>(AsyncGetAutoIncIdRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::mspb::NodeHeartbeatResponse>* AsyncNodeHeartbeatRaw(::grpc::ClientContext* context, const ::mspb::NodeHeartbeatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::RangeHeartbeatResponse>* AsyncRangeHeartbeatRaw(::grpc::ClientContext* context, const ::mspb::RangeHeartbeatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::AskSplitResponse>* AsyncAskSplitRaw(::grpc::ClientContext* context, const ::mspb::AskSplitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::ReportSplitResponse>* AsyncReportSplitRaw(::grpc::ClientContext* context, const ::mspb::ReportSplitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::NodeLoginResponse>* AsyncNodeLoginRaw(::grpc::ClientContext* context, const ::mspb::NodeLoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetNodeIdResponse>* AsyncGetNodeIdRaw(::grpc::ClientContext* context, const ::mspb::GetNodeIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetMSLeaderResponse>* AsyncGetMSLeaderRaw(::grpc::ClientContext* context, const ::mspb::GetMSLeaderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetRouteResponse>* AsyncGetRouteRaw(::grpc::ClientContext* context, const ::mspb::GetRouteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetNodeResponse>* AsyncGetNodeRaw(::grpc::ClientContext* context, const ::mspb::GetNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetDBResponse>* AsyncGetDBRaw(::grpc::ClientContext* context, const ::mspb::GetDBRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetTableResponse>* AsyncGetTableRaw(::grpc::ClientContext* context, const ::mspb::GetTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetTableByIdResponse>* AsyncGetTableByIdRaw(::grpc::ClientContext* context, const ::mspb::GetTableByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetColumnsResponse>* AsyncGetColumnsRaw(::grpc::ClientContext* context, const ::mspb::GetColumnsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetColumnByNameResponse>* AsyncGetColumnByNameRaw(::grpc::ClientContext* context, const ::mspb::GetColumnByNameRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetColumnByIdResponse>* AsyncGetColumnByIdRaw(::grpc::ClientContext* context, const ::mspb::GetColumnByIdRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::TruncateTableResponse>* AsyncTruncateTableRaw(::grpc::ClientContext* context, const ::mspb::TruncateTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::AddColumnResponse>* AsyncAddColumnRaw(::grpc::ClientContext* context, const ::mspb::AddColumnRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::CreateDatabaseResponse>* AsyncCreateDatabaseRaw(::grpc::ClientContext* context, const ::mspb::CreateDatabaseRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::CreateTableResponse>* AsyncCreateTableRaw(::grpc::ClientContext* context, const ::mspb::CreateTableRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mspb::GetAutoIncIdResponse>* AsyncGetAutoIncIdRaw(::grpc::ClientContext* context, const ::mspb::GetAutoIncIdRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::RpcMethod rpcmethod_NodeHeartbeat_;
    const ::grpc::RpcMethod rpcmethod_RangeHeartbeat_;
    const ::grpc::RpcMethod rpcmethod_AskSplit_;
    const ::grpc::RpcMethod rpcmethod_ReportSplit_;
    const ::grpc::RpcMethod rpcmethod_NodeLogin_;
    const ::grpc::RpcMethod rpcmethod_GetNodeId_;
    const ::grpc::RpcMethod rpcmethod_GetMSLeader_;
    const ::grpc::RpcMethod rpcmethod_GetRoute_;
    const ::grpc::RpcMethod rpcmethod_GetNode_;
    const ::grpc::RpcMethod rpcmethod_GetDB_;
    const ::grpc::RpcMethod rpcmethod_GetTable_;
    const ::grpc::RpcMethod rpcmethod_GetTableById_;
    const ::grpc::RpcMethod rpcmethod_GetColumns_;
    const ::grpc::RpcMethod rpcmethod_GetColumnByName_;
    const ::grpc::RpcMethod rpcmethod_GetColumnById_;
    const ::grpc::RpcMethod rpcmethod_TruncateTable_;
    const ::grpc::RpcMethod rpcmethod_AddColumn_;
    const ::grpc::RpcMethod rpcmethod_CreateDatabase_;
    const ::grpc::RpcMethod rpcmethod_CreateTable_;
    const ::grpc::RpcMethod rpcmethod_GetAutoIncId_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status NodeHeartbeat(::grpc::ServerContext* context, const ::mspb::NodeHeartbeatRequest* request, ::mspb::NodeHeartbeatResponse* response);
    virtual ::grpc::Status RangeHeartbeat(::grpc::ServerContext* context, const ::mspb::RangeHeartbeatRequest* request, ::mspb::RangeHeartbeatResponse* response);
    virtual ::grpc::Status AskSplit(::grpc::ServerContext* context, const ::mspb::AskSplitRequest* request, ::mspb::AskSplitResponse* response);
    virtual ::grpc::Status ReportSplit(::grpc::ServerContext* context, const ::mspb::ReportSplitRequest* request, ::mspb::ReportSplitResponse* response);
    virtual ::grpc::Status NodeLogin(::grpc::ServerContext* context, const ::mspb::NodeLoginRequest* request, ::mspb::NodeLoginResponse* response);
    virtual ::grpc::Status GetNodeId(::grpc::ServerContext* context, const ::mspb::GetNodeIdRequest* request, ::mspb::GetNodeIdResponse* response);
    virtual ::grpc::Status GetMSLeader(::grpc::ServerContext* context, const ::mspb::GetMSLeaderRequest* request, ::mspb::GetMSLeaderResponse* response);
    virtual ::grpc::Status GetRoute(::grpc::ServerContext* context, const ::mspb::GetRouteRequest* request, ::mspb::GetRouteResponse* response);
    virtual ::grpc::Status GetNode(::grpc::ServerContext* context, const ::mspb::GetNodeRequest* request, ::mspb::GetNodeResponse* response);
    virtual ::grpc::Status GetDB(::grpc::ServerContext* context, const ::mspb::GetDBRequest* request, ::mspb::GetDBResponse* response);
    virtual ::grpc::Status GetTable(::grpc::ServerContext* context, const ::mspb::GetTableRequest* request, ::mspb::GetTableResponse* response);
    virtual ::grpc::Status GetTableById(::grpc::ServerContext* context, const ::mspb::GetTableByIdRequest* request, ::mspb::GetTableByIdResponse* response);
    virtual ::grpc::Status GetColumns(::grpc::ServerContext* context, const ::mspb::GetColumnsRequest* request, ::mspb::GetColumnsResponse* response);
    virtual ::grpc::Status GetColumnByName(::grpc::ServerContext* context, const ::mspb::GetColumnByNameRequest* request, ::mspb::GetColumnByNameResponse* response);
    virtual ::grpc::Status GetColumnById(::grpc::ServerContext* context, const ::mspb::GetColumnByIdRequest* request, ::mspb::GetColumnByIdResponse* response);
    virtual ::grpc::Status TruncateTable(::grpc::ServerContext* context, const ::mspb::TruncateTableRequest* request, ::mspb::TruncateTableResponse* response);
    virtual ::grpc::Status AddColumn(::grpc::ServerContext* context, const ::mspb::AddColumnRequest* request, ::mspb::AddColumnResponse* response);
    virtual ::grpc::Status CreateDatabase(::grpc::ServerContext* context, const ::mspb::CreateDatabaseRequest* request, ::mspb::CreateDatabaseResponse* response);
    virtual ::grpc::Status CreateTable(::grpc::ServerContext* context, const ::mspb::CreateTableRequest* request, ::mspb::CreateTableResponse* response);
    virtual ::grpc::Status GetAutoIncId(::grpc::ServerContext* context, const ::mspb::GetAutoIncIdRequest* request, ::mspb::GetAutoIncIdResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_NodeHeartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_NodeHeartbeat() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_NodeHeartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NodeHeartbeat(::grpc::ServerContext* context, const ::mspb::NodeHeartbeatRequest* request, ::mspb::NodeHeartbeatResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNodeHeartbeat(::grpc::ServerContext* context, ::mspb::NodeHeartbeatRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::NodeHeartbeatResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RangeHeartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_RangeHeartbeat() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RangeHeartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RangeHeartbeat(::grpc::ServerContext* context, const ::mspb::RangeHeartbeatRequest* request, ::mspb::RangeHeartbeatResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRangeHeartbeat(::grpc::ServerContext* context, ::mspb::RangeHeartbeatRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::RangeHeartbeatResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AskSplit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AskSplit() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_AskSplit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AskSplit(::grpc::ServerContext* context, const ::mspb::AskSplitRequest* request, ::mspb::AskSplitResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAskSplit(::grpc::ServerContext* context, ::mspb::AskSplitRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::AskSplitResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReportSplit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ReportSplit() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ReportSplit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReportSplit(::grpc::ServerContext* context, const ::mspb::ReportSplitRequest* request, ::mspb::ReportSplitResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReportSplit(::grpc::ServerContext* context, ::mspb::ReportSplitRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::ReportSplitResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_NodeLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_NodeLogin() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_NodeLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NodeLogin(::grpc::ServerContext* context, const ::mspb::NodeLoginRequest* request, ::mspb::NodeLoginResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestNodeLogin(::grpc::ServerContext* context, ::mspb::NodeLoginRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::NodeLoginResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNodeId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetNodeId() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetNodeId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNodeId(::grpc::ServerContext* context, const ::mspb::GetNodeIdRequest* request, ::mspb::GetNodeIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNodeId(::grpc::ServerContext* context, ::mspb::GetNodeIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetNodeIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMSLeader : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetMSLeader() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetMSLeader() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMSLeader(::grpc::ServerContext* context, const ::mspb::GetMSLeaderRequest* request, ::mspb::GetMSLeaderResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMSLeader(::grpc::ServerContext* context, ::mspb::GetMSLeaderRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetMSLeaderResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetRoute() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* context, const ::mspb::GetRouteRequest* request, ::mspb::GetRouteResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoute(::grpc::ServerContext* context, ::mspb::GetRouteRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetRouteResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetNode() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNode(::grpc::ServerContext* context, const ::mspb::GetNodeRequest* request, ::mspb::GetNodeResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNode(::grpc::ServerContext* context, ::mspb::GetNodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetNodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDB : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetDB() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetDB() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDB(::grpc::ServerContext* context, const ::mspb::GetDBRequest* request, ::mspb::GetDBResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDB(::grpc::ServerContext* context, ::mspb::GetDBRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetDBResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetTable() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTable(::grpc::ServerContext* context, const ::mspb::GetTableRequest* request, ::mspb::GetTableResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTable(::grpc::ServerContext* context, ::mspb::GetTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTableById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetTableById() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetTableById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTableById(::grpc::ServerContext* context, const ::mspb::GetTableByIdRequest* request, ::mspb::GetTableByIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTableById(::grpc::ServerContext* context, ::mspb::GetTableByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetTableByIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetColumns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetColumns() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_GetColumns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetColumns(::grpc::ServerContext* context, const ::mspb::GetColumnsRequest* request, ::mspb::GetColumnsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetColumns(::grpc::ServerContext* context, ::mspb::GetColumnsRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetColumnsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetColumnByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetColumnByName() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetColumnByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetColumnByName(::grpc::ServerContext* context, const ::mspb::GetColumnByNameRequest* request, ::mspb::GetColumnByNameResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetColumnByName(::grpc::ServerContext* context, ::mspb::GetColumnByNameRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetColumnByNameResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetColumnById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetColumnById() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetColumnById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetColumnById(::grpc::ServerContext* context, const ::mspb::GetColumnByIdRequest* request, ::mspb::GetColumnByIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetColumnById(::grpc::ServerContext* context, ::mspb::GetColumnByIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetColumnByIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TruncateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_TruncateTable() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_TruncateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TruncateTable(::grpc::ServerContext* context, const ::mspb::TruncateTableRequest* request, ::mspb::TruncateTableResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTruncateTable(::grpc::ServerContext* context, ::mspb::TruncateTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::TruncateTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddColumn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddColumn() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_AddColumn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddColumn(::grpc::ServerContext* context, const ::mspb::AddColumnRequest* request, ::mspb::AddColumnResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddColumn(::grpc::ServerContext* context, ::mspb::AddColumnRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::AddColumnResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateDatabase() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_CreateDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDatabase(::grpc::ServerContext* context, const ::mspb::CreateDatabaseRequest* request, ::mspb::CreateDatabaseResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDatabase(::grpc::ServerContext* context, ::mspb::CreateDatabaseRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::CreateDatabaseResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateTable() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* context, const ::mspb::CreateTableRequest* request, ::mspb::CreateTableResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTable(::grpc::ServerContext* context, ::mspb::CreateTableRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::CreateTableResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetAutoIncId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetAutoIncId() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_GetAutoIncId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAutoIncId(::grpc::ServerContext* context, const ::mspb::GetAutoIncIdRequest* request, ::mspb::GetAutoIncIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetAutoIncId(::grpc::ServerContext* context, ::mspb::GetAutoIncIdRequest* request, ::grpc::ServerAsyncResponseWriter< ::mspb::GetAutoIncIdResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_NodeHeartbeat<WithAsyncMethod_RangeHeartbeat<WithAsyncMethod_AskSplit<WithAsyncMethod_ReportSplit<WithAsyncMethod_NodeLogin<WithAsyncMethod_GetNodeId<WithAsyncMethod_GetMSLeader<WithAsyncMethod_GetRoute<WithAsyncMethod_GetNode<WithAsyncMethod_GetDB<WithAsyncMethod_GetTable<WithAsyncMethod_GetTableById<WithAsyncMethod_GetColumns<WithAsyncMethod_GetColumnByName<WithAsyncMethod_GetColumnById<WithAsyncMethod_TruncateTable<WithAsyncMethod_AddColumn<WithAsyncMethod_CreateDatabase<WithAsyncMethod_CreateTable<WithAsyncMethod_GetAutoIncId<Service > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_NodeHeartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_NodeHeartbeat() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_NodeHeartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NodeHeartbeat(::grpc::ServerContext* context, const ::mspb::NodeHeartbeatRequest* request, ::mspb::NodeHeartbeatResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RangeHeartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_RangeHeartbeat() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RangeHeartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RangeHeartbeat(::grpc::ServerContext* context, const ::mspb::RangeHeartbeatRequest* request, ::mspb::RangeHeartbeatResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AskSplit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AskSplit() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_AskSplit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AskSplit(::grpc::ServerContext* context, const ::mspb::AskSplitRequest* request, ::mspb::AskSplitResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReportSplit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ReportSplit() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ReportSplit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReportSplit(::grpc::ServerContext* context, const ::mspb::ReportSplitRequest* request, ::mspb::ReportSplitResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_NodeLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_NodeLogin() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_NodeLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status NodeLogin(::grpc::ServerContext* context, const ::mspb::NodeLoginRequest* request, ::mspb::NodeLoginResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNodeId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetNodeId() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetNodeId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNodeId(::grpc::ServerContext* context, const ::mspb::GetNodeIdRequest* request, ::mspb::GetNodeIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMSLeader : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetMSLeader() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetMSLeader() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMSLeader(::grpc::ServerContext* context, const ::mspb::GetMSLeaderRequest* request, ::mspb::GetMSLeaderResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetRoute() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* context, const ::mspb::GetRouteRequest* request, ::mspb::GetRouteResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetNode() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNode(::grpc::ServerContext* context, const ::mspb::GetNodeRequest* request, ::mspb::GetNodeResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDB : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetDB() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetDB() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDB(::grpc::ServerContext* context, const ::mspb::GetDBRequest* request, ::mspb::GetDBResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetTable() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTable(::grpc::ServerContext* context, const ::mspb::GetTableRequest* request, ::mspb::GetTableResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTableById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetTableById() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetTableById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTableById(::grpc::ServerContext* context, const ::mspb::GetTableByIdRequest* request, ::mspb::GetTableByIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetColumns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetColumns() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_GetColumns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetColumns(::grpc::ServerContext* context, const ::mspb::GetColumnsRequest* request, ::mspb::GetColumnsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetColumnByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetColumnByName() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetColumnByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetColumnByName(::grpc::ServerContext* context, const ::mspb::GetColumnByNameRequest* request, ::mspb::GetColumnByNameResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetColumnById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetColumnById() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetColumnById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetColumnById(::grpc::ServerContext* context, const ::mspb::GetColumnByIdRequest* request, ::mspb::GetColumnByIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TruncateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_TruncateTable() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_TruncateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TruncateTable(::grpc::ServerContext* context, const ::mspb::TruncateTableRequest* request, ::mspb::TruncateTableResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddColumn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddColumn() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_AddColumn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddColumn(::grpc::ServerContext* context, const ::mspb::AddColumnRequest* request, ::mspb::AddColumnResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateDatabase() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_CreateDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDatabase(::grpc::ServerContext* context, const ::mspb::CreateDatabaseRequest* request, ::mspb::CreateDatabaseResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateTable() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* context, const ::mspb::CreateTableRequest* request, ::mspb::CreateTableResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetAutoIncId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetAutoIncId() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_GetAutoIncId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetAutoIncId(::grpc::ServerContext* context, const ::mspb::GetAutoIncIdRequest* request, ::mspb::GetAutoIncIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_NodeHeartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_NodeHeartbeat() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::StreamedUnaryHandler< ::mspb::NodeHeartbeatRequest, ::mspb::NodeHeartbeatResponse>(std::bind(&WithStreamedUnaryMethod_NodeHeartbeat<BaseClass>::StreamedNodeHeartbeat, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_NodeHeartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status NodeHeartbeat(::grpc::ServerContext* context, const ::mspb::NodeHeartbeatRequest* request, ::mspb::NodeHeartbeatResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedNodeHeartbeat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::NodeHeartbeatRequest,::mspb::NodeHeartbeatResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RangeHeartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_RangeHeartbeat() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::StreamedUnaryHandler< ::mspb::RangeHeartbeatRequest, ::mspb::RangeHeartbeatResponse>(std::bind(&WithStreamedUnaryMethod_RangeHeartbeat<BaseClass>::StreamedRangeHeartbeat, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_RangeHeartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RangeHeartbeat(::grpc::ServerContext* context, const ::mspb::RangeHeartbeatRequest* request, ::mspb::RangeHeartbeatResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRangeHeartbeat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::RangeHeartbeatRequest,::mspb::RangeHeartbeatResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AskSplit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AskSplit() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::StreamedUnaryHandler< ::mspb::AskSplitRequest, ::mspb::AskSplitResponse>(std::bind(&WithStreamedUnaryMethod_AskSplit<BaseClass>::StreamedAskSplit, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AskSplit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AskSplit(::grpc::ServerContext* context, const ::mspb::AskSplitRequest* request, ::mspb::AskSplitResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAskSplit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::AskSplitRequest,::mspb::AskSplitResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReportSplit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ReportSplit() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::StreamedUnaryHandler< ::mspb::ReportSplitRequest, ::mspb::ReportSplitResponse>(std::bind(&WithStreamedUnaryMethod_ReportSplit<BaseClass>::StreamedReportSplit, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReportSplit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReportSplit(::grpc::ServerContext* context, const ::mspb::ReportSplitRequest* request, ::mspb::ReportSplitResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReportSplit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::ReportSplitRequest,::mspb::ReportSplitResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_NodeLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_NodeLogin() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::StreamedUnaryHandler< ::mspb::NodeLoginRequest, ::mspb::NodeLoginResponse>(std::bind(&WithStreamedUnaryMethod_NodeLogin<BaseClass>::StreamedNodeLogin, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_NodeLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status NodeLogin(::grpc::ServerContext* context, const ::mspb::NodeLoginRequest* request, ::mspb::NodeLoginResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedNodeLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::NodeLoginRequest,::mspb::NodeLoginResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNodeId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetNodeId() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetNodeIdRequest, ::mspb::GetNodeIdResponse>(std::bind(&WithStreamedUnaryMethod_GetNodeId<BaseClass>::StreamedGetNodeId, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetNodeId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNodeId(::grpc::ServerContext* context, const ::mspb::GetNodeIdRequest* request, ::mspb::GetNodeIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNodeId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetNodeIdRequest,::mspb::GetNodeIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMSLeader : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetMSLeader() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetMSLeaderRequest, ::mspb::GetMSLeaderResponse>(std::bind(&WithStreamedUnaryMethod_GetMSLeader<BaseClass>::StreamedGetMSLeader, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetMSLeader() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMSLeader(::grpc::ServerContext* context, const ::mspb::GetMSLeaderRequest* request, ::mspb::GetMSLeaderResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMSLeader(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetMSLeaderRequest,::mspb::GetMSLeaderResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetRoute() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetRouteRequest, ::mspb::GetRouteResponse>(std::bind(&WithStreamedUnaryMethod_GetRoute<BaseClass>::StreamedGetRoute, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* context, const ::mspb::GetRouteRequest* request, ::mspb::GetRouteResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRoute(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetRouteRequest,::mspb::GetRouteResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetNode() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetNodeRequest, ::mspb::GetNodeResponse>(std::bind(&WithStreamedUnaryMethod_GetNode<BaseClass>::StreamedGetNode, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNode(::grpc::ServerContext* context, const ::mspb::GetNodeRequest* request, ::mspb::GetNodeResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetNodeRequest,::mspb::GetNodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDB : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetDB() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetDBRequest, ::mspb::GetDBResponse>(std::bind(&WithStreamedUnaryMethod_GetDB<BaseClass>::StreamedGetDB, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetDB() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDB(::grpc::ServerContext* context, const ::mspb::GetDBRequest* request, ::mspb::GetDBResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDB(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetDBRequest,::mspb::GetDBResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetTable() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetTableRequest, ::mspb::GetTableResponse>(std::bind(&WithStreamedUnaryMethod_GetTable<BaseClass>::StreamedGetTable, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTable(::grpc::ServerContext* context, const ::mspb::GetTableRequest* request, ::mspb::GetTableResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetTableRequest,::mspb::GetTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTableById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetTableById() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetTableByIdRequest, ::mspb::GetTableByIdResponse>(std::bind(&WithStreamedUnaryMethod_GetTableById<BaseClass>::StreamedGetTableById, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetTableById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTableById(::grpc::ServerContext* context, const ::mspb::GetTableByIdRequest* request, ::mspb::GetTableByIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTableById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetTableByIdRequest,::mspb::GetTableByIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetColumns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetColumns() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetColumnsRequest, ::mspb::GetColumnsResponse>(std::bind(&WithStreamedUnaryMethod_GetColumns<BaseClass>::StreamedGetColumns, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetColumns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetColumns(::grpc::ServerContext* context, const ::mspb::GetColumnsRequest* request, ::mspb::GetColumnsResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetColumns(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetColumnsRequest,::mspb::GetColumnsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetColumnByName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetColumnByName() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetColumnByNameRequest, ::mspb::GetColumnByNameResponse>(std::bind(&WithStreamedUnaryMethod_GetColumnByName<BaseClass>::StreamedGetColumnByName, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetColumnByName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetColumnByName(::grpc::ServerContext* context, const ::mspb::GetColumnByNameRequest* request, ::mspb::GetColumnByNameResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetColumnByName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetColumnByNameRequest,::mspb::GetColumnByNameResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetColumnById : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetColumnById() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetColumnByIdRequest, ::mspb::GetColumnByIdResponse>(std::bind(&WithStreamedUnaryMethod_GetColumnById<BaseClass>::StreamedGetColumnById, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetColumnById() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetColumnById(::grpc::ServerContext* context, const ::mspb::GetColumnByIdRequest* request, ::mspb::GetColumnByIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetColumnById(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetColumnByIdRequest,::mspb::GetColumnByIdResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TruncateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_TruncateTable() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::StreamedUnaryHandler< ::mspb::TruncateTableRequest, ::mspb::TruncateTableResponse>(std::bind(&WithStreamedUnaryMethod_TruncateTable<BaseClass>::StreamedTruncateTable, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_TruncateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TruncateTable(::grpc::ServerContext* context, const ::mspb::TruncateTableRequest* request, ::mspb::TruncateTableResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTruncateTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::TruncateTableRequest,::mspb::TruncateTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddColumn : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddColumn() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::StreamedUnaryHandler< ::mspb::AddColumnRequest, ::mspb::AddColumnResponse>(std::bind(&WithStreamedUnaryMethod_AddColumn<BaseClass>::StreamedAddColumn, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddColumn() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddColumn(::grpc::ServerContext* context, const ::mspb::AddColumnRequest* request, ::mspb::AddColumnResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddColumn(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::AddColumnRequest,::mspb::AddColumnResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateDatabase() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::StreamedUnaryHandler< ::mspb::CreateDatabaseRequest, ::mspb::CreateDatabaseResponse>(std::bind(&WithStreamedUnaryMethod_CreateDatabase<BaseClass>::StreamedCreateDatabase, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDatabase(::grpc::ServerContext* context, const ::mspb::CreateDatabaseRequest* request, ::mspb::CreateDatabaseResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDatabase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::CreateDatabaseRequest,::mspb::CreateDatabaseResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateTable() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::StreamedUnaryHandler< ::mspb::CreateTableRequest, ::mspb::CreateTableResponse>(std::bind(&WithStreamedUnaryMethod_CreateTable<BaseClass>::StreamedCreateTable, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* context, const ::mspb::CreateTableRequest* request, ::mspb::CreateTableResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::CreateTableRequest,::mspb::CreateTableResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetAutoIncId : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetAutoIncId() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::StreamedUnaryHandler< ::mspb::GetAutoIncIdRequest, ::mspb::GetAutoIncIdResponse>(std::bind(&WithStreamedUnaryMethod_GetAutoIncId<BaseClass>::StreamedGetAutoIncId, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetAutoIncId() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetAutoIncId(::grpc::ServerContext* context, const ::mspb::GetAutoIncIdRequest* request, ::mspb::GetAutoIncIdResponse* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetAutoIncId(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mspb::GetAutoIncIdRequest,::mspb::GetAutoIncIdResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_NodeHeartbeat<WithStreamedUnaryMethod_RangeHeartbeat<WithStreamedUnaryMethod_AskSplit<WithStreamedUnaryMethod_ReportSplit<WithStreamedUnaryMethod_NodeLogin<WithStreamedUnaryMethod_GetNodeId<WithStreamedUnaryMethod_GetMSLeader<WithStreamedUnaryMethod_GetRoute<WithStreamedUnaryMethod_GetNode<WithStreamedUnaryMethod_GetDB<WithStreamedUnaryMethod_GetTable<WithStreamedUnaryMethod_GetTableById<WithStreamedUnaryMethod_GetColumns<WithStreamedUnaryMethod_GetColumnByName<WithStreamedUnaryMethod_GetColumnById<WithStreamedUnaryMethod_TruncateTable<WithStreamedUnaryMethod_AddColumn<WithStreamedUnaryMethod_CreateDatabase<WithStreamedUnaryMethod_CreateTable<WithStreamedUnaryMethod_GetAutoIncId<Service > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_NodeHeartbeat<WithStreamedUnaryMethod_RangeHeartbeat<WithStreamedUnaryMethod_AskSplit<WithStreamedUnaryMethod_ReportSplit<WithStreamedUnaryMethod_NodeLogin<WithStreamedUnaryMethod_GetNodeId<WithStreamedUnaryMethod_GetMSLeader<WithStreamedUnaryMethod_GetRoute<WithStreamedUnaryMethod_GetNode<WithStreamedUnaryMethod_GetDB<WithStreamedUnaryMethod_GetTable<WithStreamedUnaryMethod_GetTableById<WithStreamedUnaryMethod_GetColumns<WithStreamedUnaryMethod_GetColumnByName<WithStreamedUnaryMethod_GetColumnById<WithStreamedUnaryMethod_TruncateTable<WithStreamedUnaryMethod_AddColumn<WithStreamedUnaryMethod_CreateDatabase<WithStreamedUnaryMethod_CreateTable<WithStreamedUnaryMethod_GetAutoIncId<Service > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace mspb


#endif  // GRPC_mspb_2eproto__INCLUDED
