// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: funcpb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "funcpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace funcpb {

namespace protobuf_funcpb_2eproto {


namespace {

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;
namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "funcpb.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014funcpb.proto\022\006funcpb*\377\004\n\nFunctionID\022\022\n"
      "\016kFuncHeartbeat\020\000\022\017\n\013kFuncRawGet\020\001\022\017\n\013kF"
      "uncRawPut\020\002\022\022\n\016kFuncRawDelete\020\003\022\023\n\017kFunc"
      "RawExecute\020\004\022\017\n\013kFuncSelect\020\n\022\017\n\013kFuncIn"
      "sert\020\013\022\017\n\013kFuncDelete\020\014\022\017\n\013kFuncUpdate\020\r"
      "\022\020\n\014KFuncReplace\020\016\022\016\n\nkFuncKvSet\020d\022\016\n\nkF"
      "uncKvGet\020e\022\023\n\017kFuncKvBatchSet\020f\022\023\n\017kFunc"
      "KvBatchGet\020g\022\016\n\nkFuncKvDel\020h\022\023\n\017kFuncKvB"
      "atchDel\020i\022\023\n\017kFuncKvRangeDel\020j\022\017\n\013kFuncK"
      "vScan\020k\022\016\n\tkFuncLock\020\310\001\022\024\n\017kFuncLockUpda"
      "te\020\311\001\022\020\n\013kFuncUnlock\020\312\001\022\025\n\020kFuncUnlockFo"
      "rce\020\313\001\022\022\n\rkFuncLockScan\020\314\001\022\025\n\020kFuncCreat"
      "eRange\020\351\007\022\025\n\020kFuncDeleteRange\020\352\007\022\035\n\030kFun"
      "cRangeTransferLeader\020\353\007\022\025\n\020kFuncUpdateRa"
      "nge\020\354\007\022\025\n\020kFuncGetPeerInfo\020\355\007\022\031\n\024kFuncSe"
      "tNodeLogLevel\020\356\007\022\026\n\021kFuncOfflineRange\020\357\007"
      "\022\026\n\021kFuncReplaceRange\020\360\007b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 672);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "funcpb.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_funcpb_2eproto

const ::google::protobuf::EnumDescriptor* FunctionID_descriptor() {
  protobuf_funcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_funcpb_2eproto::file_level_enum_descriptors[0];
}
bool FunctionID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace funcpb

// @@protoc_insertion_point(global_scope)
