// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: alarmpb2.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "alarmpb2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace alarmpb2 {
class AlarmRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AlarmRequest>
     _instance;
} _AlarmRequest_default_instance_;
class RequestHeaderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RequestHeader>
     _instance;
} _RequestHeader_default_instance_;
class RuleAlarmRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RuleAlarmRequest>
     _instance;
} _RuleAlarmRequest_default_instance_;
class AppHeartbeatRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AppHeartbeatRequest>
     _instance;
} _AppHeartbeatRequest_default_instance_;
class AppNotAliveRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AppNotAliveRequest>
     _instance;
} _AppNotAliveRequest_default_instance_;
class GatewaySlowLogRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GatewaySlowLogRequest>
     _instance;
} _GatewaySlowLogRequest_default_instance_;
class GatewayErrorLogRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GatewayErrorLogRequest>
     _instance;
} _GatewayErrorLogRequest_default_instance_;
class GatewayInputOpsRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GatewayInputOpsRequest>
     _instance;
} _GatewayInputOpsRequest_default_instance_;
class AlarmResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AlarmResponse>
     _instance;
} _AlarmResponse_default_instance_;
class ResponseHeaderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResponseHeader>
     _instance;
} _ResponseHeader_default_instance_;

namespace protobuf_alarmpb2_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRequest, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRequest, rule_alarm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmRequest, app_heartbeat_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeader, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeader, cluster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeader, ip_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeader, app_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuleAlarmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuleAlarmRequest, rule_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuleAlarmRequest, alarm_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuleAlarmRequest, cmp_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RuleAlarmRequest, remark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppHeartbeatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppHeartbeatRequest, hb_interval_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppNotAliveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppNotAliveRequest, app_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppNotAliveRequest, alive_check_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GatewaySlowLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GatewaySlowLogRequest, slow_log_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GatewayErrorLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GatewayErrorLogRequest, error_log_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GatewayInputOpsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GatewayInputOpsRequest, alarm_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GatewayInputOpsRequest, cmp_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlarmResponse, header_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseHeader, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseHeader, error_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(AlarmRequest)},
  { 8, -1, sizeof(RequestHeader)},
  { 17, -1, sizeof(RuleAlarmRequest)},
  { 26, -1, sizeof(AppHeartbeatRequest)},
  { 32, -1, sizeof(AppNotAliveRequest)},
  { 39, -1, sizeof(GatewaySlowLogRequest)},
  { 45, -1, sizeof(GatewayErrorLogRequest)},
  { 51, -1, sizeof(GatewayInputOpsRequest)},
  { 58, -1, sizeof(AlarmResponse)},
  { 64, -1, sizeof(ResponseHeader)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AlarmRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RequestHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RuleAlarmRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppHeartbeatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppNotAliveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GatewaySlowLogRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GatewayErrorLogRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GatewayInputOpsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AlarmResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResponseHeader_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "alarmpb2.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _AlarmRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AlarmRequest_default_instance_);_RequestHeader_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RequestHeader_default_instance_);_RuleAlarmRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RuleAlarmRequest_default_instance_);_AppHeartbeatRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AppHeartbeatRequest_default_instance_);_AppNotAliveRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AppNotAliveRequest_default_instance_);_GatewaySlowLogRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GatewaySlowLogRequest_default_instance_);_GatewayErrorLogRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GatewayErrorLogRequest_default_instance_);_GatewayInputOpsRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GatewayInputOpsRequest_default_instance_);_AlarmResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AlarmResponse_default_instance_);_ResponseHeader_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResponseHeader_default_instance_);_AlarmRequest_default_instance_._instance.get_mutable()->header_ = const_cast< ::alarmpb2::RequestHeader*>(
      ::alarmpb2::RequestHeader::internal_default_instance());
  _AlarmRequest_default_instance_._instance.get_mutable()->rule_alarm_ = const_cast< ::alarmpb2::RuleAlarmRequest*>(
      ::alarmpb2::RuleAlarmRequest::internal_default_instance());
  _AlarmRequest_default_instance_._instance.get_mutable()->app_heartbeat_ = const_cast< ::alarmpb2::AppHeartbeatRequest*>(
      ::alarmpb2::AppHeartbeatRequest::internal_default_instance());
  _AlarmResponse_default_instance_._instance.get_mutable()->header_ = const_cast< ::alarmpb2::ResponseHeader*>(
      ::alarmpb2::ResponseHeader::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016alarmpb2.proto\022\010alarmpb2\"\235\001\n\014AlarmRequ"
      "est\022\'\n\006header\030\001 \001(\0132\027.alarmpb2.RequestHe"
      "ader\022.\n\nrule_alarm\030\002 \001(\0132\032.alarmpb2.Rule"
      "AlarmRequest\0224\n\rapp_heartbeat\030\003 \001(\0132\035.al"
      "armpb2.AppHeartbeatRequest\"i\n\rRequestHea"
      "der\022!\n\004type\030\001 \001(\0162\023.alarmpb2.AlarmType\022\022"
      "\n\ncluster_id\030\002 \001(\003\022\017\n\007ip_addr\030\003 \001(\t\022\020\n\010a"
      "pp_name\030\004 \001(\t\"}\n\020RuleAlarmRequest\022\021\n\trul"
      "e_name\030\001 \001(\t\022\023\n\013alarm_value\030\002 \001(\001\0221\n\010cmp"
      "_type\030\003 \001(\0162\037.alarmpb2.AlarmValueCompare"
      "Type\022\016\n\006remark\030\004 \003(\t\"/\n\023AppHeartbeatRequ"
      "est\022\030\n\020hb_interval_time\030\001 \001(\003\"@\n\022AppNotA"
      "liveRequest\022\020\n\010app_name\030\001 \001(\t\022\030\n\020alive_c"
      "heck_time\030\002 \001(\t\")\n\025GatewaySlowLogRequest"
      "\022\020\n\010slow_log\030\001 \003(\t\"+\n\026GatewayErrorLogReq"
      "uest\022\021\n\terror_log\030\001 \003(\t\"`\n\026GatewayInputO"
      "psRequest\022\023\n\013alarm_value\030\001 \001(\001\0221\n\010cmp_ty"
      "pe\030\002 \001(\0162\037.alarmpb2.AlarmValueCompareTyp"
      "e\"9\n\rAlarmResponse\022(\n\006header\030\001 \001(\0132\030.ala"
      "rmpb2.ResponseHeader\"J\n\016ResponseHeader\022)"
      "\n\004code\030\001 \001(\0162\033.alarmpb2.AlarmResponseCod"
      "e\022\r\n\005error\030\002 \001(\t*&\n\021AlarmResponseCode\022\006\n"
      "\002OK\020\000\022\t\n\005ERROR\020\001*y\n\tAlarmType\022\013\n\007INVALID"
      "\020\000\022\021\n\rAPP_HEARTBEAT\020\001\022\016\n\nRULE_ALARM\020\002\022\021\n"
      "\rAPP_NOT_ALIVE\020\003\022\023\n\017GATEWAY_SLOWLOG\020\004\022\024\n"
      "\020GATEWAY_ERRORLOG\020\005*{\n\025AlarmValueCompare"
      "Type\022\t\n\005EQUAL\020\000\022\020\n\014GREATER_THAN\020\001\022\r\n\tLES"
      "S_THAN\020\002\022\r\n\tNOT_EQUAL\020\003\022\024\n\020NOT_GREATER_T"
      "HAN\020\004\022\021\n\rNOT_LESS_THAN\020\0052C\n\005Alarm\022:\n\005Ala"
      "rm\022\026.alarmpb2.AlarmRequest\032\027.alarmpb2.Al"
      "armResponse\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1221);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "alarmpb2.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_alarmpb2_2eproto

const ::google::protobuf::EnumDescriptor* AlarmResponseCode_descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_enum_descriptors[0];
}
bool AlarmResponseCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AlarmType_descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_enum_descriptors[1];
}
bool AlarmType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AlarmValueCompareType_descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_enum_descriptors[2];
}
bool AlarmValueCompareType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlarmRequest::kHeaderFieldNumber;
const int AlarmRequest::kRuleAlarmFieldNumber;
const int AlarmRequest::kAppHeartbeatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlarmRequest::AlarmRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_alarmpb2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:alarmpb2.AlarmRequest)
}
AlarmRequest::AlarmRequest(const AlarmRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::alarmpb2::RequestHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_rule_alarm()) {
    rule_alarm_ = new ::alarmpb2::RuleAlarmRequest(*from.rule_alarm_);
  } else {
    rule_alarm_ = NULL;
  }
  if (from.has_app_heartbeat()) {
    app_heartbeat_ = new ::alarmpb2::AppHeartbeatRequest(*from.app_heartbeat_);
  } else {
    app_heartbeat_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:alarmpb2.AlarmRequest)
}

void AlarmRequest::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_heartbeat_) -
      reinterpret_cast<char*>(&header_)) + sizeof(app_heartbeat_));
  _cached_size_ = 0;
}

AlarmRequest::~AlarmRequest() {
  // @@protoc_insertion_point(destructor:alarmpb2.AlarmRequest)
  SharedDtor();
}

void AlarmRequest::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete rule_alarm_;
  if (this != internal_default_instance()) delete app_heartbeat_;
}

void AlarmRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmRequest::descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlarmRequest& AlarmRequest::default_instance() {
  protobuf_alarmpb2_2eproto::InitDefaults();
  return *internal_default_instance();
}

AlarmRequest* AlarmRequest::New(::google::protobuf::Arena* arena) const {
  AlarmRequest* n = new AlarmRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlarmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alarmpb2.AlarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && rule_alarm_ != NULL) {
    delete rule_alarm_;
  }
  rule_alarm_ = NULL;
  if (GetArenaNoVirtual() == NULL && app_heartbeat_ != NULL) {
    delete app_heartbeat_;
  }
  app_heartbeat_ = NULL;
  _internal_metadata_.Clear();
}

bool AlarmRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:alarmpb2.AlarmRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .alarmpb2.RequestHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .alarmpb2.RuleAlarmRequest rule_alarm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rule_alarm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .alarmpb2.AppHeartbeatRequest app_heartbeat = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_app_heartbeat()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:alarmpb2.AlarmRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:alarmpb2.AlarmRequest)
  return false;
#undef DO_
}

void AlarmRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:alarmpb2.AlarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .alarmpb2.RequestHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // .alarmpb2.RuleAlarmRequest rule_alarm = 2;
  if (this->has_rule_alarm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rule_alarm_, output);
  }

  // .alarmpb2.AppHeartbeatRequest app_heartbeat = 3;
  if (this->has_app_heartbeat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->app_heartbeat_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:alarmpb2.AlarmRequest)
}

::google::protobuf::uint8* AlarmRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:alarmpb2.AlarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .alarmpb2.RequestHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  // .alarmpb2.RuleAlarmRequest rule_alarm = 2;
  if (this->has_rule_alarm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rule_alarm_, deterministic, target);
  }

  // .alarmpb2.AppHeartbeatRequest app_heartbeat = 3;
  if (this->has_app_heartbeat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->app_heartbeat_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alarmpb2.AlarmRequest)
  return target;
}

size_t AlarmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alarmpb2.AlarmRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .alarmpb2.RequestHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // .alarmpb2.RuleAlarmRequest rule_alarm = 2;
  if (this->has_rule_alarm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rule_alarm_);
  }

  // .alarmpb2.AppHeartbeatRequest app_heartbeat = 3;
  if (this->has_app_heartbeat()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->app_heartbeat_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alarmpb2.AlarmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AlarmRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlarmRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alarmpb2.AlarmRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alarmpb2.AlarmRequest)
    MergeFrom(*source);
  }
}

void AlarmRequest::MergeFrom(const AlarmRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alarmpb2.AlarmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::alarmpb2::RequestHeader::MergeFrom(from.header());
  }
  if (from.has_rule_alarm()) {
    mutable_rule_alarm()->::alarmpb2::RuleAlarmRequest::MergeFrom(from.rule_alarm());
  }
  if (from.has_app_heartbeat()) {
    mutable_app_heartbeat()->::alarmpb2::AppHeartbeatRequest::MergeFrom(from.app_heartbeat());
  }
}

void AlarmRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alarmpb2.AlarmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmRequest::CopyFrom(const AlarmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alarmpb2.AlarmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmRequest::IsInitialized() const {
  return true;
}

void AlarmRequest::Swap(AlarmRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlarmRequest::InternalSwap(AlarmRequest* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(rule_alarm_, other->rule_alarm_);
  swap(app_heartbeat_, other->app_heartbeat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlarmRequest::GetMetadata() const {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlarmRequest

// .alarmpb2.RequestHeader header = 1;
bool AlarmRequest::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void AlarmRequest::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::alarmpb2::RequestHeader& AlarmRequest::header() const {
  const ::alarmpb2::RequestHeader* p = header_;
  // @@protoc_insertion_point(field_get:alarmpb2.AlarmRequest.header)
  return p != NULL ? *p : *reinterpret_cast<const ::alarmpb2::RequestHeader*>(
      &::alarmpb2::_RequestHeader_default_instance_);
}
::alarmpb2::RequestHeader* AlarmRequest::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::alarmpb2::RequestHeader;
  }
  // @@protoc_insertion_point(field_mutable:alarmpb2.AlarmRequest.header)
  return header_;
}
::alarmpb2::RequestHeader* AlarmRequest::release_header() {
  // @@protoc_insertion_point(field_release:alarmpb2.AlarmRequest.header)
  
  ::alarmpb2::RequestHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void AlarmRequest::set_allocated_header(::alarmpb2::RequestHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:alarmpb2.AlarmRequest.header)
}

// .alarmpb2.RuleAlarmRequest rule_alarm = 2;
bool AlarmRequest::has_rule_alarm() const {
  return this != internal_default_instance() && rule_alarm_ != NULL;
}
void AlarmRequest::clear_rule_alarm() {
  if (GetArenaNoVirtual() == NULL && rule_alarm_ != NULL) delete rule_alarm_;
  rule_alarm_ = NULL;
}
const ::alarmpb2::RuleAlarmRequest& AlarmRequest::rule_alarm() const {
  const ::alarmpb2::RuleAlarmRequest* p = rule_alarm_;
  // @@protoc_insertion_point(field_get:alarmpb2.AlarmRequest.rule_alarm)
  return p != NULL ? *p : *reinterpret_cast<const ::alarmpb2::RuleAlarmRequest*>(
      &::alarmpb2::_RuleAlarmRequest_default_instance_);
}
::alarmpb2::RuleAlarmRequest* AlarmRequest::mutable_rule_alarm() {
  
  if (rule_alarm_ == NULL) {
    rule_alarm_ = new ::alarmpb2::RuleAlarmRequest;
  }
  // @@protoc_insertion_point(field_mutable:alarmpb2.AlarmRequest.rule_alarm)
  return rule_alarm_;
}
::alarmpb2::RuleAlarmRequest* AlarmRequest::release_rule_alarm() {
  // @@protoc_insertion_point(field_release:alarmpb2.AlarmRequest.rule_alarm)
  
  ::alarmpb2::RuleAlarmRequest* temp = rule_alarm_;
  rule_alarm_ = NULL;
  return temp;
}
void AlarmRequest::set_allocated_rule_alarm(::alarmpb2::RuleAlarmRequest* rule_alarm) {
  delete rule_alarm_;
  rule_alarm_ = rule_alarm;
  if (rule_alarm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:alarmpb2.AlarmRequest.rule_alarm)
}

// .alarmpb2.AppHeartbeatRequest app_heartbeat = 3;
bool AlarmRequest::has_app_heartbeat() const {
  return this != internal_default_instance() && app_heartbeat_ != NULL;
}
void AlarmRequest::clear_app_heartbeat() {
  if (GetArenaNoVirtual() == NULL && app_heartbeat_ != NULL) delete app_heartbeat_;
  app_heartbeat_ = NULL;
}
const ::alarmpb2::AppHeartbeatRequest& AlarmRequest::app_heartbeat() const {
  const ::alarmpb2::AppHeartbeatRequest* p = app_heartbeat_;
  // @@protoc_insertion_point(field_get:alarmpb2.AlarmRequest.app_heartbeat)
  return p != NULL ? *p : *reinterpret_cast<const ::alarmpb2::AppHeartbeatRequest*>(
      &::alarmpb2::_AppHeartbeatRequest_default_instance_);
}
::alarmpb2::AppHeartbeatRequest* AlarmRequest::mutable_app_heartbeat() {
  
  if (app_heartbeat_ == NULL) {
    app_heartbeat_ = new ::alarmpb2::AppHeartbeatRequest;
  }
  // @@protoc_insertion_point(field_mutable:alarmpb2.AlarmRequest.app_heartbeat)
  return app_heartbeat_;
}
::alarmpb2::AppHeartbeatRequest* AlarmRequest::release_app_heartbeat() {
  // @@protoc_insertion_point(field_release:alarmpb2.AlarmRequest.app_heartbeat)
  
  ::alarmpb2::AppHeartbeatRequest* temp = app_heartbeat_;
  app_heartbeat_ = NULL;
  return temp;
}
void AlarmRequest::set_allocated_app_heartbeat(::alarmpb2::AppHeartbeatRequest* app_heartbeat) {
  delete app_heartbeat_;
  app_heartbeat_ = app_heartbeat;
  if (app_heartbeat) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:alarmpb2.AlarmRequest.app_heartbeat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestHeader::kTypeFieldNumber;
const int RequestHeader::kClusterIdFieldNumber;
const int RequestHeader::kIpAddrFieldNumber;
const int RequestHeader::kAppNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestHeader::RequestHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_alarmpb2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:alarmpb2.RequestHeader)
}
RequestHeader::RequestHeader(const RequestHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip_addr().size() > 0) {
    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_name().size() > 0) {
    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  ::memcpy(&cluster_id_, &from.cluster_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&cluster_id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:alarmpb2.RequestHeader)
}

void RequestHeader::SharedCtor() {
  ip_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cluster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&cluster_id_)) + sizeof(type_));
  _cached_size_ = 0;
}

RequestHeader::~RequestHeader() {
  // @@protoc_insertion_point(destructor:alarmpb2.RequestHeader)
  SharedDtor();
}

void RequestHeader::SharedDtor() {
  ip_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestHeader::descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestHeader& RequestHeader::default_instance() {
  protobuf_alarmpb2_2eproto::InitDefaults();
  return *internal_default_instance();
}

RequestHeader* RequestHeader::New(::google::protobuf::Arena* arena) const {
  RequestHeader* n = new RequestHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:alarmpb2.RequestHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cluster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&cluster_id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool RequestHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:alarmpb2.RequestHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .alarmpb2.AlarmType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::alarmpb2::AlarmType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 cluster_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cluster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ip_addr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "alarmpb2.RequestHeader.ip_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), static_cast<int>(this->app_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "alarmpb2.RequestHeader.app_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:alarmpb2.RequestHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:alarmpb2.RequestHeader)
  return false;
#undef DO_
}

void RequestHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:alarmpb2.RequestHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .alarmpb2.AlarmType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // int64 cluster_id = 2;
  if (this->cluster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->cluster_id(), output);
  }

  // string ip_addr = 3;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.RequestHeader.ip_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ip_addr(), output);
  }

  // string app_name = 4;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.RequestHeader.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->app_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:alarmpb2.RequestHeader)
}

::google::protobuf::uint8* RequestHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:alarmpb2.RequestHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .alarmpb2.AlarmType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // int64 cluster_id = 2;
  if (this->cluster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->cluster_id(), target);
  }

  // string ip_addr = 3;
  if (this->ip_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip_addr().data(), static_cast<int>(this->ip_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.RequestHeader.ip_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ip_addr(), target);
  }

  // string app_name = 4;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.RequestHeader.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->app_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alarmpb2.RequestHeader)
  return target;
}

size_t RequestHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alarmpb2.RequestHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip_addr = 3;
  if (this->ip_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip_addr());
  }

  // string app_name = 4;
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  // int64 cluster_id = 2;
  if (this->cluster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cluster_id());
  }

  // .alarmpb2.AlarmType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alarmpb2.RequestHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alarmpb2.RequestHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alarmpb2.RequestHeader)
    MergeFrom(*source);
  }
}

void RequestHeader::MergeFrom(const RequestHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alarmpb2.RequestHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip_addr().size() > 0) {

    ip_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_addr_);
  }
  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  if (from.cluster_id() != 0) {
    set_cluster_id(from.cluster_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void RequestHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alarmpb2.RequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestHeader::CopyFrom(const RequestHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alarmpb2.RequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestHeader::IsInitialized() const {
  return true;
}

void RequestHeader::Swap(RequestHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestHeader::InternalSwap(RequestHeader* other) {
  using std::swap;
  ip_addr_.Swap(&other->ip_addr_);
  app_name_.Swap(&other->app_name_);
  swap(cluster_id_, other->cluster_id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestHeader::GetMetadata() const {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestHeader

// .alarmpb2.AlarmType type = 1;
void RequestHeader::clear_type() {
  type_ = 0;
}
::alarmpb2::AlarmType RequestHeader::type() const {
  // @@protoc_insertion_point(field_get:alarmpb2.RequestHeader.type)
  return static_cast< ::alarmpb2::AlarmType >(type_);
}
void RequestHeader::set_type(::alarmpb2::AlarmType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:alarmpb2.RequestHeader.type)
}

// int64 cluster_id = 2;
void RequestHeader::clear_cluster_id() {
  cluster_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RequestHeader::cluster_id() const {
  // @@protoc_insertion_point(field_get:alarmpb2.RequestHeader.cluster_id)
  return cluster_id_;
}
void RequestHeader::set_cluster_id(::google::protobuf::int64 value) {
  
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:alarmpb2.RequestHeader.cluster_id)
}

// string ip_addr = 3;
void RequestHeader::clear_ip_addr() {
  ip_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestHeader::ip_addr() const {
  // @@protoc_insertion_point(field_get:alarmpb2.RequestHeader.ip_addr)
  return ip_addr_.GetNoArena();
}
void RequestHeader::set_ip_addr(const ::std::string& value) {
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarmpb2.RequestHeader.ip_addr)
}
#if LANG_CXX11
void RequestHeader::set_ip_addr(::std::string&& value) {
  
  ip_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:alarmpb2.RequestHeader.ip_addr)
}
#endif
void RequestHeader::set_ip_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarmpb2.RequestHeader.ip_addr)
}
void RequestHeader::set_ip_addr(const char* value, size_t size) {
  
  ip_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarmpb2.RequestHeader.ip_addr)
}
::std::string* RequestHeader::mutable_ip_addr() {
  
  // @@protoc_insertion_point(field_mutable:alarmpb2.RequestHeader.ip_addr)
  return ip_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestHeader::release_ip_addr() {
  // @@protoc_insertion_point(field_release:alarmpb2.RequestHeader.ip_addr)
  
  return ip_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestHeader::set_allocated_ip_addr(::std::string* ip_addr) {
  if (ip_addr != NULL) {
    
  } else {
    
  }
  ip_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip_addr);
  // @@protoc_insertion_point(field_set_allocated:alarmpb2.RequestHeader.ip_addr)
}

// string app_name = 4;
void RequestHeader::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestHeader::app_name() const {
  // @@protoc_insertion_point(field_get:alarmpb2.RequestHeader.app_name)
  return app_name_.GetNoArena();
}
void RequestHeader::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarmpb2.RequestHeader.app_name)
}
#if LANG_CXX11
void RequestHeader::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:alarmpb2.RequestHeader.app_name)
}
#endif
void RequestHeader::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarmpb2.RequestHeader.app_name)
}
void RequestHeader::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarmpb2.RequestHeader.app_name)
}
::std::string* RequestHeader::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:alarmpb2.RequestHeader.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestHeader::release_app_name() {
  // @@protoc_insertion_point(field_release:alarmpb2.RequestHeader.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestHeader::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:alarmpb2.RequestHeader.app_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RuleAlarmRequest::kRuleNameFieldNumber;
const int RuleAlarmRequest::kAlarmValueFieldNumber;
const int RuleAlarmRequest::kCmpTypeFieldNumber;
const int RuleAlarmRequest::kRemarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RuleAlarmRequest::RuleAlarmRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_alarmpb2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:alarmpb2.RuleAlarmRequest)
}
RuleAlarmRequest::RuleAlarmRequest(const RuleAlarmRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      remark_(from.remark_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rule_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rule_name().size() > 0) {
    rule_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_name_);
  }
  ::memcpy(&alarm_value_, &from.alarm_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmp_type_) -
    reinterpret_cast<char*>(&alarm_value_)) + sizeof(cmp_type_));
  // @@protoc_insertion_point(copy_constructor:alarmpb2.RuleAlarmRequest)
}

void RuleAlarmRequest::SharedCtor() {
  rule_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&alarm_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmp_type_) -
      reinterpret_cast<char*>(&alarm_value_)) + sizeof(cmp_type_));
  _cached_size_ = 0;
}

RuleAlarmRequest::~RuleAlarmRequest() {
  // @@protoc_insertion_point(destructor:alarmpb2.RuleAlarmRequest)
  SharedDtor();
}

void RuleAlarmRequest::SharedDtor() {
  rule_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RuleAlarmRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RuleAlarmRequest::descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RuleAlarmRequest& RuleAlarmRequest::default_instance() {
  protobuf_alarmpb2_2eproto::InitDefaults();
  return *internal_default_instance();
}

RuleAlarmRequest* RuleAlarmRequest::New(::google::protobuf::Arena* arena) const {
  RuleAlarmRequest* n = new RuleAlarmRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RuleAlarmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alarmpb2.RuleAlarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remark_.Clear();
  rule_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&alarm_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmp_type_) -
      reinterpret_cast<char*>(&alarm_value_)) + sizeof(cmp_type_));
  _internal_metadata_.Clear();
}

bool RuleAlarmRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:alarmpb2.RuleAlarmRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string rule_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rule_name().data(), static_cast<int>(this->rule_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "alarmpb2.RuleAlarmRequest.rule_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double alarm_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alarm_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .alarmpb2.AlarmValueCompareType cmp_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmp_type(static_cast< ::alarmpb2::AlarmValueCompareType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string remark = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_remark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remark(this->remark_size() - 1).data(),
            static_cast<int>(this->remark(this->remark_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "alarmpb2.RuleAlarmRequest.remark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:alarmpb2.RuleAlarmRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:alarmpb2.RuleAlarmRequest)
  return false;
#undef DO_
}

void RuleAlarmRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:alarmpb2.RuleAlarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rule_name = 1;
  if (this->rule_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rule_name().data(), static_cast<int>(this->rule_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.RuleAlarmRequest.rule_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->rule_name(), output);
  }

  // double alarm_value = 2;
  if (this->alarm_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->alarm_value(), output);
  }

  // .alarmpb2.AlarmValueCompareType cmp_type = 3;
  if (this->cmp_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->cmp_type(), output);
  }

  // repeated string remark = 4;
  for (int i = 0, n = this->remark_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark(i).data(), static_cast<int>(this->remark(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.RuleAlarmRequest.remark");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->remark(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:alarmpb2.RuleAlarmRequest)
}

::google::protobuf::uint8* RuleAlarmRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:alarmpb2.RuleAlarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rule_name = 1;
  if (this->rule_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rule_name().data(), static_cast<int>(this->rule_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.RuleAlarmRequest.rule_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->rule_name(), target);
  }

  // double alarm_value = 2;
  if (this->alarm_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->alarm_value(), target);
  }

  // .alarmpb2.AlarmValueCompareType cmp_type = 3;
  if (this->cmp_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->cmp_type(), target);
  }

  // repeated string remark = 4;
  for (int i = 0, n = this->remark_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remark(i).data(), static_cast<int>(this->remark(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.RuleAlarmRequest.remark");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->remark(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alarmpb2.RuleAlarmRequest)
  return target;
}

size_t RuleAlarmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alarmpb2.RuleAlarmRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string remark = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->remark_size());
  for (int i = 0, n = this->remark_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->remark(i));
  }

  // string rule_name = 1;
  if (this->rule_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rule_name());
  }

  // double alarm_value = 2;
  if (this->alarm_value() != 0) {
    total_size += 1 + 8;
  }

  // .alarmpb2.AlarmValueCompareType cmp_type = 3;
  if (this->cmp_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmp_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RuleAlarmRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alarmpb2.RuleAlarmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RuleAlarmRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RuleAlarmRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alarmpb2.RuleAlarmRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alarmpb2.RuleAlarmRequest)
    MergeFrom(*source);
  }
}

void RuleAlarmRequest::MergeFrom(const RuleAlarmRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alarmpb2.RuleAlarmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  remark_.MergeFrom(from.remark_);
  if (from.rule_name().size() > 0) {

    rule_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rule_name_);
  }
  if (from.alarm_value() != 0) {
    set_alarm_value(from.alarm_value());
  }
  if (from.cmp_type() != 0) {
    set_cmp_type(from.cmp_type());
  }
}

void RuleAlarmRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alarmpb2.RuleAlarmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RuleAlarmRequest::CopyFrom(const RuleAlarmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alarmpb2.RuleAlarmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuleAlarmRequest::IsInitialized() const {
  return true;
}

void RuleAlarmRequest::Swap(RuleAlarmRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RuleAlarmRequest::InternalSwap(RuleAlarmRequest* other) {
  using std::swap;
  remark_.InternalSwap(&other->remark_);
  rule_name_.Swap(&other->rule_name_);
  swap(alarm_value_, other->alarm_value_);
  swap(cmp_type_, other->cmp_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RuleAlarmRequest::GetMetadata() const {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RuleAlarmRequest

// string rule_name = 1;
void RuleAlarmRequest::clear_rule_name() {
  rule_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RuleAlarmRequest::rule_name() const {
  // @@protoc_insertion_point(field_get:alarmpb2.RuleAlarmRequest.rule_name)
  return rule_name_.GetNoArena();
}
void RuleAlarmRequest::set_rule_name(const ::std::string& value) {
  
  rule_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarmpb2.RuleAlarmRequest.rule_name)
}
#if LANG_CXX11
void RuleAlarmRequest::set_rule_name(::std::string&& value) {
  
  rule_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:alarmpb2.RuleAlarmRequest.rule_name)
}
#endif
void RuleAlarmRequest::set_rule_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  rule_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarmpb2.RuleAlarmRequest.rule_name)
}
void RuleAlarmRequest::set_rule_name(const char* value, size_t size) {
  
  rule_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarmpb2.RuleAlarmRequest.rule_name)
}
::std::string* RuleAlarmRequest::mutable_rule_name() {
  
  // @@protoc_insertion_point(field_mutable:alarmpb2.RuleAlarmRequest.rule_name)
  return rule_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RuleAlarmRequest::release_rule_name() {
  // @@protoc_insertion_point(field_release:alarmpb2.RuleAlarmRequest.rule_name)
  
  return rule_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RuleAlarmRequest::set_allocated_rule_name(::std::string* rule_name) {
  if (rule_name != NULL) {
    
  } else {
    
  }
  rule_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rule_name);
  // @@protoc_insertion_point(field_set_allocated:alarmpb2.RuleAlarmRequest.rule_name)
}

// double alarm_value = 2;
void RuleAlarmRequest::clear_alarm_value() {
  alarm_value_ = 0;
}
double RuleAlarmRequest::alarm_value() const {
  // @@protoc_insertion_point(field_get:alarmpb2.RuleAlarmRequest.alarm_value)
  return alarm_value_;
}
void RuleAlarmRequest::set_alarm_value(double value) {
  
  alarm_value_ = value;
  // @@protoc_insertion_point(field_set:alarmpb2.RuleAlarmRequest.alarm_value)
}

// .alarmpb2.AlarmValueCompareType cmp_type = 3;
void RuleAlarmRequest::clear_cmp_type() {
  cmp_type_ = 0;
}
::alarmpb2::AlarmValueCompareType RuleAlarmRequest::cmp_type() const {
  // @@protoc_insertion_point(field_get:alarmpb2.RuleAlarmRequest.cmp_type)
  return static_cast< ::alarmpb2::AlarmValueCompareType >(cmp_type_);
}
void RuleAlarmRequest::set_cmp_type(::alarmpb2::AlarmValueCompareType value) {
  
  cmp_type_ = value;
  // @@protoc_insertion_point(field_set:alarmpb2.RuleAlarmRequest.cmp_type)
}

// repeated string remark = 4;
int RuleAlarmRequest::remark_size() const {
  return remark_.size();
}
void RuleAlarmRequest::clear_remark() {
  remark_.Clear();
}
const ::std::string& RuleAlarmRequest::remark(int index) const {
  // @@protoc_insertion_point(field_get:alarmpb2.RuleAlarmRequest.remark)
  return remark_.Get(index);
}
::std::string* RuleAlarmRequest::mutable_remark(int index) {
  // @@protoc_insertion_point(field_mutable:alarmpb2.RuleAlarmRequest.remark)
  return remark_.Mutable(index);
}
void RuleAlarmRequest::set_remark(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:alarmpb2.RuleAlarmRequest.remark)
  remark_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void RuleAlarmRequest::set_remark(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:alarmpb2.RuleAlarmRequest.remark)
  remark_.Mutable(index)->assign(std::move(value));
}
#endif
void RuleAlarmRequest::set_remark(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  remark_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:alarmpb2.RuleAlarmRequest.remark)
}
void RuleAlarmRequest::set_remark(int index, const char* value, size_t size) {
  remark_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:alarmpb2.RuleAlarmRequest.remark)
}
::std::string* RuleAlarmRequest::add_remark() {
  // @@protoc_insertion_point(field_add_mutable:alarmpb2.RuleAlarmRequest.remark)
  return remark_.Add();
}
void RuleAlarmRequest::add_remark(const ::std::string& value) {
  remark_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:alarmpb2.RuleAlarmRequest.remark)
}
#if LANG_CXX11
void RuleAlarmRequest::add_remark(::std::string&& value) {
  remark_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:alarmpb2.RuleAlarmRequest.remark)
}
#endif
void RuleAlarmRequest::add_remark(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  remark_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:alarmpb2.RuleAlarmRequest.remark)
}
void RuleAlarmRequest::add_remark(const char* value, size_t size) {
  remark_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:alarmpb2.RuleAlarmRequest.remark)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
RuleAlarmRequest::remark() const {
  // @@protoc_insertion_point(field_list:alarmpb2.RuleAlarmRequest.remark)
  return remark_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
RuleAlarmRequest::mutable_remark() {
  // @@protoc_insertion_point(field_mutable_list:alarmpb2.RuleAlarmRequest.remark)
  return &remark_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppHeartbeatRequest::kHbIntervalTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppHeartbeatRequest::AppHeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_alarmpb2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:alarmpb2.AppHeartbeatRequest)
}
AppHeartbeatRequest::AppHeartbeatRequest(const AppHeartbeatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hb_interval_time_ = from.hb_interval_time_;
  // @@protoc_insertion_point(copy_constructor:alarmpb2.AppHeartbeatRequest)
}

void AppHeartbeatRequest::SharedCtor() {
  hb_interval_time_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

AppHeartbeatRequest::~AppHeartbeatRequest() {
  // @@protoc_insertion_point(destructor:alarmpb2.AppHeartbeatRequest)
  SharedDtor();
}

void AppHeartbeatRequest::SharedDtor() {
}

void AppHeartbeatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppHeartbeatRequest::descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppHeartbeatRequest& AppHeartbeatRequest::default_instance() {
  protobuf_alarmpb2_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppHeartbeatRequest* AppHeartbeatRequest::New(::google::protobuf::Arena* arena) const {
  AppHeartbeatRequest* n = new AppHeartbeatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppHeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alarmpb2.AppHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hb_interval_time_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool AppHeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:alarmpb2.AppHeartbeatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 hb_interval_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &hb_interval_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:alarmpb2.AppHeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:alarmpb2.AppHeartbeatRequest)
  return false;
#undef DO_
}

void AppHeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:alarmpb2.AppHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 hb_interval_time = 1;
  if (this->hb_interval_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->hb_interval_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:alarmpb2.AppHeartbeatRequest)
}

::google::protobuf::uint8* AppHeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:alarmpb2.AppHeartbeatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 hb_interval_time = 1;
  if (this->hb_interval_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->hb_interval_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alarmpb2.AppHeartbeatRequest)
  return target;
}

size_t AppHeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alarmpb2.AppHeartbeatRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 hb_interval_time = 1;
  if (this->hb_interval_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->hb_interval_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppHeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alarmpb2.AppHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AppHeartbeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppHeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alarmpb2.AppHeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alarmpb2.AppHeartbeatRequest)
    MergeFrom(*source);
  }
}

void AppHeartbeatRequest::MergeFrom(const AppHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alarmpb2.AppHeartbeatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hb_interval_time() != 0) {
    set_hb_interval_time(from.hb_interval_time());
  }
}

void AppHeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alarmpb2.AppHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppHeartbeatRequest::CopyFrom(const AppHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alarmpb2.AppHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppHeartbeatRequest::IsInitialized() const {
  return true;
}

void AppHeartbeatRequest::Swap(AppHeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppHeartbeatRequest::InternalSwap(AppHeartbeatRequest* other) {
  using std::swap;
  swap(hb_interval_time_, other->hb_interval_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppHeartbeatRequest::GetMetadata() const {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppHeartbeatRequest

// int64 hb_interval_time = 1;
void AppHeartbeatRequest::clear_hb_interval_time() {
  hb_interval_time_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AppHeartbeatRequest::hb_interval_time() const {
  // @@protoc_insertion_point(field_get:alarmpb2.AppHeartbeatRequest.hb_interval_time)
  return hb_interval_time_;
}
void AppHeartbeatRequest::set_hb_interval_time(::google::protobuf::int64 value) {
  
  hb_interval_time_ = value;
  // @@protoc_insertion_point(field_set:alarmpb2.AppHeartbeatRequest.hb_interval_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppNotAliveRequest::kAppNameFieldNumber;
const int AppNotAliveRequest::kAliveCheckTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppNotAliveRequest::AppNotAliveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_alarmpb2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:alarmpb2.AppNotAliveRequest)
}
AppNotAliveRequest::AppNotAliveRequest(const AppNotAliveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_name().size() > 0) {
    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  alive_check_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alive_check_time().size() > 0) {
    alive_check_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alive_check_time_);
  }
  // @@protoc_insertion_point(copy_constructor:alarmpb2.AppNotAliveRequest)
}

void AppNotAliveRequest::SharedCtor() {
  app_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alive_check_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AppNotAliveRequest::~AppNotAliveRequest() {
  // @@protoc_insertion_point(destructor:alarmpb2.AppNotAliveRequest)
  SharedDtor();
}

void AppNotAliveRequest::SharedDtor() {
  app_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alive_check_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppNotAliveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppNotAliveRequest::descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppNotAliveRequest& AppNotAliveRequest::default_instance() {
  protobuf_alarmpb2_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppNotAliveRequest* AppNotAliveRequest::New(::google::protobuf::Arena* arena) const {
  AppNotAliveRequest* n = new AppNotAliveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppNotAliveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alarmpb2.AppNotAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alive_check_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AppNotAliveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:alarmpb2.AppNotAliveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string app_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_name().data(), static_cast<int>(this->app_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "alarmpb2.AppNotAliveRequest.app_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alive_check_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alive_check_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alive_check_time().data(), static_cast<int>(this->alive_check_time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "alarmpb2.AppNotAliveRequest.alive_check_time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:alarmpb2.AppNotAliveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:alarmpb2.AppNotAliveRequest)
  return false;
#undef DO_
}

void AppNotAliveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:alarmpb2.AppNotAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.AppNotAliveRequest.app_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_name(), output);
  }

  // string alive_check_time = 2;
  if (this->alive_check_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alive_check_time().data(), static_cast<int>(this->alive_check_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.AppNotAliveRequest.alive_check_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alive_check_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:alarmpb2.AppNotAliveRequest)
}

::google::protobuf::uint8* AppNotAliveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:alarmpb2.AppNotAliveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string app_name = 1;
  if (this->app_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_name().data(), static_cast<int>(this->app_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.AppNotAliveRequest.app_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_name(), target);
  }

  // string alive_check_time = 2;
  if (this->alive_check_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alive_check_time().data(), static_cast<int>(this->alive_check_time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.AppNotAliveRequest.alive_check_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alive_check_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alarmpb2.AppNotAliveRequest)
  return target;
}

size_t AppNotAliveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alarmpb2.AppNotAliveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string app_name = 1;
  if (this->app_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_name());
  }

  // string alive_check_time = 2;
  if (this->alive_check_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alive_check_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppNotAliveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alarmpb2.AppNotAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AppNotAliveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppNotAliveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alarmpb2.AppNotAliveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alarmpb2.AppNotAliveRequest)
    MergeFrom(*source);
  }
}

void AppNotAliveRequest::MergeFrom(const AppNotAliveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alarmpb2.AppNotAliveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.app_name().size() > 0) {

    app_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_name_);
  }
  if (from.alive_check_time().size() > 0) {

    alive_check_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alive_check_time_);
  }
}

void AppNotAliveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alarmpb2.AppNotAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppNotAliveRequest::CopyFrom(const AppNotAliveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alarmpb2.AppNotAliveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppNotAliveRequest::IsInitialized() const {
  return true;
}

void AppNotAliveRequest::Swap(AppNotAliveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppNotAliveRequest::InternalSwap(AppNotAliveRequest* other) {
  using std::swap;
  app_name_.Swap(&other->app_name_);
  alive_check_time_.Swap(&other->alive_check_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppNotAliveRequest::GetMetadata() const {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppNotAliveRequest

// string app_name = 1;
void AppNotAliveRequest::clear_app_name() {
  app_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AppNotAliveRequest::app_name() const {
  // @@protoc_insertion_point(field_get:alarmpb2.AppNotAliveRequest.app_name)
  return app_name_.GetNoArena();
}
void AppNotAliveRequest::set_app_name(const ::std::string& value) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarmpb2.AppNotAliveRequest.app_name)
}
#if LANG_CXX11
void AppNotAliveRequest::set_app_name(::std::string&& value) {
  
  app_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:alarmpb2.AppNotAliveRequest.app_name)
}
#endif
void AppNotAliveRequest::set_app_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarmpb2.AppNotAliveRequest.app_name)
}
void AppNotAliveRequest::set_app_name(const char* value, size_t size) {
  
  app_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarmpb2.AppNotAliveRequest.app_name)
}
::std::string* AppNotAliveRequest::mutable_app_name() {
  
  // @@protoc_insertion_point(field_mutable:alarmpb2.AppNotAliveRequest.app_name)
  return app_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotAliveRequest::release_app_name() {
  // @@protoc_insertion_point(field_release:alarmpb2.AppNotAliveRequest.app_name)
  
  return app_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotAliveRequest::set_allocated_app_name(::std::string* app_name) {
  if (app_name != NULL) {
    
  } else {
    
  }
  app_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_name);
  // @@protoc_insertion_point(field_set_allocated:alarmpb2.AppNotAliveRequest.app_name)
}

// string alive_check_time = 2;
void AppNotAliveRequest::clear_alive_check_time() {
  alive_check_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AppNotAliveRequest::alive_check_time() const {
  // @@protoc_insertion_point(field_get:alarmpb2.AppNotAliveRequest.alive_check_time)
  return alive_check_time_.GetNoArena();
}
void AppNotAliveRequest::set_alive_check_time(const ::std::string& value) {
  
  alive_check_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarmpb2.AppNotAliveRequest.alive_check_time)
}
#if LANG_CXX11
void AppNotAliveRequest::set_alive_check_time(::std::string&& value) {
  
  alive_check_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:alarmpb2.AppNotAliveRequest.alive_check_time)
}
#endif
void AppNotAliveRequest::set_alive_check_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alive_check_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarmpb2.AppNotAliveRequest.alive_check_time)
}
void AppNotAliveRequest::set_alive_check_time(const char* value, size_t size) {
  
  alive_check_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarmpb2.AppNotAliveRequest.alive_check_time)
}
::std::string* AppNotAliveRequest::mutable_alive_check_time() {
  
  // @@protoc_insertion_point(field_mutable:alarmpb2.AppNotAliveRequest.alive_check_time)
  return alive_check_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppNotAliveRequest::release_alive_check_time() {
  // @@protoc_insertion_point(field_release:alarmpb2.AppNotAliveRequest.alive_check_time)
  
  return alive_check_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppNotAliveRequest::set_allocated_alive_check_time(::std::string* alive_check_time) {
  if (alive_check_time != NULL) {
    
  } else {
    
  }
  alive_check_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alive_check_time);
  // @@protoc_insertion_point(field_set_allocated:alarmpb2.AppNotAliveRequest.alive_check_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GatewaySlowLogRequest::kSlowLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GatewaySlowLogRequest::GatewaySlowLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_alarmpb2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:alarmpb2.GatewaySlowLogRequest)
}
GatewaySlowLogRequest::GatewaySlowLogRequest(const GatewaySlowLogRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      slow_log_(from.slow_log_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:alarmpb2.GatewaySlowLogRequest)
}

void GatewaySlowLogRequest::SharedCtor() {
  _cached_size_ = 0;
}

GatewaySlowLogRequest::~GatewaySlowLogRequest() {
  // @@protoc_insertion_point(destructor:alarmpb2.GatewaySlowLogRequest)
  SharedDtor();
}

void GatewaySlowLogRequest::SharedDtor() {
}

void GatewaySlowLogRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GatewaySlowLogRequest::descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GatewaySlowLogRequest& GatewaySlowLogRequest::default_instance() {
  protobuf_alarmpb2_2eproto::InitDefaults();
  return *internal_default_instance();
}

GatewaySlowLogRequest* GatewaySlowLogRequest::New(::google::protobuf::Arena* arena) const {
  GatewaySlowLogRequest* n = new GatewaySlowLogRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GatewaySlowLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alarmpb2.GatewaySlowLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slow_log_.Clear();
  _internal_metadata_.Clear();
}

bool GatewaySlowLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:alarmpb2.GatewaySlowLogRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string slow_log = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_slow_log()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->slow_log(this->slow_log_size() - 1).data(),
            static_cast<int>(this->slow_log(this->slow_log_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "alarmpb2.GatewaySlowLogRequest.slow_log"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:alarmpb2.GatewaySlowLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:alarmpb2.GatewaySlowLogRequest)
  return false;
#undef DO_
}

void GatewaySlowLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:alarmpb2.GatewaySlowLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string slow_log = 1;
  for (int i = 0, n = this->slow_log_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slow_log(i).data(), static_cast<int>(this->slow_log(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.GatewaySlowLogRequest.slow_log");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->slow_log(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:alarmpb2.GatewaySlowLogRequest)
}

::google::protobuf::uint8* GatewaySlowLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:alarmpb2.GatewaySlowLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string slow_log = 1;
  for (int i = 0, n = this->slow_log_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slow_log(i).data(), static_cast<int>(this->slow_log(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.GatewaySlowLogRequest.slow_log");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->slow_log(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alarmpb2.GatewaySlowLogRequest)
  return target;
}

size_t GatewaySlowLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alarmpb2.GatewaySlowLogRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string slow_log = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->slow_log_size());
  for (int i = 0, n = this->slow_log_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->slow_log(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GatewaySlowLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alarmpb2.GatewaySlowLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GatewaySlowLogRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GatewaySlowLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alarmpb2.GatewaySlowLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alarmpb2.GatewaySlowLogRequest)
    MergeFrom(*source);
  }
}

void GatewaySlowLogRequest::MergeFrom(const GatewaySlowLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alarmpb2.GatewaySlowLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  slow_log_.MergeFrom(from.slow_log_);
}

void GatewaySlowLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alarmpb2.GatewaySlowLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GatewaySlowLogRequest::CopyFrom(const GatewaySlowLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alarmpb2.GatewaySlowLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GatewaySlowLogRequest::IsInitialized() const {
  return true;
}

void GatewaySlowLogRequest::Swap(GatewaySlowLogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GatewaySlowLogRequest::InternalSwap(GatewaySlowLogRequest* other) {
  using std::swap;
  slow_log_.InternalSwap(&other->slow_log_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GatewaySlowLogRequest::GetMetadata() const {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GatewaySlowLogRequest

// repeated string slow_log = 1;
int GatewaySlowLogRequest::slow_log_size() const {
  return slow_log_.size();
}
void GatewaySlowLogRequest::clear_slow_log() {
  slow_log_.Clear();
}
const ::std::string& GatewaySlowLogRequest::slow_log(int index) const {
  // @@protoc_insertion_point(field_get:alarmpb2.GatewaySlowLogRequest.slow_log)
  return slow_log_.Get(index);
}
::std::string* GatewaySlowLogRequest::mutable_slow_log(int index) {
  // @@protoc_insertion_point(field_mutable:alarmpb2.GatewaySlowLogRequest.slow_log)
  return slow_log_.Mutable(index);
}
void GatewaySlowLogRequest::set_slow_log(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:alarmpb2.GatewaySlowLogRequest.slow_log)
  slow_log_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void GatewaySlowLogRequest::set_slow_log(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:alarmpb2.GatewaySlowLogRequest.slow_log)
  slow_log_.Mutable(index)->assign(std::move(value));
}
#endif
void GatewaySlowLogRequest::set_slow_log(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  slow_log_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:alarmpb2.GatewaySlowLogRequest.slow_log)
}
void GatewaySlowLogRequest::set_slow_log(int index, const char* value, size_t size) {
  slow_log_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:alarmpb2.GatewaySlowLogRequest.slow_log)
}
::std::string* GatewaySlowLogRequest::add_slow_log() {
  // @@protoc_insertion_point(field_add_mutable:alarmpb2.GatewaySlowLogRequest.slow_log)
  return slow_log_.Add();
}
void GatewaySlowLogRequest::add_slow_log(const ::std::string& value) {
  slow_log_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:alarmpb2.GatewaySlowLogRequest.slow_log)
}
#if LANG_CXX11
void GatewaySlowLogRequest::add_slow_log(::std::string&& value) {
  slow_log_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:alarmpb2.GatewaySlowLogRequest.slow_log)
}
#endif
void GatewaySlowLogRequest::add_slow_log(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  slow_log_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:alarmpb2.GatewaySlowLogRequest.slow_log)
}
void GatewaySlowLogRequest::add_slow_log(const char* value, size_t size) {
  slow_log_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:alarmpb2.GatewaySlowLogRequest.slow_log)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GatewaySlowLogRequest::slow_log() const {
  // @@protoc_insertion_point(field_list:alarmpb2.GatewaySlowLogRequest.slow_log)
  return slow_log_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GatewaySlowLogRequest::mutable_slow_log() {
  // @@protoc_insertion_point(field_mutable_list:alarmpb2.GatewaySlowLogRequest.slow_log)
  return &slow_log_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GatewayErrorLogRequest::kErrorLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GatewayErrorLogRequest::GatewayErrorLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_alarmpb2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:alarmpb2.GatewayErrorLogRequest)
}
GatewayErrorLogRequest::GatewayErrorLogRequest(const GatewayErrorLogRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      error_log_(from.error_log_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:alarmpb2.GatewayErrorLogRequest)
}

void GatewayErrorLogRequest::SharedCtor() {
  _cached_size_ = 0;
}

GatewayErrorLogRequest::~GatewayErrorLogRequest() {
  // @@protoc_insertion_point(destructor:alarmpb2.GatewayErrorLogRequest)
  SharedDtor();
}

void GatewayErrorLogRequest::SharedDtor() {
}

void GatewayErrorLogRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GatewayErrorLogRequest::descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GatewayErrorLogRequest& GatewayErrorLogRequest::default_instance() {
  protobuf_alarmpb2_2eproto::InitDefaults();
  return *internal_default_instance();
}

GatewayErrorLogRequest* GatewayErrorLogRequest::New(::google::protobuf::Arena* arena) const {
  GatewayErrorLogRequest* n = new GatewayErrorLogRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GatewayErrorLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alarmpb2.GatewayErrorLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_log_.Clear();
  _internal_metadata_.Clear();
}

bool GatewayErrorLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:alarmpb2.GatewayErrorLogRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string error_log = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_error_log()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_log(this->error_log_size() - 1).data(),
            static_cast<int>(this->error_log(this->error_log_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "alarmpb2.GatewayErrorLogRequest.error_log"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:alarmpb2.GatewayErrorLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:alarmpb2.GatewayErrorLogRequest)
  return false;
#undef DO_
}

void GatewayErrorLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:alarmpb2.GatewayErrorLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string error_log = 1;
  for (int i = 0, n = this->error_log_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_log(i).data(), static_cast<int>(this->error_log(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.GatewayErrorLogRequest.error_log");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->error_log(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:alarmpb2.GatewayErrorLogRequest)
}

::google::protobuf::uint8* GatewayErrorLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:alarmpb2.GatewayErrorLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string error_log = 1;
  for (int i = 0, n = this->error_log_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_log(i).data(), static_cast<int>(this->error_log(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.GatewayErrorLogRequest.error_log");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->error_log(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alarmpb2.GatewayErrorLogRequest)
  return target;
}

size_t GatewayErrorLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alarmpb2.GatewayErrorLogRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string error_log = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->error_log_size());
  for (int i = 0, n = this->error_log_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->error_log(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GatewayErrorLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alarmpb2.GatewayErrorLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GatewayErrorLogRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GatewayErrorLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alarmpb2.GatewayErrorLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alarmpb2.GatewayErrorLogRequest)
    MergeFrom(*source);
  }
}

void GatewayErrorLogRequest::MergeFrom(const GatewayErrorLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alarmpb2.GatewayErrorLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  error_log_.MergeFrom(from.error_log_);
}

void GatewayErrorLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alarmpb2.GatewayErrorLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GatewayErrorLogRequest::CopyFrom(const GatewayErrorLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alarmpb2.GatewayErrorLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GatewayErrorLogRequest::IsInitialized() const {
  return true;
}

void GatewayErrorLogRequest::Swap(GatewayErrorLogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GatewayErrorLogRequest::InternalSwap(GatewayErrorLogRequest* other) {
  using std::swap;
  error_log_.InternalSwap(&other->error_log_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GatewayErrorLogRequest::GetMetadata() const {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GatewayErrorLogRequest

// repeated string error_log = 1;
int GatewayErrorLogRequest::error_log_size() const {
  return error_log_.size();
}
void GatewayErrorLogRequest::clear_error_log() {
  error_log_.Clear();
}
const ::std::string& GatewayErrorLogRequest::error_log(int index) const {
  // @@protoc_insertion_point(field_get:alarmpb2.GatewayErrorLogRequest.error_log)
  return error_log_.Get(index);
}
::std::string* GatewayErrorLogRequest::mutable_error_log(int index) {
  // @@protoc_insertion_point(field_mutable:alarmpb2.GatewayErrorLogRequest.error_log)
  return error_log_.Mutable(index);
}
void GatewayErrorLogRequest::set_error_log(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:alarmpb2.GatewayErrorLogRequest.error_log)
  error_log_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void GatewayErrorLogRequest::set_error_log(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:alarmpb2.GatewayErrorLogRequest.error_log)
  error_log_.Mutable(index)->assign(std::move(value));
}
#endif
void GatewayErrorLogRequest::set_error_log(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  error_log_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:alarmpb2.GatewayErrorLogRequest.error_log)
}
void GatewayErrorLogRequest::set_error_log(int index, const char* value, size_t size) {
  error_log_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:alarmpb2.GatewayErrorLogRequest.error_log)
}
::std::string* GatewayErrorLogRequest::add_error_log() {
  // @@protoc_insertion_point(field_add_mutable:alarmpb2.GatewayErrorLogRequest.error_log)
  return error_log_.Add();
}
void GatewayErrorLogRequest::add_error_log(const ::std::string& value) {
  error_log_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:alarmpb2.GatewayErrorLogRequest.error_log)
}
#if LANG_CXX11
void GatewayErrorLogRequest::add_error_log(::std::string&& value) {
  error_log_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:alarmpb2.GatewayErrorLogRequest.error_log)
}
#endif
void GatewayErrorLogRequest::add_error_log(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  error_log_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:alarmpb2.GatewayErrorLogRequest.error_log)
}
void GatewayErrorLogRequest::add_error_log(const char* value, size_t size) {
  error_log_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:alarmpb2.GatewayErrorLogRequest.error_log)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GatewayErrorLogRequest::error_log() const {
  // @@protoc_insertion_point(field_list:alarmpb2.GatewayErrorLogRequest.error_log)
  return error_log_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GatewayErrorLogRequest::mutable_error_log() {
  // @@protoc_insertion_point(field_mutable_list:alarmpb2.GatewayErrorLogRequest.error_log)
  return &error_log_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GatewayInputOpsRequest::kAlarmValueFieldNumber;
const int GatewayInputOpsRequest::kCmpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GatewayInputOpsRequest::GatewayInputOpsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_alarmpb2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:alarmpb2.GatewayInputOpsRequest)
}
GatewayInputOpsRequest::GatewayInputOpsRequest(const GatewayInputOpsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&alarm_value_, &from.alarm_value_,
    static_cast<size_t>(reinterpret_cast<char*>(&cmp_type_) -
    reinterpret_cast<char*>(&alarm_value_)) + sizeof(cmp_type_));
  // @@protoc_insertion_point(copy_constructor:alarmpb2.GatewayInputOpsRequest)
}

void GatewayInputOpsRequest::SharedCtor() {
  ::memset(&alarm_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmp_type_) -
      reinterpret_cast<char*>(&alarm_value_)) + sizeof(cmp_type_));
  _cached_size_ = 0;
}

GatewayInputOpsRequest::~GatewayInputOpsRequest() {
  // @@protoc_insertion_point(destructor:alarmpb2.GatewayInputOpsRequest)
  SharedDtor();
}

void GatewayInputOpsRequest::SharedDtor() {
}

void GatewayInputOpsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GatewayInputOpsRequest::descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GatewayInputOpsRequest& GatewayInputOpsRequest::default_instance() {
  protobuf_alarmpb2_2eproto::InitDefaults();
  return *internal_default_instance();
}

GatewayInputOpsRequest* GatewayInputOpsRequest::New(::google::protobuf::Arena* arena) const {
  GatewayInputOpsRequest* n = new GatewayInputOpsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GatewayInputOpsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:alarmpb2.GatewayInputOpsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&alarm_value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmp_type_) -
      reinterpret_cast<char*>(&alarm_value_)) + sizeof(cmp_type_));
  _internal_metadata_.Clear();
}

bool GatewayInputOpsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:alarmpb2.GatewayInputOpsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double alarm_value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &alarm_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .alarmpb2.AlarmValueCompareType cmp_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmp_type(static_cast< ::alarmpb2::AlarmValueCompareType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:alarmpb2.GatewayInputOpsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:alarmpb2.GatewayInputOpsRequest)
  return false;
#undef DO_
}

void GatewayInputOpsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:alarmpb2.GatewayInputOpsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double alarm_value = 1;
  if (this->alarm_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->alarm_value(), output);
  }

  // .alarmpb2.AlarmValueCompareType cmp_type = 2;
  if (this->cmp_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cmp_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:alarmpb2.GatewayInputOpsRequest)
}

::google::protobuf::uint8* GatewayInputOpsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:alarmpb2.GatewayInputOpsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double alarm_value = 1;
  if (this->alarm_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->alarm_value(), target);
  }

  // .alarmpb2.AlarmValueCompareType cmp_type = 2;
  if (this->cmp_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cmp_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alarmpb2.GatewayInputOpsRequest)
  return target;
}

size_t GatewayInputOpsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alarmpb2.GatewayInputOpsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double alarm_value = 1;
  if (this->alarm_value() != 0) {
    total_size += 1 + 8;
  }

  // .alarmpb2.AlarmValueCompareType cmp_type = 2;
  if (this->cmp_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmp_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GatewayInputOpsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alarmpb2.GatewayInputOpsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GatewayInputOpsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GatewayInputOpsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alarmpb2.GatewayInputOpsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alarmpb2.GatewayInputOpsRequest)
    MergeFrom(*source);
  }
}

void GatewayInputOpsRequest::MergeFrom(const GatewayInputOpsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alarmpb2.GatewayInputOpsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alarm_value() != 0) {
    set_alarm_value(from.alarm_value());
  }
  if (from.cmp_type() != 0) {
    set_cmp_type(from.cmp_type());
  }
}

void GatewayInputOpsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alarmpb2.GatewayInputOpsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GatewayInputOpsRequest::CopyFrom(const GatewayInputOpsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alarmpb2.GatewayInputOpsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GatewayInputOpsRequest::IsInitialized() const {
  return true;
}

void GatewayInputOpsRequest::Swap(GatewayInputOpsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GatewayInputOpsRequest::InternalSwap(GatewayInputOpsRequest* other) {
  using std::swap;
  swap(alarm_value_, other->alarm_value_);
  swap(cmp_type_, other->cmp_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GatewayInputOpsRequest::GetMetadata() const {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GatewayInputOpsRequest

// double alarm_value = 1;
void GatewayInputOpsRequest::clear_alarm_value() {
  alarm_value_ = 0;
}
double GatewayInputOpsRequest::alarm_value() const {
  // @@protoc_insertion_point(field_get:alarmpb2.GatewayInputOpsRequest.alarm_value)
  return alarm_value_;
}
void GatewayInputOpsRequest::set_alarm_value(double value) {
  
  alarm_value_ = value;
  // @@protoc_insertion_point(field_set:alarmpb2.GatewayInputOpsRequest.alarm_value)
}

// .alarmpb2.AlarmValueCompareType cmp_type = 2;
void GatewayInputOpsRequest::clear_cmp_type() {
  cmp_type_ = 0;
}
::alarmpb2::AlarmValueCompareType GatewayInputOpsRequest::cmp_type() const {
  // @@protoc_insertion_point(field_get:alarmpb2.GatewayInputOpsRequest.cmp_type)
  return static_cast< ::alarmpb2::AlarmValueCompareType >(cmp_type_);
}
void GatewayInputOpsRequest::set_cmp_type(::alarmpb2::AlarmValueCompareType value) {
  
  cmp_type_ = value;
  // @@protoc_insertion_point(field_set:alarmpb2.GatewayInputOpsRequest.cmp_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlarmResponse::kHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlarmResponse::AlarmResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_alarmpb2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:alarmpb2.AlarmResponse)
}
AlarmResponse::AlarmResponse(const AlarmResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::alarmpb2::ResponseHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:alarmpb2.AlarmResponse)
}

void AlarmResponse::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

AlarmResponse::~AlarmResponse() {
  // @@protoc_insertion_point(destructor:alarmpb2.AlarmResponse)
  SharedDtor();
}

void AlarmResponse::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void AlarmResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlarmResponse::descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlarmResponse& AlarmResponse::default_instance() {
  protobuf_alarmpb2_2eproto::InitDefaults();
  return *internal_default_instance();
}

AlarmResponse* AlarmResponse::New(::google::protobuf::Arena* arena) const {
  AlarmResponse* n = new AlarmResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlarmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:alarmpb2.AlarmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool AlarmResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:alarmpb2.AlarmResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .alarmpb2.ResponseHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:alarmpb2.AlarmResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:alarmpb2.AlarmResponse)
  return false;
#undef DO_
}

void AlarmResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:alarmpb2.AlarmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .alarmpb2.ResponseHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:alarmpb2.AlarmResponse)
}

::google::protobuf::uint8* AlarmResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:alarmpb2.AlarmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .alarmpb2.ResponseHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alarmpb2.AlarmResponse)
  return target;
}

size_t AlarmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alarmpb2.AlarmResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .alarmpb2.ResponseHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlarmResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alarmpb2.AlarmResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AlarmResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlarmResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alarmpb2.AlarmResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alarmpb2.AlarmResponse)
    MergeFrom(*source);
  }
}

void AlarmResponse::MergeFrom(const AlarmResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alarmpb2.AlarmResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::alarmpb2::ResponseHeader::MergeFrom(from.header());
  }
}

void AlarmResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alarmpb2.AlarmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlarmResponse::CopyFrom(const AlarmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alarmpb2.AlarmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlarmResponse::IsInitialized() const {
  return true;
}

void AlarmResponse::Swap(AlarmResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlarmResponse::InternalSwap(AlarmResponse* other) {
  using std::swap;
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlarmResponse::GetMetadata() const {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlarmResponse

// .alarmpb2.ResponseHeader header = 1;
bool AlarmResponse::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
void AlarmResponse::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::alarmpb2::ResponseHeader& AlarmResponse::header() const {
  const ::alarmpb2::ResponseHeader* p = header_;
  // @@protoc_insertion_point(field_get:alarmpb2.AlarmResponse.header)
  return p != NULL ? *p : *reinterpret_cast<const ::alarmpb2::ResponseHeader*>(
      &::alarmpb2::_ResponseHeader_default_instance_);
}
::alarmpb2::ResponseHeader* AlarmResponse::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::alarmpb2::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:alarmpb2.AlarmResponse.header)
  return header_;
}
::alarmpb2::ResponseHeader* AlarmResponse::release_header() {
  // @@protoc_insertion_point(field_release:alarmpb2.AlarmResponse.header)
  
  ::alarmpb2::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void AlarmResponse::set_allocated_header(::alarmpb2::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:alarmpb2.AlarmResponse.header)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseHeader::kCodeFieldNumber;
const int ResponseHeader::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseHeader::ResponseHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_alarmpb2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:alarmpb2.ResponseHeader)
}
ResponseHeader::ResponseHeader(const ResponseHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:alarmpb2.ResponseHeader)
}

void ResponseHeader::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

ResponseHeader::~ResponseHeader() {
  // @@protoc_insertion_point(destructor:alarmpb2.ResponseHeader)
  SharedDtor();
}

void ResponseHeader::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResponseHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseHeader::descriptor() {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResponseHeader& ResponseHeader::default_instance() {
  protobuf_alarmpb2_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResponseHeader* ResponseHeader::New(::google::protobuf::Arena* arena) const {
  ResponseHeader* n = new ResponseHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:alarmpb2.ResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool ResponseHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:alarmpb2.ResponseHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .alarmpb2.AlarmResponseCode code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::alarmpb2::AlarmResponseCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "alarmpb2.ResponseHeader.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:alarmpb2.ResponseHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:alarmpb2.ResponseHeader)
  return false;
#undef DO_
}

void ResponseHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:alarmpb2.ResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .alarmpb2.AlarmResponseCode code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.ResponseHeader.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:alarmpb2.ResponseHeader)
}

::google::protobuf::uint8* ResponseHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:alarmpb2.ResponseHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .alarmpb2.AlarmResponseCode code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "alarmpb2.ResponseHeader.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:alarmpb2.ResponseHeader)
  return target;
}

size_t ResponseHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:alarmpb2.ResponseHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .alarmpb2.AlarmResponseCode code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:alarmpb2.ResponseHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const ResponseHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:alarmpb2.ResponseHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:alarmpb2.ResponseHeader)
    MergeFrom(*source);
  }
}

void ResponseHeader::MergeFrom(const ResponseHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:alarmpb2.ResponseHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ResponseHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:alarmpb2.ResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseHeader::CopyFrom(const ResponseHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:alarmpb2.ResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseHeader::IsInitialized() const {
  return true;
}

void ResponseHeader::Swap(ResponseHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseHeader::InternalSwap(ResponseHeader* other) {
  using std::swap;
  error_.Swap(&other->error_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseHeader::GetMetadata() const {
  protobuf_alarmpb2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_alarmpb2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseHeader

// .alarmpb2.AlarmResponseCode code = 1;
void ResponseHeader::clear_code() {
  code_ = 0;
}
::alarmpb2::AlarmResponseCode ResponseHeader::code() const {
  // @@protoc_insertion_point(field_get:alarmpb2.ResponseHeader.code)
  return static_cast< ::alarmpb2::AlarmResponseCode >(code_);
}
void ResponseHeader::set_code(::alarmpb2::AlarmResponseCode value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:alarmpb2.ResponseHeader.code)
}

// string error = 2;
void ResponseHeader::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResponseHeader::error() const {
  // @@protoc_insertion_point(field_get:alarmpb2.ResponseHeader.error)
  return error_.GetNoArena();
}
void ResponseHeader::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:alarmpb2.ResponseHeader.error)
}
#if LANG_CXX11
void ResponseHeader::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:alarmpb2.ResponseHeader.error)
}
#endif
void ResponseHeader::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:alarmpb2.ResponseHeader.error)
}
void ResponseHeader::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:alarmpb2.ResponseHeader.error)
}
::std::string* ResponseHeader::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:alarmpb2.ResponseHeader.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseHeader::release_error() {
  // @@protoc_insertion_point(field_release:alarmpb2.ResponseHeader.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseHeader::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:alarmpb2.ResponseHeader.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace alarmpb2

// @@protoc_insertion_point(global_scope)
