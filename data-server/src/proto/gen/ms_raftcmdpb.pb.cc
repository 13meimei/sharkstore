// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ms_raftcmdpb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ms_raftcmdpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ms_raftcmdpb {
class RaftKvPairDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RaftKvPair>
     _instance;
} _RaftKvPair_default_instance_;
class KvPairDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KvPair>
     _instance;
} _KvPair_default_instance_;
class GetRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetRequest>
     _instance;
} _GetRequest_default_instance_;
class GetResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetResponse>
     _instance;
} _GetResponse_default_instance_;
class PutRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PutRequest>
     _instance;
} _PutRequest_default_instance_;
class PutResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PutResponse>
     _instance;
} _PutResponse_default_instance_;
class DeleteRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteRequest>
     _instance;
} _DeleteRequest_default_instance_;
class DeleteResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteResponse>
     _instance;
} _DeleteResponse_default_instance_;
class KvPairExecuteDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KvPairExecute>
     _instance;
} _KvPairExecute_default_instance_;
class ExecuteRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExecuteRequest>
     _instance;
} _ExecuteRequest_default_instance_;
class ExecuteResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExecuteResponse>
     _instance;
} _ExecuteResponse_default_instance_;
class RequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Request>
     _instance;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Response>
     _instance;
} _Response_default_instance_;

namespace protobuf_ms_5fraftcmdpb_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaftKvPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaftKvPair, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaftKvPair, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaftKvPair, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RaftKvPair, applyindex_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KvPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KvPair, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KvPair, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutRequest, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutResponse, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteRequest, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteResponse, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KvPairExecute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KvPairExecute, do__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KvPairExecute, kv_pair_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteRequest, execs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteResponse, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, cmd_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, get_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, put_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, delete_req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, execute_req_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, cmd_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, get_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, put_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, delete_resp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, execute_resp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(RaftKvPair)},
  { 9, -1, sizeof(KvPair)},
  { 16, -1, sizeof(GetRequest)},
  { 22, -1, sizeof(GetResponse)},
  { 29, -1, sizeof(PutRequest)},
  { 36, -1, sizeof(PutResponse)},
  { 42, -1, sizeof(DeleteRequest)},
  { 48, -1, sizeof(DeleteResponse)},
  { 54, -1, sizeof(KvPairExecute)},
  { 61, -1, sizeof(ExecuteRequest)},
  { 67, -1, sizeof(ExecuteResponse)},
  { 73, -1, sizeof(Request)},
  { 83, -1, sizeof(Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RaftKvPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KvPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PutResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KvPairExecute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExecuteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExecuteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Response_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ms_raftcmdpb.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RaftKvPair_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RaftKvPair_default_instance_);_KvPair_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KvPair_default_instance_);_GetRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetRequest_default_instance_);_GetResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetResponse_default_instance_);_PutRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PutRequest_default_instance_);_PutResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PutResponse_default_instance_);_DeleteRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteRequest_default_instance_);_DeleteResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteResponse_default_instance_);_KvPairExecute_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KvPairExecute_default_instance_);_ExecuteRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExecuteRequest_default_instance_);_ExecuteResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExecuteResponse_default_instance_);_Request_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Request_default_instance_);_Response_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Response_default_instance_);_KvPairExecute_default_instance_._instance.get_mutable()->kv_pair_ = const_cast< ::ms_raftcmdpb::KvPair*>(
      ::ms_raftcmdpb::KvPair::internal_default_instance());
  _Request_default_instance_._instance.get_mutable()->get_req_ = const_cast< ::ms_raftcmdpb::GetRequest*>(
      ::ms_raftcmdpb::GetRequest::internal_default_instance());
  _Request_default_instance_._instance.get_mutable()->put_req_ = const_cast< ::ms_raftcmdpb::PutRequest*>(
      ::ms_raftcmdpb::PutRequest::internal_default_instance());
  _Request_default_instance_._instance.get_mutable()->delete_req_ = const_cast< ::ms_raftcmdpb::DeleteRequest*>(
      ::ms_raftcmdpb::DeleteRequest::internal_default_instance());
  _Request_default_instance_._instance.get_mutable()->execute_req_ = const_cast< ::ms_raftcmdpb::ExecuteRequest*>(
      ::ms_raftcmdpb::ExecuteRequest::internal_default_instance());
  _Response_default_instance_._instance.get_mutable()->get_resp_ = const_cast< ::ms_raftcmdpb::GetResponse*>(
      ::ms_raftcmdpb::GetResponse::internal_default_instance());
  _Response_default_instance_._instance.get_mutable()->put_resp_ = const_cast< ::ms_raftcmdpb::PutResponse*>(
      ::ms_raftcmdpb::PutResponse::internal_default_instance());
  _Response_default_instance_._instance.get_mutable()->delete_resp_ = const_cast< ::ms_raftcmdpb::DeleteResponse*>(
      ::ms_raftcmdpb::DeleteResponse::internal_default_instance());
  _Response_default_instance_._instance.get_mutable()->execute_resp_ = const_cast< ::ms_raftcmdpb::ExecuteResponse*>(
      ::ms_raftcmdpb::ExecuteResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022ms_raftcmdpb.proto\022\014ms_raftcmdpb\"O\n\nRa"
      "ftKvPair\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\022\021\n\t"
      "timestamp\030\003 \001(\004\022\022\n\napplyIndex\030\004 \001(\004\"$\n\006K"
      "vPair\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\"\031\n\nGet"
      "Request\022\013\n\003key\030\001 \001(\014\"*\n\013GetResponse\022\014\n\004c"
      "ode\030\001 \001(\005\022\r\n\005value\030\002 \001(\014\"(\n\nPutRequest\022\013"
      "\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014\"\033\n\013PutRespons"
      "e\022\014\n\004code\030\001 \001(\005\"\034\n\rDeleteRequest\022\013\n\003key\030"
      "\001 \001(\014\"\036\n\016DeleteResponse\022\014\n\004code\030\001 \001(\005\"]\n"
      "\rKvPairExecute\022%\n\002do\030\001 \001(\0162\031.ms_raftcmdp"
      "b.ExecuteType\022%\n\007kv_pair\030\002 \001(\0132\024.ms_raft"
      "cmdpb.KvPair\"<\n\016ExecuteRequest\022*\n\005execs\030"
      "\001 \003(\0132\033.ms_raftcmdpb.KvPairExecute\"\037\n\017Ex"
      "ecuteResponse\022\014\n\004code\030\001 \001(\005\"\354\001\n\007Request\022"
      "\'\n\010cmd_type\030\002 \001(\0162\025.ms_raftcmdpb.CmdType"
      "\022)\n\007get_req\030\003 \001(\0132\030.ms_raftcmdpb.GetRequ"
      "est\022)\n\007put_req\030\004 \001(\0132\030.ms_raftcmdpb.PutR"
      "equest\022/\n\ndelete_req\030\005 \001(\0132\033.ms_raftcmdp"
      "b.DeleteRequest\0221\n\013execute_req\030\006 \001(\0132\034.m"
      "s_raftcmdpb.ExecuteRequest\"\365\001\n\010Response\022"
      "\'\n\010cmd_type\030\001 \001(\0162\025.ms_raftcmdpb.CmdType"
      "\022+\n\010get_resp\030\002 \001(\0132\031.ms_raftcmdpb.GetRes"
      "ponse\022+\n\010put_resp\030\003 \001(\0132\031.ms_raftcmdpb.P"
      "utResponse\0221\n\013delete_resp\030\004 \001(\0132\034.ms_raf"
      "tcmdpb.DeleteResponse\0223\n\014execute_resp\030\005 "
      "\001(\0132\035.ms_raftcmdpb.ExecuteResponse*;\n\013Ex"
      "ecuteType\022\017\n\013ExecInvalid\020\000\022\013\n\007ExecPut\020\001\022"
      "\016\n\nExecDelete\020\002*A\n\007CmdType\022\013\n\007Invalid\020\000\022"
      "\007\n\003Get\020\001\022\007\n\003Put\020\002\022\n\n\006Delete\020\003\022\013\n\007Execute"
      "\020\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1170);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ms_raftcmdpb.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ms_5fraftcmdpb_2eproto

const ::google::protobuf::EnumDescriptor* ExecuteType_descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_enum_descriptors[0];
}
bool ExecuteType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CmdType_descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_enum_descriptors[1];
}
bool CmdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RaftKvPair::kKeyFieldNumber;
const int RaftKvPair::kValueFieldNumber;
const int RaftKvPair::kTimestampFieldNumber;
const int RaftKvPair::kApplyIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RaftKvPair::RaftKvPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.RaftKvPair)
}
RaftKvPair::RaftKvPair(const RaftKvPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&applyindex_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(applyindex_));
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.RaftKvPair)
}

void RaftKvPair::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&applyindex_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(applyindex_));
  _cached_size_ = 0;
}

RaftKvPair::~RaftKvPair() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.RaftKvPair)
  SharedDtor();
}

void RaftKvPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RaftKvPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RaftKvPair::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RaftKvPair& RaftKvPair::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

RaftKvPair* RaftKvPair::New(::google::protobuf::Arena* arena) const {
  RaftKvPair* n = new RaftKvPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RaftKvPair::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.RaftKvPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&applyindex_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(applyindex_));
  _internal_metadata_.Clear();
}

bool RaftKvPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.RaftKvPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 applyIndex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &applyindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.RaftKvPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.RaftKvPair)
  return false;
#undef DO_
}

void RaftKvPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.RaftKvPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  // uint64 timestamp = 3;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->timestamp(), output);
  }

  // uint64 applyIndex = 4;
  if (this->applyindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->applyindex(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.RaftKvPair)
}

::google::protobuf::uint8* RaftKvPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.RaftKvPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  // uint64 timestamp = 3;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->timestamp(), target);
  }

  // uint64 applyIndex = 4;
  if (this->applyindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->applyindex(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.RaftKvPair)
  return target;
}

size_t RaftKvPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.RaftKvPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // uint64 timestamp = 3;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // uint64 applyIndex = 4;
  if (this->applyindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->applyindex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RaftKvPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.RaftKvPair)
  GOOGLE_DCHECK_NE(&from, this);
  const RaftKvPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RaftKvPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.RaftKvPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.RaftKvPair)
    MergeFrom(*source);
  }
}

void RaftKvPair::MergeFrom(const RaftKvPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.RaftKvPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.applyindex() != 0) {
    set_applyindex(from.applyindex());
  }
}

void RaftKvPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.RaftKvPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaftKvPair::CopyFrom(const RaftKvPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.RaftKvPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RaftKvPair::IsInitialized() const {
  return true;
}

void RaftKvPair::Swap(RaftKvPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RaftKvPair::InternalSwap(RaftKvPair* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  swap(timestamp_, other->timestamp_);
  swap(applyindex_, other->applyindex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RaftKvPair::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RaftKvPair

// bytes key = 1;
void RaftKvPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RaftKvPair::key() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.RaftKvPair.key)
  return key_.GetNoArena();
}
void RaftKvPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.RaftKvPair.key)
}
#if LANG_CXX11
void RaftKvPair::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.RaftKvPair.key)
}
#endif
void RaftKvPair::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.RaftKvPair.key)
}
void RaftKvPair::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.RaftKvPair.key)
}
::std::string* RaftKvPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.RaftKvPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RaftKvPair::release_key() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.RaftKvPair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RaftKvPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.RaftKvPair.key)
}

// bytes value = 2;
void RaftKvPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RaftKvPair::value() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.RaftKvPair.value)
  return value_.GetNoArena();
}
void RaftKvPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.RaftKvPair.value)
}
#if LANG_CXX11
void RaftKvPair::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.RaftKvPair.value)
}
#endif
void RaftKvPair::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.RaftKvPair.value)
}
void RaftKvPair::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.RaftKvPair.value)
}
::std::string* RaftKvPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.RaftKvPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RaftKvPair::release_value() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.RaftKvPair.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RaftKvPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.RaftKvPair.value)
}

// uint64 timestamp = 3;
void RaftKvPair::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RaftKvPair::timestamp() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.RaftKvPair.timestamp)
  return timestamp_;
}
void RaftKvPair::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.RaftKvPair.timestamp)
}

// uint64 applyIndex = 4;
void RaftKvPair::clear_applyindex() {
  applyindex_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 RaftKvPair::applyindex() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.RaftKvPair.applyIndex)
  return applyindex_;
}
void RaftKvPair::set_applyindex(::google::protobuf::uint64 value) {
  
  applyindex_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.RaftKvPair.applyIndex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KvPair::kKeyFieldNumber;
const int KvPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KvPair::KvPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.KvPair)
}
KvPair::KvPair(const KvPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.KvPair)
}

void KvPair::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

KvPair::~KvPair() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.KvPair)
  SharedDtor();
}

void KvPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KvPair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KvPair::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KvPair& KvPair::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

KvPair* KvPair::New(::google::protobuf::Arena* arena) const {
  KvPair* n = new KvPair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KvPair::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.KvPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool KvPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.KvPair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.KvPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.KvPair)
  return false;
#undef DO_
}

void KvPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.KvPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.KvPair)
}

::google::protobuf::uint8* KvPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.KvPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.KvPair)
  return target;
}

size_t KvPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.KvPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KvPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.KvPair)
  GOOGLE_DCHECK_NE(&from, this);
  const KvPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KvPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.KvPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.KvPair)
    MergeFrom(*source);
  }
}

void KvPair::MergeFrom(const KvPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.KvPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void KvPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.KvPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KvPair::CopyFrom(const KvPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.KvPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KvPair::IsInitialized() const {
  return true;
}

void KvPair::Swap(KvPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KvPair::InternalSwap(KvPair* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KvPair::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KvPair

// bytes key = 1;
void KvPair::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KvPair::key() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.KvPair.key)
  return key_.GetNoArena();
}
void KvPair::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.KvPair.key)
}
#if LANG_CXX11
void KvPair::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.KvPair.key)
}
#endif
void KvPair::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.KvPair.key)
}
void KvPair::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.KvPair.key)
}
::std::string* KvPair::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.KvPair.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KvPair::release_key() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.KvPair.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KvPair::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.KvPair.key)
}

// bytes value = 2;
void KvPair::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& KvPair::value() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.KvPair.value)
  return value_.GetNoArena();
}
void KvPair::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.KvPair.value)
}
#if LANG_CXX11
void KvPair::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.KvPair.value)
}
#endif
void KvPair::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.KvPair.value)
}
void KvPair::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.KvPair.value)
}
::std::string* KvPair::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.KvPair.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KvPair::release_value() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.KvPair.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KvPair::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.KvPair.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.GetRequest)
}
GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.GetRequest)
}

void GetRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRequest::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRequest& GetRequest::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRequest* GetRequest::New(::google::protobuf::Arena* arena) const {
  GetRequest* n = new GetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.GetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.GetRequest)
  return false;
#undef DO_
}

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.GetRequest)
}

::google::protobuf::uint8* GetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.GetRequest)
  return target;
}

size_t GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.GetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.GetRequest)
    MergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRequest::IsInitialized() const {
  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  using std::swap;
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRequest

// bytes key = 1;
void GetRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetRequest::key() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.GetRequest.key)
  return key_.GetNoArena();
}
void GetRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.GetRequest.key)
}
#if LANG_CXX11
void GetRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.GetRequest.key)
}
#endif
void GetRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.GetRequest.key)
}
void GetRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.GetRequest.key)
}
::std::string* GetRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.GetRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetRequest::release_key() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.GetRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.GetRequest.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResponse::kCodeFieldNumber;
const int GetResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResponse::GetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.GetResponse)
}
GetResponse::GetResponse(const GetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.GetResponse)
}

void GetResponse::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.GetResponse)
  SharedDtor();
}

void GetResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetResponse::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResponse& GetResponse::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetResponse* GetResponse::New(::google::protobuf::Arena* arena) const {
  GetResponse* n = new GetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool GetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.GetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.GetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.GetResponse)
  return false;
#undef DO_
}

void GetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.GetResponse)
}

::google::protobuf::uint8* GetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.GetResponse)
  return target;
}

size_t GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.GetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.GetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.GetResponse)
    MergeFrom(*source);
  }
}

void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void GetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponse::IsInitialized() const {
  return true;
}

void GetResponse::Swap(GetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResponse::InternalSwap(GetResponse* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetResponse::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetResponse

// int32 code = 1;
void GetResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 GetResponse::code() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.GetResponse.code)
  return code_;
}
void GetResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.GetResponse.code)
}

// bytes value = 2;
void GetResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetResponse::value() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.GetResponse.value)
  return value_.GetNoArena();
}
void GetResponse::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.GetResponse.value)
}
#if LANG_CXX11
void GetResponse::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.GetResponse.value)
}
#endif
void GetResponse::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.GetResponse.value)
}
void GetResponse::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.GetResponse.value)
}
::std::string* GetResponse::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.GetResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetResponse::release_value() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.GetResponse.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.GetResponse.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutRequest::kKeyFieldNumber;
const int PutRequest::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutRequest::PutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.PutRequest)
}
PutRequest::PutRequest(const PutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.PutRequest)
}

void PutRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PutRequest::~PutRequest() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.PutRequest)
  SharedDtor();
}

void PutRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutRequest::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutRequest& PutRequest::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

PutRequest* PutRequest::New(::google::protobuf::Arena* arena) const {
  PutRequest* n = new PutRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.PutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.PutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.PutRequest)
  return false;
#undef DO_
}

void PutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.PutRequest)
}

::google::protobuf::uint8* PutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.PutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.PutRequest)
  return target;
}

size_t PutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.PutRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.PutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.PutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.PutRequest)
    MergeFrom(*source);
  }
}

void PutRequest::MergeFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.PutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void PutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutRequest::CopyFrom(const PutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.PutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutRequest::IsInitialized() const {
  return true;
}

void PutRequest::Swap(PutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutRequest::InternalSwap(PutRequest* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutRequest::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PutRequest

// bytes key = 1;
void PutRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PutRequest::key() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.PutRequest.key)
  return key_.GetNoArena();
}
void PutRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.PutRequest.key)
}
#if LANG_CXX11
void PutRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.PutRequest.key)
}
#endif
void PutRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.PutRequest.key)
}
void PutRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.PutRequest.key)
}
::std::string* PutRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.PutRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PutRequest::release_key() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.PutRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PutRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.PutRequest.key)
}

// bytes value = 2;
void PutRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PutRequest::value() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.PutRequest.value)
  return value_.GetNoArena();
}
void PutRequest::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.PutRequest.value)
}
#if LANG_CXX11
void PutRequest::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.PutRequest.value)
}
#endif
void PutRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.PutRequest.value)
}
void PutRequest::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.PutRequest.value)
}
::std::string* PutRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.PutRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PutRequest::release_value() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.PutRequest.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PutRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.PutRequest.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutResponse::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutResponse::PutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.PutResponse)
}
PutResponse::PutResponse(const PutResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.PutResponse)
}

void PutResponse::SharedCtor() {
  code_ = 0;
  _cached_size_ = 0;
}

PutResponse::~PutResponse() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.PutResponse)
  SharedDtor();
}

void PutResponse::SharedDtor() {
}

void PutResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutResponse::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutResponse& PutResponse::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

PutResponse* PutResponse::New(::google::protobuf::Arena* arena) const {
  PutResponse* n = new PutResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.PutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear();
}

bool PutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.PutResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.PutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.PutResponse)
  return false;
#undef DO_
}

void PutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.PutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.PutResponse)
}

::google::protobuf::uint8* PutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.PutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.PutResponse)
  return target;
}

size_t PutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.PutResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.PutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.PutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.PutResponse)
    MergeFrom(*source);
  }
}

void PutResponse::MergeFrom(const PutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.PutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
}

void PutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.PutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutResponse::CopyFrom(const PutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.PutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutResponse::IsInitialized() const {
  return true;
}

void PutResponse::Swap(PutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutResponse::InternalSwap(PutResponse* other) {
  using std::swap;
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutResponse::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PutResponse

// int32 code = 1;
void PutResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 PutResponse::code() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.PutResponse.code)
  return code_;
}
void PutResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.PutResponse.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRequest::DeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.DeleteRequest)
}
DeleteRequest::DeleteRequest(const DeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.DeleteRequest)
}

void DeleteRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DeleteRequest::~DeleteRequest() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.DeleteRequest)
  SharedDtor();
}

void DeleteRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteRequest::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRequest& DeleteRequest::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteRequest* DeleteRequest::New(::google::protobuf::Arena* arena) const {
  DeleteRequest* n = new DeleteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.DeleteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.DeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.DeleteRequest)
  return false;
#undef DO_
}

void DeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.DeleteRequest)
}

::google::protobuf::uint8* DeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.DeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.DeleteRequest)
  return target;
}

size_t DeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.DeleteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.DeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.DeleteRequest)
    MergeFrom(*source);
  }
}

void DeleteRequest::MergeFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.DeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void DeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRequest::CopyFrom(const DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRequest::IsInitialized() const {
  return true;
}

void DeleteRequest::Swap(DeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRequest::InternalSwap(DeleteRequest* other) {
  using std::swap;
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteRequest::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteRequest

// bytes key = 1;
void DeleteRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DeleteRequest::key() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.DeleteRequest.key)
  return key_.GetNoArena();
}
void DeleteRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.DeleteRequest.key)
}
#if LANG_CXX11
void DeleteRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ms_raftcmdpb.DeleteRequest.key)
}
#endif
void DeleteRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ms_raftcmdpb.DeleteRequest.key)
}
void DeleteRequest::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ms_raftcmdpb.DeleteRequest.key)
}
::std::string* DeleteRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.DeleteRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DeleteRequest::release_key() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.DeleteRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DeleteRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.DeleteRequest.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteResponse::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteResponse::DeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.DeleteResponse)
}
DeleteResponse::DeleteResponse(const DeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.DeleteResponse)
}

void DeleteResponse::SharedCtor() {
  code_ = 0;
  _cached_size_ = 0;
}

DeleteResponse::~DeleteResponse() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.DeleteResponse)
  SharedDtor();
}

void DeleteResponse::SharedDtor() {
}

void DeleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteResponse::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteResponse& DeleteResponse::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteResponse* DeleteResponse::New(::google::protobuf::Arena* arena) const {
  DeleteResponse* n = new DeleteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.DeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear();
}

bool DeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.DeleteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.DeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.DeleteResponse)
  return false;
#undef DO_
}

void DeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.DeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.DeleteResponse)
}

::google::protobuf::uint8* DeleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.DeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.DeleteResponse)
  return target;
}

size_t DeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.DeleteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.DeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.DeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.DeleteResponse)
    MergeFrom(*source);
  }
}

void DeleteResponse::MergeFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.DeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
}

void DeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteResponse::CopyFrom(const DeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.DeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteResponse::IsInitialized() const {
  return true;
}

void DeleteResponse::Swap(DeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteResponse::InternalSwap(DeleteResponse* other) {
  using std::swap;
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteResponse::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteResponse

// int32 code = 1;
void DeleteResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 DeleteResponse::code() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.DeleteResponse.code)
  return code_;
}
void DeleteResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.DeleteResponse.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KvPairExecute::kDoFieldNumber;
const int KvPairExecute::kKvPairFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KvPairExecute::KvPairExecute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.KvPairExecute)
}
KvPairExecute::KvPairExecute(const KvPairExecute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_kv_pair()) {
    kv_pair_ = new ::ms_raftcmdpb::KvPair(*from.kv_pair_);
  } else {
    kv_pair_ = NULL;
  }
  do__ = from.do__;
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.KvPairExecute)
}

void KvPairExecute::SharedCtor() {
  ::memset(&kv_pair_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&do__) -
      reinterpret_cast<char*>(&kv_pair_)) + sizeof(do__));
  _cached_size_ = 0;
}

KvPairExecute::~KvPairExecute() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.KvPairExecute)
  SharedDtor();
}

void KvPairExecute::SharedDtor() {
  if (this != internal_default_instance()) delete kv_pair_;
}

void KvPairExecute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KvPairExecute::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KvPairExecute& KvPairExecute::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

KvPairExecute* KvPairExecute::New(::google::protobuf::Arena* arena) const {
  KvPairExecute* n = new KvPairExecute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KvPairExecute::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.KvPairExecute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && kv_pair_ != NULL) {
    delete kv_pair_;
  }
  kv_pair_ = NULL;
  do__ = 0;
  _internal_metadata_.Clear();
}

bool KvPairExecute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.KvPairExecute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ms_raftcmdpb.ExecuteType do = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_do_(static_cast< ::ms_raftcmdpb::ExecuteType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ms_raftcmdpb.KvPair kv_pair = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kv_pair()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.KvPairExecute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.KvPairExecute)
  return false;
#undef DO_
}

void KvPairExecute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.KvPairExecute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ms_raftcmdpb.ExecuteType do = 1;
  if (this->do_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->do_(), output);
  }

  // .ms_raftcmdpb.KvPair kv_pair = 2;
  if (this->has_kv_pair()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->kv_pair_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.KvPairExecute)
}

::google::protobuf::uint8* KvPairExecute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.KvPairExecute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ms_raftcmdpb.ExecuteType do = 1;
  if (this->do_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->do_(), target);
  }

  // .ms_raftcmdpb.KvPair kv_pair = 2;
  if (this->has_kv_pair()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->kv_pair_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.KvPairExecute)
  return target;
}

size_t KvPairExecute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.KvPairExecute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ms_raftcmdpb.KvPair kv_pair = 2;
  if (this->has_kv_pair()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->kv_pair_);
  }

  // .ms_raftcmdpb.ExecuteType do = 1;
  if (this->do_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->do_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KvPairExecute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.KvPairExecute)
  GOOGLE_DCHECK_NE(&from, this);
  const KvPairExecute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KvPairExecute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.KvPairExecute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.KvPairExecute)
    MergeFrom(*source);
  }
}

void KvPairExecute::MergeFrom(const KvPairExecute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.KvPairExecute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_kv_pair()) {
    mutable_kv_pair()->::ms_raftcmdpb::KvPair::MergeFrom(from.kv_pair());
  }
  if (from.do_() != 0) {
    set_do_(from.do_());
  }
}

void KvPairExecute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.KvPairExecute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KvPairExecute::CopyFrom(const KvPairExecute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.KvPairExecute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KvPairExecute::IsInitialized() const {
  return true;
}

void KvPairExecute::Swap(KvPairExecute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KvPairExecute::InternalSwap(KvPairExecute* other) {
  using std::swap;
  swap(kv_pair_, other->kv_pair_);
  swap(do__, other->do__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KvPairExecute::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KvPairExecute

// .ms_raftcmdpb.ExecuteType do = 1;
void KvPairExecute::clear_do_() {
  do__ = 0;
}
::ms_raftcmdpb::ExecuteType KvPairExecute::do_() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.KvPairExecute.do)
  return static_cast< ::ms_raftcmdpb::ExecuteType >(do__);
}
void KvPairExecute::set_do_(::ms_raftcmdpb::ExecuteType value) {
  
  do__ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.KvPairExecute.do)
}

// .ms_raftcmdpb.KvPair kv_pair = 2;
bool KvPairExecute::has_kv_pair() const {
  return this != internal_default_instance() && kv_pair_ != NULL;
}
void KvPairExecute::clear_kv_pair() {
  if (GetArenaNoVirtual() == NULL && kv_pair_ != NULL) delete kv_pair_;
  kv_pair_ = NULL;
}
const ::ms_raftcmdpb::KvPair& KvPairExecute::kv_pair() const {
  const ::ms_raftcmdpb::KvPair* p = kv_pair_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.KvPairExecute.kv_pair)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::KvPair*>(
      &::ms_raftcmdpb::_KvPair_default_instance_);
}
::ms_raftcmdpb::KvPair* KvPairExecute::mutable_kv_pair() {
  
  if (kv_pair_ == NULL) {
    kv_pair_ = new ::ms_raftcmdpb::KvPair;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.KvPairExecute.kv_pair)
  return kv_pair_;
}
::ms_raftcmdpb::KvPair* KvPairExecute::release_kv_pair() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.KvPairExecute.kv_pair)
  
  ::ms_raftcmdpb::KvPair* temp = kv_pair_;
  kv_pair_ = NULL;
  return temp;
}
void KvPairExecute::set_allocated_kv_pair(::ms_raftcmdpb::KvPair* kv_pair) {
  delete kv_pair_;
  kv_pair_ = kv_pair;
  if (kv_pair) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.KvPairExecute.kv_pair)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteRequest::kExecsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteRequest::ExecuteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.ExecuteRequest)
}
ExecuteRequest::ExecuteRequest(const ExecuteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      execs_(from.execs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.ExecuteRequest)
}

void ExecuteRequest::SharedCtor() {
  _cached_size_ = 0;
}

ExecuteRequest::~ExecuteRequest() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.ExecuteRequest)
  SharedDtor();
}

void ExecuteRequest::SharedDtor() {
}

void ExecuteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteRequest::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteRequest& ExecuteRequest::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExecuteRequest* ExecuteRequest::New(::google::protobuf::Arena* arena) const {
  ExecuteRequest* n = new ExecuteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.ExecuteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  execs_.Clear();
  _internal_metadata_.Clear();
}

bool ExecuteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.ExecuteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ms_raftcmdpb.KvPairExecute execs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_execs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.ExecuteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.ExecuteRequest)
  return false;
#undef DO_
}

void ExecuteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.ExecuteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ms_raftcmdpb.KvPairExecute execs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->execs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->execs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.ExecuteRequest)
}

::google::protobuf::uint8* ExecuteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.ExecuteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ms_raftcmdpb.KvPairExecute execs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->execs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->execs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.ExecuteRequest)
  return target;
}

size_t ExecuteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.ExecuteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ms_raftcmdpb.KvPairExecute execs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->execs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->execs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.ExecuteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.ExecuteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.ExecuteRequest)
    MergeFrom(*source);
  }
}

void ExecuteRequest::MergeFrom(const ExecuteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.ExecuteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  execs_.MergeFrom(from.execs_);
}

void ExecuteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.ExecuteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteRequest::CopyFrom(const ExecuteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.ExecuteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteRequest::IsInitialized() const {
  return true;
}

void ExecuteRequest::Swap(ExecuteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteRequest::InternalSwap(ExecuteRequest* other) {
  using std::swap;
  execs_.InternalSwap(&other->execs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteRequest::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteRequest

// repeated .ms_raftcmdpb.KvPairExecute execs = 1;
int ExecuteRequest::execs_size() const {
  return execs_.size();
}
void ExecuteRequest::clear_execs() {
  execs_.Clear();
}
const ::ms_raftcmdpb::KvPairExecute& ExecuteRequest::execs(int index) const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.ExecuteRequest.execs)
  return execs_.Get(index);
}
::ms_raftcmdpb::KvPairExecute* ExecuteRequest::mutable_execs(int index) {
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.ExecuteRequest.execs)
  return execs_.Mutable(index);
}
::ms_raftcmdpb::KvPairExecute* ExecuteRequest::add_execs() {
  // @@protoc_insertion_point(field_add:ms_raftcmdpb.ExecuteRequest.execs)
  return execs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ms_raftcmdpb::KvPairExecute >*
ExecuteRequest::mutable_execs() {
  // @@protoc_insertion_point(field_mutable_list:ms_raftcmdpb.ExecuteRequest.execs)
  return &execs_;
}
const ::google::protobuf::RepeatedPtrField< ::ms_raftcmdpb::KvPairExecute >&
ExecuteRequest::execs() const {
  // @@protoc_insertion_point(field_list:ms_raftcmdpb.ExecuteRequest.execs)
  return execs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteResponse::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteResponse::ExecuteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.ExecuteResponse)
}
ExecuteResponse::ExecuteResponse(const ExecuteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.ExecuteResponse)
}

void ExecuteResponse::SharedCtor() {
  code_ = 0;
  _cached_size_ = 0;
}

ExecuteResponse::~ExecuteResponse() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.ExecuteResponse)
  SharedDtor();
}

void ExecuteResponse::SharedDtor() {
}

void ExecuteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteResponse::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteResponse& ExecuteResponse::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExecuteResponse* ExecuteResponse::New(::google::protobuf::Arena* arena) const {
  ExecuteResponse* n = new ExecuteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.ExecuteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0;
  _internal_metadata_.Clear();
}

bool ExecuteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.ExecuteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.ExecuteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.ExecuteResponse)
  return false;
#undef DO_
}

void ExecuteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.ExecuteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.ExecuteResponse)
}

::google::protobuf::uint8* ExecuteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.ExecuteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.ExecuteResponse)
  return target;
}

size_t ExecuteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.ExecuteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.ExecuteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.ExecuteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.ExecuteResponse)
    MergeFrom(*source);
  }
}

void ExecuteResponse::MergeFrom(const ExecuteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.ExecuteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
}

void ExecuteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.ExecuteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteResponse::CopyFrom(const ExecuteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.ExecuteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteResponse::IsInitialized() const {
  return true;
}

void ExecuteResponse::Swap(ExecuteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteResponse::InternalSwap(ExecuteResponse* other) {
  using std::swap;
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteResponse::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteResponse

// int32 code = 1;
void ExecuteResponse::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 ExecuteResponse::code() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.ExecuteResponse.code)
  return code_;
}
void ExecuteResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.ExecuteResponse.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kCmdTypeFieldNumber;
const int Request::kGetReqFieldNumber;
const int Request::kPutReqFieldNumber;
const int Request::kDeleteReqFieldNumber;
const int Request::kExecuteReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_get_req()) {
    get_req_ = new ::ms_raftcmdpb::GetRequest(*from.get_req_);
  } else {
    get_req_ = NULL;
  }
  if (from.has_put_req()) {
    put_req_ = new ::ms_raftcmdpb::PutRequest(*from.put_req_);
  } else {
    put_req_ = NULL;
  }
  if (from.has_delete_req()) {
    delete_req_ = new ::ms_raftcmdpb::DeleteRequest(*from.delete_req_);
  } else {
    delete_req_ = NULL;
  }
  if (from.has_execute_req()) {
    execute_req_ = new ::ms_raftcmdpb::ExecuteRequest(*from.execute_req_);
  } else {
    execute_req_ = NULL;
  }
  cmd_type_ = from.cmd_type_;
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.Request)
}

void Request::SharedCtor() {
  ::memset(&get_req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmd_type_) -
      reinterpret_cast<char*>(&get_req_)) + sizeof(cmd_type_));
  _cached_size_ = 0;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != internal_default_instance()) delete get_req_;
  if (this != internal_default_instance()) delete put_req_;
  if (this != internal_default_instance()) delete delete_req_;
  if (this != internal_default_instance()) delete execute_req_;
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && get_req_ != NULL) {
    delete get_req_;
  }
  get_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && put_req_ != NULL) {
    delete put_req_;
  }
  put_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && delete_req_ != NULL) {
    delete delete_req_;
  }
  delete_req_ = NULL;
  if (GetArenaNoVirtual() == NULL && execute_req_ != NULL) {
    delete execute_req_;
  }
  execute_req_ = NULL;
  cmd_type_ = 0;
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ms_raftcmdpb.CmdType cmd_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd_type(static_cast< ::ms_raftcmdpb::CmdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ms_raftcmdpb.GetRequest get_req = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ms_raftcmdpb.PutRequest put_req = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_put_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ms_raftcmdpb.DeleteRequest delete_req = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ms_raftcmdpb.ExecuteRequest execute_req = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_execute_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ms_raftcmdpb.CmdType cmd_type = 2;
  if (this->cmd_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cmd_type(), output);
  }

  // .ms_raftcmdpb.GetRequest get_req = 3;
  if (this->has_get_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->get_req_, output);
  }

  // .ms_raftcmdpb.PutRequest put_req = 4;
  if (this->has_put_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->put_req_, output);
  }

  // .ms_raftcmdpb.DeleteRequest delete_req = 5;
  if (this->has_delete_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->delete_req_, output);
  }

  // .ms_raftcmdpb.ExecuteRequest execute_req = 6;
  if (this->has_execute_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->execute_req_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ms_raftcmdpb.CmdType cmd_type = 2;
  if (this->cmd_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cmd_type(), target);
  }

  // .ms_raftcmdpb.GetRequest get_req = 3;
  if (this->has_get_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->get_req_, deterministic, target);
  }

  // .ms_raftcmdpb.PutRequest put_req = 4;
  if (this->has_put_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->put_req_, deterministic, target);
  }

  // .ms_raftcmdpb.DeleteRequest delete_req = 5;
  if (this->has_delete_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->delete_req_, deterministic, target);
  }

  // .ms_raftcmdpb.ExecuteRequest execute_req = 6;
  if (this->has_execute_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->execute_req_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ms_raftcmdpb.GetRequest get_req = 3;
  if (this->has_get_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->get_req_);
  }

  // .ms_raftcmdpb.PutRequest put_req = 4;
  if (this->has_put_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->put_req_);
  }

  // .ms_raftcmdpb.DeleteRequest delete_req = 5;
  if (this->has_delete_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->delete_req_);
  }

  // .ms_raftcmdpb.ExecuteRequest execute_req = 6;
  if (this->has_execute_req()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->execute_req_);
  }

  // .ms_raftcmdpb.CmdType cmd_type = 2;
  if (this->cmd_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_get_req()) {
    mutable_get_req()->::ms_raftcmdpb::GetRequest::MergeFrom(from.get_req());
  }
  if (from.has_put_req()) {
    mutable_put_req()->::ms_raftcmdpb::PutRequest::MergeFrom(from.put_req());
  }
  if (from.has_delete_req()) {
    mutable_delete_req()->::ms_raftcmdpb::DeleteRequest::MergeFrom(from.delete_req());
  }
  if (from.has_execute_req()) {
    mutable_execute_req()->::ms_raftcmdpb::ExecuteRequest::MergeFrom(from.execute_req());
  }
  if (from.cmd_type() != 0) {
    set_cmd_type(from.cmd_type());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(get_req_, other->get_req_);
  swap(put_req_, other->put_req_);
  swap(delete_req_, other->delete_req_);
  swap(execute_req_, other->execute_req_);
  swap(cmd_type_, other->cmd_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// .ms_raftcmdpb.CmdType cmd_type = 2;
void Request::clear_cmd_type() {
  cmd_type_ = 0;
}
::ms_raftcmdpb::CmdType Request::cmd_type() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Request.cmd_type)
  return static_cast< ::ms_raftcmdpb::CmdType >(cmd_type_);
}
void Request::set_cmd_type(::ms_raftcmdpb::CmdType value) {
  
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.Request.cmd_type)
}

// .ms_raftcmdpb.GetRequest get_req = 3;
bool Request::has_get_req() const {
  return this != internal_default_instance() && get_req_ != NULL;
}
void Request::clear_get_req() {
  if (GetArenaNoVirtual() == NULL && get_req_ != NULL) delete get_req_;
  get_req_ = NULL;
}
const ::ms_raftcmdpb::GetRequest& Request::get_req() const {
  const ::ms_raftcmdpb::GetRequest* p = get_req_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Request.get_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::GetRequest*>(
      &::ms_raftcmdpb::_GetRequest_default_instance_);
}
::ms_raftcmdpb::GetRequest* Request::mutable_get_req() {
  
  if (get_req_ == NULL) {
    get_req_ = new ::ms_raftcmdpb::GetRequest;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Request.get_req)
  return get_req_;
}
::ms_raftcmdpb::GetRequest* Request::release_get_req() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Request.get_req)
  
  ::ms_raftcmdpb::GetRequest* temp = get_req_;
  get_req_ = NULL;
  return temp;
}
void Request::set_allocated_get_req(::ms_raftcmdpb::GetRequest* get_req) {
  delete get_req_;
  get_req_ = get_req;
  if (get_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Request.get_req)
}

// .ms_raftcmdpb.PutRequest put_req = 4;
bool Request::has_put_req() const {
  return this != internal_default_instance() && put_req_ != NULL;
}
void Request::clear_put_req() {
  if (GetArenaNoVirtual() == NULL && put_req_ != NULL) delete put_req_;
  put_req_ = NULL;
}
const ::ms_raftcmdpb::PutRequest& Request::put_req() const {
  const ::ms_raftcmdpb::PutRequest* p = put_req_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Request.put_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::PutRequest*>(
      &::ms_raftcmdpb::_PutRequest_default_instance_);
}
::ms_raftcmdpb::PutRequest* Request::mutable_put_req() {
  
  if (put_req_ == NULL) {
    put_req_ = new ::ms_raftcmdpb::PutRequest;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Request.put_req)
  return put_req_;
}
::ms_raftcmdpb::PutRequest* Request::release_put_req() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Request.put_req)
  
  ::ms_raftcmdpb::PutRequest* temp = put_req_;
  put_req_ = NULL;
  return temp;
}
void Request::set_allocated_put_req(::ms_raftcmdpb::PutRequest* put_req) {
  delete put_req_;
  put_req_ = put_req;
  if (put_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Request.put_req)
}

// .ms_raftcmdpb.DeleteRequest delete_req = 5;
bool Request::has_delete_req() const {
  return this != internal_default_instance() && delete_req_ != NULL;
}
void Request::clear_delete_req() {
  if (GetArenaNoVirtual() == NULL && delete_req_ != NULL) delete delete_req_;
  delete_req_ = NULL;
}
const ::ms_raftcmdpb::DeleteRequest& Request::delete_req() const {
  const ::ms_raftcmdpb::DeleteRequest* p = delete_req_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Request.delete_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::DeleteRequest*>(
      &::ms_raftcmdpb::_DeleteRequest_default_instance_);
}
::ms_raftcmdpb::DeleteRequest* Request::mutable_delete_req() {
  
  if (delete_req_ == NULL) {
    delete_req_ = new ::ms_raftcmdpb::DeleteRequest;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Request.delete_req)
  return delete_req_;
}
::ms_raftcmdpb::DeleteRequest* Request::release_delete_req() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Request.delete_req)
  
  ::ms_raftcmdpb::DeleteRequest* temp = delete_req_;
  delete_req_ = NULL;
  return temp;
}
void Request::set_allocated_delete_req(::ms_raftcmdpb::DeleteRequest* delete_req) {
  delete delete_req_;
  delete_req_ = delete_req;
  if (delete_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Request.delete_req)
}

// .ms_raftcmdpb.ExecuteRequest execute_req = 6;
bool Request::has_execute_req() const {
  return this != internal_default_instance() && execute_req_ != NULL;
}
void Request::clear_execute_req() {
  if (GetArenaNoVirtual() == NULL && execute_req_ != NULL) delete execute_req_;
  execute_req_ = NULL;
}
const ::ms_raftcmdpb::ExecuteRequest& Request::execute_req() const {
  const ::ms_raftcmdpb::ExecuteRequest* p = execute_req_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Request.execute_req)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::ExecuteRequest*>(
      &::ms_raftcmdpb::_ExecuteRequest_default_instance_);
}
::ms_raftcmdpb::ExecuteRequest* Request::mutable_execute_req() {
  
  if (execute_req_ == NULL) {
    execute_req_ = new ::ms_raftcmdpb::ExecuteRequest;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Request.execute_req)
  return execute_req_;
}
::ms_raftcmdpb::ExecuteRequest* Request::release_execute_req() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Request.execute_req)
  
  ::ms_raftcmdpb::ExecuteRequest* temp = execute_req_;
  execute_req_ = NULL;
  return temp;
}
void Request::set_allocated_execute_req(::ms_raftcmdpb::ExecuteRequest* execute_req) {
  delete execute_req_;
  execute_req_ = execute_req;
  if (execute_req) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Request.execute_req)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kCmdTypeFieldNumber;
const int Response::kGetRespFieldNumber;
const int Response::kPutRespFieldNumber;
const int Response::kDeleteRespFieldNumber;
const int Response::kExecuteRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ms_raftcmdpb.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_get_resp()) {
    get_resp_ = new ::ms_raftcmdpb::GetResponse(*from.get_resp_);
  } else {
    get_resp_ = NULL;
  }
  if (from.has_put_resp()) {
    put_resp_ = new ::ms_raftcmdpb::PutResponse(*from.put_resp_);
  } else {
    put_resp_ = NULL;
  }
  if (from.has_delete_resp()) {
    delete_resp_ = new ::ms_raftcmdpb::DeleteResponse(*from.delete_resp_);
  } else {
    delete_resp_ = NULL;
  }
  if (from.has_execute_resp()) {
    execute_resp_ = new ::ms_raftcmdpb::ExecuteResponse(*from.execute_resp_);
  } else {
    execute_resp_ = NULL;
  }
  cmd_type_ = from.cmd_type_;
  // @@protoc_insertion_point(copy_constructor:ms_raftcmdpb.Response)
}

void Response::SharedCtor() {
  ::memset(&get_resp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cmd_type_) -
      reinterpret_cast<char*>(&get_resp_)) + sizeof(cmd_type_));
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:ms_raftcmdpb.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != internal_default_instance()) delete get_resp_;
  if (this != internal_default_instance()) delete put_resp_;
  if (this != internal_default_instance()) delete delete_resp_;
  if (this != internal_default_instance()) delete execute_resp_;
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  protobuf_ms_5fraftcmdpb_2eproto::InitDefaults();
  return *internal_default_instance();
}

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:ms_raftcmdpb.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && get_resp_ != NULL) {
    delete get_resp_;
  }
  get_resp_ = NULL;
  if (GetArenaNoVirtual() == NULL && put_resp_ != NULL) {
    delete put_resp_;
  }
  put_resp_ = NULL;
  if (GetArenaNoVirtual() == NULL && delete_resp_ != NULL) {
    delete delete_resp_;
  }
  delete_resp_ = NULL;
  if (GetArenaNoVirtual() == NULL && execute_resp_ != NULL) {
    delete execute_resp_;
  }
  execute_resp_ = NULL;
  cmd_type_ = 0;
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ms_raftcmdpb.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ms_raftcmdpb.CmdType cmd_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd_type(static_cast< ::ms_raftcmdpb::CmdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ms_raftcmdpb.GetResponse get_resp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ms_raftcmdpb.PutResponse put_resp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_put_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ms_raftcmdpb.DeleteResponse delete_resp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ms_raftcmdpb.ExecuteResponse execute_resp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_execute_resp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ms_raftcmdpb.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ms_raftcmdpb.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ms_raftcmdpb.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ms_raftcmdpb.CmdType cmd_type = 1;
  if (this->cmd_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd_type(), output);
  }

  // .ms_raftcmdpb.GetResponse get_resp = 2;
  if (this->has_get_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->get_resp_, output);
  }

  // .ms_raftcmdpb.PutResponse put_resp = 3;
  if (this->has_put_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->put_resp_, output);
  }

  // .ms_raftcmdpb.DeleteResponse delete_resp = 4;
  if (this->has_delete_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->delete_resp_, output);
  }

  // .ms_raftcmdpb.ExecuteResponse execute_resp = 5;
  if (this->has_execute_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->execute_resp_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ms_raftcmdpb.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ms_raftcmdpb.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ms_raftcmdpb.CmdType cmd_type = 1;
  if (this->cmd_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd_type(), target);
  }

  // .ms_raftcmdpb.GetResponse get_resp = 2;
  if (this->has_get_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->get_resp_, deterministic, target);
  }

  // .ms_raftcmdpb.PutResponse put_resp = 3;
  if (this->has_put_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->put_resp_, deterministic, target);
  }

  // .ms_raftcmdpb.DeleteResponse delete_resp = 4;
  if (this->has_delete_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->delete_resp_, deterministic, target);
  }

  // .ms_raftcmdpb.ExecuteResponse execute_resp = 5;
  if (this->has_execute_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->execute_resp_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ms_raftcmdpb.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ms_raftcmdpb.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ms_raftcmdpb.GetResponse get_resp = 2;
  if (this->has_get_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->get_resp_);
  }

  // .ms_raftcmdpb.PutResponse put_resp = 3;
  if (this->has_put_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->put_resp_);
  }

  // .ms_raftcmdpb.DeleteResponse delete_resp = 4;
  if (this->has_delete_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->delete_resp_);
  }

  // .ms_raftcmdpb.ExecuteResponse execute_resp = 5;
  if (this->has_execute_resp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->execute_resp_);
  }

  // .ms_raftcmdpb.CmdType cmd_type = 1;
  if (this->cmd_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ms_raftcmdpb.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ms_raftcmdpb.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ms_raftcmdpb.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ms_raftcmdpb.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_get_resp()) {
    mutable_get_resp()->::ms_raftcmdpb::GetResponse::MergeFrom(from.get_resp());
  }
  if (from.has_put_resp()) {
    mutable_put_resp()->::ms_raftcmdpb::PutResponse::MergeFrom(from.put_resp());
  }
  if (from.has_delete_resp()) {
    mutable_delete_resp()->::ms_raftcmdpb::DeleteResponse::MergeFrom(from.delete_resp());
  }
  if (from.has_execute_resp()) {
    mutable_execute_resp()->::ms_raftcmdpb::ExecuteResponse::MergeFrom(from.execute_resp());
  }
  if (from.cmd_type() != 0) {
    set_cmd_type(from.cmd_type());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ms_raftcmdpb.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ms_raftcmdpb.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  swap(get_resp_, other->get_resp_);
  swap(put_resp_, other->put_resp_);
  swap(delete_resp_, other->delete_resp_);
  swap(execute_resp_, other->execute_resp_);
  swap(cmd_type_, other->cmd_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_ms_5fraftcmdpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ms_5fraftcmdpb_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// .ms_raftcmdpb.CmdType cmd_type = 1;
void Response::clear_cmd_type() {
  cmd_type_ = 0;
}
::ms_raftcmdpb::CmdType Response::cmd_type() const {
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Response.cmd_type)
  return static_cast< ::ms_raftcmdpb::CmdType >(cmd_type_);
}
void Response::set_cmd_type(::ms_raftcmdpb::CmdType value) {
  
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:ms_raftcmdpb.Response.cmd_type)
}

// .ms_raftcmdpb.GetResponse get_resp = 2;
bool Response::has_get_resp() const {
  return this != internal_default_instance() && get_resp_ != NULL;
}
void Response::clear_get_resp() {
  if (GetArenaNoVirtual() == NULL && get_resp_ != NULL) delete get_resp_;
  get_resp_ = NULL;
}
const ::ms_raftcmdpb::GetResponse& Response::get_resp() const {
  const ::ms_raftcmdpb::GetResponse* p = get_resp_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Response.get_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::GetResponse*>(
      &::ms_raftcmdpb::_GetResponse_default_instance_);
}
::ms_raftcmdpb::GetResponse* Response::mutable_get_resp() {
  
  if (get_resp_ == NULL) {
    get_resp_ = new ::ms_raftcmdpb::GetResponse;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Response.get_resp)
  return get_resp_;
}
::ms_raftcmdpb::GetResponse* Response::release_get_resp() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Response.get_resp)
  
  ::ms_raftcmdpb::GetResponse* temp = get_resp_;
  get_resp_ = NULL;
  return temp;
}
void Response::set_allocated_get_resp(::ms_raftcmdpb::GetResponse* get_resp) {
  delete get_resp_;
  get_resp_ = get_resp;
  if (get_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Response.get_resp)
}

// .ms_raftcmdpb.PutResponse put_resp = 3;
bool Response::has_put_resp() const {
  return this != internal_default_instance() && put_resp_ != NULL;
}
void Response::clear_put_resp() {
  if (GetArenaNoVirtual() == NULL && put_resp_ != NULL) delete put_resp_;
  put_resp_ = NULL;
}
const ::ms_raftcmdpb::PutResponse& Response::put_resp() const {
  const ::ms_raftcmdpb::PutResponse* p = put_resp_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Response.put_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::PutResponse*>(
      &::ms_raftcmdpb::_PutResponse_default_instance_);
}
::ms_raftcmdpb::PutResponse* Response::mutable_put_resp() {
  
  if (put_resp_ == NULL) {
    put_resp_ = new ::ms_raftcmdpb::PutResponse;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Response.put_resp)
  return put_resp_;
}
::ms_raftcmdpb::PutResponse* Response::release_put_resp() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Response.put_resp)
  
  ::ms_raftcmdpb::PutResponse* temp = put_resp_;
  put_resp_ = NULL;
  return temp;
}
void Response::set_allocated_put_resp(::ms_raftcmdpb::PutResponse* put_resp) {
  delete put_resp_;
  put_resp_ = put_resp;
  if (put_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Response.put_resp)
}

// .ms_raftcmdpb.DeleteResponse delete_resp = 4;
bool Response::has_delete_resp() const {
  return this != internal_default_instance() && delete_resp_ != NULL;
}
void Response::clear_delete_resp() {
  if (GetArenaNoVirtual() == NULL && delete_resp_ != NULL) delete delete_resp_;
  delete_resp_ = NULL;
}
const ::ms_raftcmdpb::DeleteResponse& Response::delete_resp() const {
  const ::ms_raftcmdpb::DeleteResponse* p = delete_resp_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Response.delete_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::DeleteResponse*>(
      &::ms_raftcmdpb::_DeleteResponse_default_instance_);
}
::ms_raftcmdpb::DeleteResponse* Response::mutable_delete_resp() {
  
  if (delete_resp_ == NULL) {
    delete_resp_ = new ::ms_raftcmdpb::DeleteResponse;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Response.delete_resp)
  return delete_resp_;
}
::ms_raftcmdpb::DeleteResponse* Response::release_delete_resp() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Response.delete_resp)
  
  ::ms_raftcmdpb::DeleteResponse* temp = delete_resp_;
  delete_resp_ = NULL;
  return temp;
}
void Response::set_allocated_delete_resp(::ms_raftcmdpb::DeleteResponse* delete_resp) {
  delete delete_resp_;
  delete_resp_ = delete_resp;
  if (delete_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Response.delete_resp)
}

// .ms_raftcmdpb.ExecuteResponse execute_resp = 5;
bool Response::has_execute_resp() const {
  return this != internal_default_instance() && execute_resp_ != NULL;
}
void Response::clear_execute_resp() {
  if (GetArenaNoVirtual() == NULL && execute_resp_ != NULL) delete execute_resp_;
  execute_resp_ = NULL;
}
const ::ms_raftcmdpb::ExecuteResponse& Response::execute_resp() const {
  const ::ms_raftcmdpb::ExecuteResponse* p = execute_resp_;
  // @@protoc_insertion_point(field_get:ms_raftcmdpb.Response.execute_resp)
  return p != NULL ? *p : *reinterpret_cast<const ::ms_raftcmdpb::ExecuteResponse*>(
      &::ms_raftcmdpb::_ExecuteResponse_default_instance_);
}
::ms_raftcmdpb::ExecuteResponse* Response::mutable_execute_resp() {
  
  if (execute_resp_ == NULL) {
    execute_resp_ = new ::ms_raftcmdpb::ExecuteResponse;
  }
  // @@protoc_insertion_point(field_mutable:ms_raftcmdpb.Response.execute_resp)
  return execute_resp_;
}
::ms_raftcmdpb::ExecuteResponse* Response::release_execute_resp() {
  // @@protoc_insertion_point(field_release:ms_raftcmdpb.Response.execute_resp)
  
  ::ms_raftcmdpb::ExecuteResponse* temp = execute_resp_;
  execute_resp_ = NULL;
  return temp;
}
void Response::set_allocated_execute_resp(::ms_raftcmdpb::ExecuteResponse* execute_resp) {
  delete execute_resp_;
  execute_resp_ = execute_resp;
  if (execute_resp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:ms_raftcmdpb.Response.execute_resp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ms_raftcmdpb

// @@protoc_insertion_point(global_scope)
